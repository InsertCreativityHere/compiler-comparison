# encoding: utf-8
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.8.0-alpha.0
#
# <auto-generated>
#
# Generated from file `Test.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

require 'Ice'

module ::Test

    if not defined?(::Test::DelayedTestIntf_Mixin)

        module ::Test::DelayedTestIntf_Mixin
        end
        module DelayedTestIntfPrx_mixin

            def sleep(ms, context=nil)
                DelayedTestIntfPrx_mixin::OP_sleep.invoke(self, [ms], context)
            end
        end

        class DelayedTestIntfPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include DelayedTestIntfPrx_mixin
        end

        if not defined?(::Test::T_DelayedTestIntfPrx)
            T_DelayedTestIntf = ::Ice::__declareClass('::Test::DelayedTestIntf')
            T_DelayedTestIntfPrx = ::Ice::__declareProxy('::Test::DelayedTestIntf')
        end

        T_DelayedTestIntfPrx.defineProxy(DelayedTestIntfPrx, nil, [])

        DelayedTestIntfPrx_mixin::OP_sleep = ::Ice::__defineOperation('sleep', ::Ice::OperationMode::Normal, false, nil, [[::Ice::T_int, false, 0]], [], nil, [])
    end

    if not defined?(::Test::TestIntf_Mixin)

        module ::Test::TestIntf_Mixin
        end
        module TestIntfPrx_mixin
            include ::Test::DelayedTestIntfPrx_mixin

            def shutdown(context=nil)
                TestIntfPrx_mixin::OP_shutdown.invoke(self, [], context)
            end
        end

        class TestIntfPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include TestIntfPrx_mixin
        end

        if not defined?(::Test::T_TestIntfPrx)
            T_TestIntf = ::Ice::__declareClass('::Test::TestIntf')
            T_TestIntfPrx = ::Ice::__declareProxy('::Test::TestIntf')
        end

        T_TestIntfPrx.defineProxy(TestIntfPrx, nil, [::Test::T_DelayedTestIntfPrx])

        TestIntfPrx_mixin::OP_shutdown = ::Ice::__defineOperation('shutdown', ::Ice::OperationMode::Normal, false, nil, [], [], nil, [])
    end

    if not defined?(::Test::TestIntfBidir_Mixin)

        module ::Test::TestIntfBidir_Mixin
        end
        module TestIntfBidirPrx_mixin

            def makeSleep(aborted, ms, target, context=nil)
                TestIntfBidirPrx_mixin::OP_makeSleep.invoke(self, [aborted, ms, target], context)
            end
        end

        class TestIntfBidirPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include TestIntfBidirPrx_mixin
        end

        if not defined?(::Test::T_TestIntfBidirPrx)
            T_TestIntfBidir = ::Ice::__declareClass('::Test::TestIntfBidir')
            T_TestIntfBidirPrx = ::Ice::__declareProxy('::Test::TestIntfBidir')
        end

        T_TestIntfBidirPrx.defineProxy(TestIntfBidirPrx, nil, [])

        TestIntfBidirPrx_mixin::OP_makeSleep = ::Ice::__defineOperation('makeSleep', ::Ice::OperationMode::Normal, false, nil, [[::Ice::T_bool, false, 0], [::Ice::T_int, false, 0], [::Test::T_DelayedTestIntfPrx, false, 0]], [], nil, [])
    end
end
