# encoding: utf-8
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.10
#
# <auto-generated>
#
# Generated from file `Circle.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

require 'Ice'
require 'Point.rb'

module ::Demo

    module Gx

        if not defined?(::Demo::Gx::Circle)
            class Circle
                include ::Ice::Inspect_mixin
                def initialize(center=::Demo::Gx::Point.new, radius=0)
                    @center = center
                    @radius = radius
                end

                def hash
                    _h = 0
                    _h = 5 * _h + @center.hash
                    _h = 5 * _h + @radius.hash
                    _h % 0x7fffffff
                end

                def ==(other)
                    return false if !other.is_a? ::Demo::Gx::Circle or
                        @center != other.center or
                        @radius != other.radius
                    true
                end

                def eql?(other)
                    return other.class == self.class && other == self
                end

                attr_accessor :center, :radius
            end

            T_Circle = ::Ice::__defineStruct('::Demo::gx::Circle', Circle, [
                ["center", ::Demo::Gx::T_Point],
                ["radius", ::Ice::T_long]
            ])
        end
    end
end
