# encoding: utf-8
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.10
#
# <auto-generated>
#
# Generated from file `Square.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

require 'Ice'
require 'Point.rb'

module ::Demo

    module Gx

        if not defined?(::Demo::Gx::::Square)
            class Square
                include ::Ice::Inspect_mixin
                def initialize(p1=::Demo::Gx::::Point.new, p2=::Demo::Gx::::Point.new, p3=::Demo::Gx::::Point.new, p4=::Demo::Gx::::Point.new)
                    @p1 = p1
                    @p2 = p2
                    @p3 = p3
                    @p4 = p4
                end

                def hash
                    _h = 0
                    _h = 5 * _h + @p1.hash
                    _h = 5 * _h + @p2.hash
                    _h = 5 * _h + @p3.hash
                    _h = 5 * _h + @p4.hash
                    _h % 0x7fffffff
                end

                def ==(other)
                    return false if !other.is_a? ::Demo::Gx::::Square or
                        @p1 != other.p1 or
                        @p2 != other.p2 or
                        @p3 != other.p3 or
                        @p4 != other.p4
                    true
                end

                def eql?(other)
                    return other.class == self.class && other == self
                end

                attr_accessor :p1, :p2, :p3, :p4
            end

            T_Square = ::Ice::__defineStruct('::Demo::gx::Square', Square, [
                ["p1", ::Demo::Gx::::T_Point],
                ["p2", ::Demo::Gx::::T_Point],
                ["p3", ::Demo::Gx::::T_Point],
                ["p4", ::Demo::Gx::::T_Point]
            ])
        end
    end
end
