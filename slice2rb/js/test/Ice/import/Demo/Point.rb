# encoding: utf-8
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.8.0-alpha.0
#
# <auto-generated>
#
# Generated from file `Point.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

require 'Ice'

module ::Demo

    module Gx

        if not defined?(::Demo::Gx::Point)
            class Point
                include ::Ice::Inspect_mixin
                def initialize(x=0, y=0)
                    @x = x
                    @y = y
                end

                def hash
                    _h = 0
                    _h = 5 * _h + @x.hash
                    _h = 5 * _h + @y.hash
                    _h % 0x7fffffff
                end

                def ==(other)
                    return false if !other.is_a? ::Demo::Gx::Point or
                        @x != other.x or
                        @y != other.y
                    true
                end

                def eql?(other)
                    return other.class == self.class && other == self
                end

                attr_accessor :x, :y
            end

            T_Point = ::Ice::__defineStruct('::Demo::gx::Point', Point, [
                ["x", ::Ice::T_int],
                ["y", ::Ice::T_int]
            ])
        end
    end
end
