# encoding: utf-8
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.8.0-alpha.0
#
# <auto-generated>
#
# Generated from file `Test.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

require 'Ice'

module ::Test

    if not defined?(::Test::EchoPrx)
        module EchoPrx_mixin

            def setConnection(context=nil)
                EchoPrx_mixin::OP_setConnection.invoke(self, [], context)
            end

            def startBatch(context=nil)
                EchoPrx_mixin::OP_startBatch.invoke(self, [], context)
            end

            def flushBatch(context=nil)
                EchoPrx_mixin::OP_flushBatch.invoke(self, [], context)
            end

            def shutdown(context=nil)
                EchoPrx_mixin::OP_shutdown.invoke(self, [], context)
            end

            def supportsCompress(context=nil)
                EchoPrx_mixin::OP_supportsCompress.invoke(self, [], context)
            end
        end

        class EchoPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include EchoPrx_mixin
        end

        if not defined?(::Test::T_EchoPrx)
            T_EchoPrx = ::Ice::__declareProxy('::Test::Echo')
        end

        T_EchoPrx.defineProxy(EchoPrx, nil, [])

        EchoPrx_mixin::OP_setConnection = ::Ice::__defineOperation('setConnection', ::Ice::OperationMode::Normal, nil, [], [], nil, [])
        EchoPrx_mixin::OP_startBatch = ::Ice::__defineOperation('startBatch', ::Ice::OperationMode::Normal, nil, [], [], nil, [])
        EchoPrx_mixin::OP_flushBatch = ::Ice::__defineOperation('flushBatch', ::Ice::OperationMode::Normal, nil, [], [], nil, [])
        EchoPrx_mixin::OP_shutdown = ::Ice::__defineOperation('shutdown', ::Ice::OperationMode::Normal, nil, [], [], nil, [])
        EchoPrx_mixin::OP_supportsCompress = ::Ice::__defineOperation('supportsCompress', ::Ice::OperationMode::Normal, nil, [], [], [::Ice::T_bool, false, 0], [])
    end

    if not defined?(::Test::MyObjectPrx)
        module MyObjectPrx_mixin

            def getName(context=nil)
                MyObjectPrx_mixin::OP_getName.invoke(self, [], context)
            end

            def shutdown(context=nil)
                MyObjectPrx_mixin::OP_shutdown.invoke(self, [], context)
            end
        end

        class MyObjectPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include MyObjectPrx_mixin
        end

        if not defined?(::Test::T_MyObjectPrx)
            T_MyObjectPrx = ::Ice::__declareProxy('::Test::MyObject')
        end

        T_MyObjectPrx.defineProxy(MyObjectPrx, nil, [])

        MyObjectPrx_mixin::OP_getName = ::Ice::__defineOperation('getName', ::Ice::OperationMode::Normal, nil, [], [], [::Ice::T_string, false, 0], [])
        MyObjectPrx_mixin::OP_shutdown = ::Ice::__defineOperation('shutdown', ::Ice::OperationMode::Normal, nil, [], [], nil, [])
    end
end
