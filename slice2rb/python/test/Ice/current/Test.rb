# encoding: utf-8
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.8.0-alpha.0
#
# <auto-generated>
#
# Generated from file `Test.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

require 'Ice'
require 'Ice/Context.rb'
require 'Ice/Identity.rb'

module ::Test

    if not defined?(::Test::TestIntfPrx)
        module TestIntfPrx_mixin

            def getAdapterName(context=nil)
                TestIntfPrx_mixin::OP_getAdapterName.invoke(self, [], context)
            end

            def getConnection(context=nil)
                TestIntfPrx_mixin::OP_getConnection.invoke(self, [], context)
            end

            def getIdentity(context=nil)
                TestIntfPrx_mixin::OP_getIdentity.invoke(self, [], context)
            end

            def getFacet(context=nil)
                TestIntfPrx_mixin::OP_getFacet.invoke(self, [], context)
            end

            def getOperation(context=nil)
                TestIntfPrx_mixin::OP_getOperation.invoke(self, [], context)
            end

            def getMode(context=nil)
                TestIntfPrx_mixin::OP_getMode.invoke(self, [], context)
            end

            def getContext(context=nil)
                TestIntfPrx_mixin::OP_getContext.invoke(self, [], context)
            end

            def getRequestId(context=nil)
                TestIntfPrx_mixin::OP_getRequestId.invoke(self, [], context)
            end

            def getEncoding(context=nil)
                TestIntfPrx_mixin::OP_getEncoding.invoke(self, [], context)
            end

            def shutdown(context=nil)
                TestIntfPrx_mixin::OP_shutdown.invoke(self, [], context)
            end
        end

        class TestIntfPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include TestIntfPrx_mixin
        end

        if not defined?(::Test::T_TestIntfPrx)
            T_TestIntfPrx = ::Ice::__declareProxy('::Test::TestIntf')
        end

        T_TestIntfPrx.defineProxy(TestIntfPrx, nil, [])

        TestIntfPrx_mixin::OP_getAdapterName = ::Ice::__defineOperation('getAdapterName', ::Ice::OperationMode::Normal, nil, [], [], [::Ice::T_string, false, 0], [])
        TestIntfPrx_mixin::OP_getConnection = ::Ice::__defineOperation('getConnection', ::Ice::OperationMode::Normal, nil, [], [], [::Ice::T_string, false, 0], [])
        TestIntfPrx_mixin::OP_getIdentity = ::Ice::__defineOperation('getIdentity', ::Ice::OperationMode::Normal, nil, [], [], [::Ice::T_Identity, false, 0], [])
        TestIntfPrx_mixin::OP_getFacet = ::Ice::__defineOperation('getFacet', ::Ice::OperationMode::Normal, nil, [], [], [::Ice::T_string, false, 0], [])
        TestIntfPrx_mixin::OP_getOperation = ::Ice::__defineOperation('getOperation', ::Ice::OperationMode::Normal, nil, [], [], [::Ice::T_string, false, 0], [])
        TestIntfPrx_mixin::OP_getMode = ::Ice::__defineOperation('getMode', ::Ice::OperationMode::Normal, nil, [], [], [::Ice::T_string, false, 0], [])
        TestIntfPrx_mixin::OP_getContext = ::Ice::__defineOperation('getContext', ::Ice::OperationMode::Normal, nil, [], [], [::Ice::T_Context, false, 0], [])
        TestIntfPrx_mixin::OP_getRequestId = ::Ice::__defineOperation('getRequestId', ::Ice::OperationMode::Normal, nil, [], [], [::Ice::T_int, false, 0], [])
        TestIntfPrx_mixin::OP_getEncoding = ::Ice::__defineOperation('getEncoding', ::Ice::OperationMode::Normal, nil, [], [], [::Ice::T_string, false, 0], [])
        TestIntfPrx_mixin::OP_shutdown = ::Ice::__defineOperation('shutdown', ::Ice::OperationMode::Normal, nil, [], [], nil, [])
    end
end
