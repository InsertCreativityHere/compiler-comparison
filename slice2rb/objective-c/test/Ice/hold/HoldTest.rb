# encoding: utf-8
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.10
#
# <auto-generated>
#
# Generated from file `HoldTest.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

require 'Ice'

module ::Test

    if not defined?(::Test::::Hold_Mixin)

        module ::Test::::Hold_Mixin
        end
        module HoldPrx_mixin

            def putOnHold(seconds, context=nil)
                HoldPrx_mixin::OP_putOnHold.invoke(self, [seconds], context)
            end

            def waitForHold(context=nil)
                HoldPrx_mixin::OP_waitForHold.invoke(self, [], context)
            end

            def set(value, delay, context=nil)
                HoldPrx_mixin::OP_set.invoke(self, [value, delay], context)
            end

            def setOneway(value, expected, context=nil)
                HoldPrx_mixin::OP_setOneway.invoke(self, [value, expected], context)
            end

            def shutdown(context=nil)
                HoldPrx_mixin::OP_shutdown.invoke(self, [], context)
            end
        end

        class HoldPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include HoldPrx_mixin
        end

        if not defined?(::Test::::T_HoldPrx)
            T_Hold = ::Ice::__declareClass('::Test::Hold')
            T_HoldPrx = ::Ice::__declareProxy('::Test::Hold')
        end

        T_Hold.defineClass(::Ice::Value, -1, false, true, nil, [])

        T_HoldPrx.defineProxy(HoldPrx, nil, [])

        HoldPrx_mixin::OP_putOnHold = ::Ice::__defineOperation('putOnHold', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [[::Ice::T_int, false, 0]], [], nil, [])
        HoldPrx_mixin::OP_waitForHold = ::Ice::__defineOperation('waitForHold', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [], [], nil, [])
        HoldPrx_mixin::OP_set = ::Ice::__defineOperation('set', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [[::Ice::T_int, false, 0], [::Ice::T_int, false, 0]], [], [::Ice::T_int, false, 0], [])
        HoldPrx_mixin::OP_setOneway = ::Ice::__defineOperation('setOneway', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [[::Ice::T_int, false, 0], [::Ice::T_int, false, 0]], [], nil, [])
        HoldPrx_mixin::OP_shutdown = ::Ice::__defineOperation('shutdown', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [], [], nil, [])
    end
end
