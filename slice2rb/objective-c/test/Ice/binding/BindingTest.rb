# encoding: utf-8
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.9
#
# <auto-generated>
#
# Generated from file `BindingTest.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

require 'Ice'

module ::Test

    if not defined?(::Test::TestIntf_Mixin)

        module ::Test::TestIntf_Mixin
        end
        module TestIntfPrx_mixin

            def getAdapterName(context=nil)
                TestIntfPrx_mixin::OP_getAdapterName.invoke(self, [], context)
            end
        end

        class TestIntfPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include TestIntfPrx_mixin
        end

        if not defined?(::Test::T_TestIntfPrx)
            T_TestIntf = ::Ice::__declareClass('::Test::TestIntf')
            T_TestIntfPrx = ::Ice::__declareProxy('::Test::TestIntf')
        end

        T_TestIntf.defineClass(::Ice::Value, -1, false, true, nil, [])

        T_TestIntfPrx.defineProxy(TestIntfPrx, nil, [])

        TestIntfPrx_mixin::OP_getAdapterName = ::Ice::__defineOperation('getAdapterName', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [], [], [::Ice::T_string, false, 0], [])
    end

    if not defined?(::Test::RemoteObjectAdapter_Mixin)

        module ::Test::RemoteObjectAdapter_Mixin
        end
        module RemoteObjectAdapterPrx_mixin

            def getTestIntf(context=nil)
                RemoteObjectAdapterPrx_mixin::OP_getTestIntf.invoke(self, [], context)
            end

            def deactivate(context=nil)
                RemoteObjectAdapterPrx_mixin::OP_deactivate.invoke(self, [], context)
            end
        end

        class RemoteObjectAdapterPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include RemoteObjectAdapterPrx_mixin
        end

        if not defined?(::Test::T_RemoteObjectAdapterPrx)
            T_RemoteObjectAdapter = ::Ice::__declareClass('::Test::RemoteObjectAdapter')
            T_RemoteObjectAdapterPrx = ::Ice::__declareProxy('::Test::RemoteObjectAdapter')
        end

        T_RemoteObjectAdapter.defineClass(::Ice::Value, -1, false, true, nil, [])

        T_RemoteObjectAdapterPrx.defineProxy(RemoteObjectAdapterPrx, nil, [])

        RemoteObjectAdapterPrx_mixin::OP_getTestIntf = ::Ice::__defineOperation('getTestIntf', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [], [], [::Test::T_TestIntfPrx, false, 0], [])
        RemoteObjectAdapterPrx_mixin::OP_deactivate = ::Ice::__defineOperation('deactivate', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [], [], nil, [])
    end

    if not defined?(::Test::RemoteCommunicator_Mixin)

        module ::Test::RemoteCommunicator_Mixin
        end
        module RemoteCommunicatorPrx_mixin

            def createObjectAdapter(name, endpoints, context=nil)
                RemoteCommunicatorPrx_mixin::OP_createObjectAdapter.invoke(self, [name, endpoints], context)
            end

            def deactivateObjectAdapter(adapter, context=nil)
                RemoteCommunicatorPrx_mixin::OP_deactivateObjectAdapter.invoke(self, [adapter], context)
            end

            def shutdown(context=nil)
                RemoteCommunicatorPrx_mixin::OP_shutdown.invoke(self, [], context)
            end
        end

        class RemoteCommunicatorPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include RemoteCommunicatorPrx_mixin
        end

        if not defined?(::Test::T_RemoteCommunicatorPrx)
            T_RemoteCommunicator = ::Ice::__declareClass('::Test::RemoteCommunicator')
            T_RemoteCommunicatorPrx = ::Ice::__declareProxy('::Test::RemoteCommunicator')
        end

        T_RemoteCommunicator.defineClass(::Ice::Value, -1, false, true, nil, [])

        T_RemoteCommunicatorPrx.defineProxy(RemoteCommunicatorPrx, nil, [])

        RemoteCommunicatorPrx_mixin::OP_createObjectAdapter = ::Ice::__defineOperation('createObjectAdapter', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [[::Ice::T_string, false, 0], [::Ice::T_string, false, 0]], [], [::Test::T_RemoteObjectAdapterPrx, false, 0], [])
        RemoteCommunicatorPrx_mixin::OP_deactivateObjectAdapter = ::Ice::__defineOperation('deactivateObjectAdapter', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [[::Test::T_RemoteObjectAdapterPrx, false, 0]], [], nil, [])
        RemoteCommunicatorPrx_mixin::OP_shutdown = ::Ice::__defineOperation('shutdown', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [], [], nil, [])
    end
end
