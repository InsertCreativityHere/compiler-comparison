# encoding: utf-8
# Copyright (c) ZeroC, Inc.
#
# Ice version 3.8.0-alpha.0
#
# <auto-generated>
#
# Generated from file 'Test.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>

require 'Ice'

module ::Test

    if not defined?(::Test::T_Default)
        T_Default = ::Ice::__declareClass('::Test::Default')
    end

    if not defined?(::Test::Default)
        class Default < ::Ice::Value

            def initialize(x=0, y=0)
                @x = x
                @y = y
            end

            attr_accessor :x, :y
        end

        T_Default.defineClass(Default, -1, false, nil, [
            ['x', ::Ice::T_int, false, 0],
            ['y', ::Ice::T_int, false, 0]
        ])
    end

    if not defined?(::Test::T_NoDefault)
        T_NoDefault = ::Ice::__declareClass('::Test::NoDefault')
    end

    if not defined?(::Test::NoDefault)
        class NoDefault < ::Ice::Value

            def initialize(x=10, y=10)
                @x = x
                @y = y
            end

            attr_accessor :x, :y
        end

        T_NoDefault.defineClass(NoDefault, -1, false, nil, [
            ['x', ::Ice::T_int, false, 0],
            ['y', ::Ice::T_int, false, 0]
        ])
    end
end
