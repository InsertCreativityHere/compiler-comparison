# encoding: utf-8
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.10
#
# <auto-generated>
#
# Generated from file `Test.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

require 'Ice'

module ::Test

    if not defined?(::Test::MyException)
        class MyException < Ice::UserException
            def initialize
            end

            def to_s
                '::Test::MyException'
            end
        end

        T_MyException = ::Ice::__defineException('::Test::MyException', MyException, false, nil, [])
    end

    if not defined?(::Test::MyClass_Mixin)

        module ::Test::MyClass_Mixin
        end
        module MyClassPrx_mixin

            def opOneway(context=nil)
                MyClassPrx_mixin::OP_opOneway.invoke(self, [], context)
            end

            def opString(s1, context=nil)
                MyClassPrx_mixin::OP_opString.invoke(self, [s1], context)
            end

            def opException(context=nil)
                MyClassPrx_mixin::OP_opException.invoke(self, [], context)
            end

            def shutdown(context=nil)
                MyClassPrx_mixin::OP_shutdown.invoke(self, [], context)
            end
        end

        class MyClassPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include MyClassPrx_mixin
        end

        if not defined?(::Test::T_MyClassPrx)
            T_MyClass = ::Ice::__declareClass('::Test::MyClass')
            T_MyClassPrx = ::Ice::__declareProxy('::Test::MyClass')
        end

        T_MyClass.defineClass(::Ice::Value, -1, false, true, nil, [])

        T_MyClassPrx.defineProxy(MyClassPrx, nil, [])

        MyClassPrx_mixin::OP_opOneway = ::Ice::__defineOperation('opOneway', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [], [], nil, [])
        MyClassPrx_mixin::OP_opString = ::Ice::__defineOperation('opString', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [[::Ice::T_string, false, 0]], [[::Ice::T_string, false, 0]], [::Ice::T_string, false, 0], [])
        MyClassPrx_mixin::OP_opException = ::Ice::__defineOperation('opException', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [], [], nil, [::Test::T_MyException])
        MyClassPrx_mixin::OP_shutdown = ::Ice::__defineOperation('shutdown', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [], [], nil, [])
    end
end
