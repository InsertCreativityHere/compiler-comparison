# Copyright (c) ZeroC, Inc.
#
# Ice version 3.8.0-alpha.0
#
# <auto-generated>
#
# Generated from file 'Test.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>

require 'Ice'

module ::Test
    if not defined?(::Test::StructKey)
        class StructKey
            include Ice::Inspect_mixin
            def initialize(value=0)
                @value = value
            end

            def hash
                _h = 0
                _h = 5 * _h + @value.hash
                _h % 0x7fffffff
            end

            def ==(other)
                return false if !other.is_a? ::Test::StructKey or
                    @value != other.value
                true
            end

            def eql?(other)
                return other.class == self.class && other == self
            end

            attr_accessor :value
        end

        T_StructKey = Ice::__defineStruct('::Test::StructKey', StructKey, [["value", Ice::T_int]])
    end

    if not defined?(::Test::T_ClassKey)
        T_ClassKey = Ice::__declareClass('::Test::ClassKey')
    end

    if not defined?(::Test::ClassKey)
        class ClassKey < Ice::Value

            def initialize(value=0)
                @value = value
            end

            attr_accessor :value
        end

        T_ClassKey.defineClass(ClassKey, -1, false, nil, [['value', Ice::T_int, false, 0]])
    end
end
