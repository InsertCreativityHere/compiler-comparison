# encoding: utf-8
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.8.0-alpha.0
#
# <auto-generated>
#
# Generated from file `Test.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

require 'Ice'

module ::Test

    if not defined?(::Test::TestIntf_Mixin)

        module ::Test::TestIntf_Mixin
        end
        module TestIntfPrx_mixin

            def getAdapterId(context=nil)
                TestIntfPrx_mixin::OP_getAdapterId.invoke(self, [], context)
            end
        end

        class TestIntfPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include TestIntfPrx_mixin
        end

        if not defined?(::Test::T_TestIntfPrx)
            T_TestIntf = ::Ice::__declareClass('::Test::TestIntf')
            T_TestIntfPrx = ::Ice::__declareProxy('::Test::TestIntf')
        end

        T_TestIntfPrx.defineProxy(TestIntfPrx, nil, [])

        TestIntfPrx_mixin::OP_getAdapterId = ::Ice::__defineOperation('getAdapterId', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [], [], [::Ice::T_string, false, 0], [])
    end

    if not defined?(::Test::Controller_Mixin)

        module ::Test::Controller_Mixin
        end
        module ControllerPrx_mixin

            def activateObjectAdapter(name, adapterId, replicaGroupId, context=nil)
                ControllerPrx_mixin::OP_activateObjectAdapter.invoke(self, [name, adapterId, replicaGroupId], context)
            end

            def deactivateObjectAdapter(name, context=nil)
                ControllerPrx_mixin::OP_deactivateObjectAdapter.invoke(self, [name], context)
            end

            def addObject(oaName, id, context=nil)
                ControllerPrx_mixin::OP_addObject.invoke(self, [oaName, id], context)
            end

            def removeObject(oaName, id, context=nil)
                ControllerPrx_mixin::OP_removeObject.invoke(self, [oaName, id], context)
            end

            def shutdown(context=nil)
                ControllerPrx_mixin::OP_shutdown.invoke(self, [], context)
            end
        end

        class ControllerPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include ControllerPrx_mixin
        end

        if not defined?(::Test::T_ControllerPrx)
            T_Controller = ::Ice::__declareClass('::Test::Controller')
            T_ControllerPrx = ::Ice::__declareProxy('::Test::Controller')
        end

        T_ControllerPrx.defineProxy(ControllerPrx, nil, [])

        ControllerPrx_mixin::OP_activateObjectAdapter = ::Ice::__defineOperation('activateObjectAdapter', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [[::Ice::T_string, false, 0], [::Ice::T_string, false, 0], [::Ice::T_string, false, 0]], [], nil, [])
        ControllerPrx_mixin::OP_deactivateObjectAdapter = ::Ice::__defineOperation('deactivateObjectAdapter', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [[::Ice::T_string, false, 0]], [], nil, [])
        ControllerPrx_mixin::OP_addObject = ::Ice::__defineOperation('addObject', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [[::Ice::T_string, false, 0], [::Ice::T_string, false, 0]], [], nil, [])
        ControllerPrx_mixin::OP_removeObject = ::Ice::__defineOperation('removeObject', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [[::Ice::T_string, false, 0], [::Ice::T_string, false, 0]], [], nil, [])
        ControllerPrx_mixin::OP_shutdown = ::Ice::__defineOperation('shutdown', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [], [], nil, [])
    end
end
