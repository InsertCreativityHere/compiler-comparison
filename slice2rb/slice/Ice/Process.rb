# encoding: utf-8
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.8.0-alpha.0
#
# <auto-generated>
#
# Generated from file `Process.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

require 'Ice'

module ::Ice

    if not defined?(::Ice::Process_Mixin)

        module ::Ice::Process_Mixin
        end
        module ProcessPrx_mixin

            def shutdown(context=nil)
                ProcessPrx_mixin::OP_shutdown.invoke(self, [], context)
            end

            def writeMessage(message, fd, context=nil)
                ProcessPrx_mixin::OP_writeMessage.invoke(self, [message, fd], context)
            end
        end

        class ProcessPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include ProcessPrx_mixin
        end

        if not defined?(::Ice::T_ProcessPrx)
            T_Process = ::Ice::__declareClass('::Ice::Process')
            T_ProcessPrx = ::Ice::__declareProxy('::Ice::Process')
        end

        T_ProcessPrx.defineProxy(ProcessPrx, nil, [])

        ProcessPrx_mixin::OP_shutdown = ::Ice::__defineOperation('shutdown', ::Ice::OperationMode::Normal, false, nil, [], [], nil, [])
        ProcessPrx_mixin::OP_writeMessage = ::Ice::__defineOperation('writeMessage', ::Ice::OperationMode::Normal, false, nil, [[::Ice::T_string, false, 0], [::Ice::T_int, false, 0]], [], nil, [])
    end
end
