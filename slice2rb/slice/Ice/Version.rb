# encoding: utf-8
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.8.0-alpha.0
#
# <auto-generated>
#
# Generated from file `Version.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

require 'Ice'

module ::Ice

    if not defined?(::Ice::ProtocolVersion)
        class ProtocolVersion
            include ::Ice::Inspect_mixin
            def initialize(major=0, minor=0)
                @major = major
                @minor = minor
            end

            def hash
                _h = 0
                _h = 5 * _h + @major.hash
                _h = 5 * _h + @minor.hash
                _h % 0x7fffffff
            end

            def ==(other)
                return false if !other.is_a? ::Ice::ProtocolVersion or
                    @major != other.major or
                    @minor != other.minor
                true
            end

            def eql?(other)
                return other.class == self.class && other == self
            end

            attr_accessor :major, :minor
        end

        T_ProtocolVersion = ::Ice::__defineStruct('::Ice::ProtocolVersion', ProtocolVersion, [
            ["major", ::Ice::T_byte],
            ["minor", ::Ice::T_byte]
        ])
    end

    if not defined?(::Ice::EncodingVersion)
        class EncodingVersion
            include ::Ice::Inspect_mixin
            def initialize(major=0, minor=0)
                @major = major
                @minor = minor
            end

            def hash
                _h = 0
                _h = 5 * _h + @major.hash
                _h = 5 * _h + @minor.hash
                _h % 0x7fffffff
            end

            def ==(other)
                return false if !other.is_a? ::Ice::EncodingVersion or
                    @major != other.major or
                    @minor != other.minor
                true
            end

            def eql?(other)
                return other.class == self.class && other == self
            end

            attr_accessor :major, :minor
        end

        T_EncodingVersion = ::Ice::__defineStruct('::Ice::EncodingVersion', EncodingVersion, [
            ["major", ::Ice::T_byte],
            ["minor", ::Ice::T_byte]
        ])
    end
end
