# encoding: utf-8
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.9
#
# <auto-generated>
#
# Generated from file `Session.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

require 'Ice'
require 'Glacier2/Session.rb'
require 'Exception.rb'

module ::IceGrid

    if not defined?(::IceGrid::Session_Mixin)

        module ::IceGrid::Session_Mixin
        end
        module SessionPrx_mixin
            include ::Glacier2::SessionPrx_mixin

            def keepAlive(context=nil)
                SessionPrx_mixin::OP_keepAlive.invoke(self, [], context)
            end

            def allocateObjectById(id, context=nil)
                SessionPrx_mixin::OP_allocateObjectById.invoke(self, [id], context)
            end

            def allocateObjectByType(type, context=nil)
                SessionPrx_mixin::OP_allocateObjectByType.invoke(self, [type], context)
            end

            def releaseObject(id, context=nil)
                SessionPrx_mixin::OP_releaseObject.invoke(self, [id], context)
            end

            def setAllocationTimeout(timeout, context=nil)
                SessionPrx_mixin::OP_setAllocationTimeout.invoke(self, [timeout], context)
            end
        end

        class SessionPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include SessionPrx_mixin
        end

        if not defined?(::IceGrid::T_SessionPrx)
            T_Session = ::Ice::__declareClass('::IceGrid::Session')
            T_SessionPrx = ::Ice::__declareProxy('::IceGrid::Session')
        end

        T_Session.defineClass(::Ice::Value, -1, false, true, nil, [])

        T_SessionPrx.defineProxy(SessionPrx, nil, [::Glacier2::T_SessionPrx])

        SessionPrx_mixin::OP_keepAlive = ::Ice::__defineOperation('keepAlive', ::Ice::OperationMode::Idempotent, ::Ice::OperationMode::Idempotent, false, nil, [], [], nil, [])
        SessionPrx_mixin::OP_allocateObjectById = ::Ice::__defineOperation('allocateObjectById', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, true, nil, [[::Ice::T_Identity, false, 0]], [], [::Ice::T_ObjectPrx, false, 0], [::IceGrid::T_ObjectNotRegisteredException, ::IceGrid::T_AllocationException])
        SessionPrx_mixin::OP_allocateObjectByType = ::Ice::__defineOperation('allocateObjectByType', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, true, nil, [[::Ice::T_string, false, 0]], [], [::Ice::T_ObjectPrx, false, 0], [::IceGrid::T_AllocationException])
        SessionPrx_mixin::OP_releaseObject = ::Ice::__defineOperation('releaseObject', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [[::Ice::T_Identity, false, 0]], [], nil, [::IceGrid::T_ObjectNotRegisteredException, ::IceGrid::T_AllocationException])
        SessionPrx_mixin::OP_setAllocationTimeout = ::Ice::__defineOperation('setAllocationTimeout', ::Ice::OperationMode::Idempotent, ::Ice::OperationMode::Idempotent, false, nil, [[::Ice::T_int, false, 0]], [], nil, [])
    end
end
