# encoding: utf-8
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.10
#
# <auto-generated>
#
# Generated from file `UserAccountMapper.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

require 'Ice'

module ::IceGrid

    if not defined?(::IceGrid::UserAccountNotFoundException)
        class UserAccountNotFoundException < Ice::UserException
            def initialize
            end

            def to_s
                '::IceGrid::UserAccountNotFoundException'
            end
        end

        T_UserAccountNotFoundException = ::Ice::__defineException('::IceGrid::UserAccountNotFoundException', UserAccountNotFoundException, false, nil, [])
    end

    if not defined?(::IceGrid::UserAccountMapper_Mixin)

        module ::IceGrid::UserAccountMapper_Mixin
        end
        module UserAccountMapperPrx_mixin

            def getUserAccount(user, context=nil)
                UserAccountMapperPrx_mixin::OP_getUserAccount.invoke(self, [user], context)
            end
        end

        class UserAccountMapperPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include UserAccountMapperPrx_mixin
        end

        if not defined?(::IceGrid::T_UserAccountMapperPrx)
            T_UserAccountMapper = ::Ice::__declareClass('::IceGrid::UserAccountMapper')
            T_UserAccountMapperPrx = ::Ice::__declareProxy('::IceGrid::UserAccountMapper')
        end

        T_UserAccountMapperPrx.defineProxy(UserAccountMapperPrx, nil, [])

        UserAccountMapperPrx_mixin::OP_getUserAccount = ::Ice::__defineOperation('getUserAccount', ::Ice::OperationMode::Normal, ::Ice::OperationMode::Normal, false, nil, [[::Ice::T_string, false, 0]], [], [::Ice::T_string, false, 0], [::IceGrid::T_UserAccountNotFoundException])
    end
end
