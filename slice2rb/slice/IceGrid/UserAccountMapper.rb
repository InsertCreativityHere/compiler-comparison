# Copyright (c) ZeroC, Inc.
#
# Ice version 3.8.0-alpha.0
#
# <auto-generated>
#
# Generated from file 'UserAccountMapper.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>

require 'Ice'

module ::IceGrid

    if not defined?(::IceGrid::UserAccountNotFoundException)
        class UserAccountNotFoundException < Ice::UserException
            def to_s
                '::IceGrid::UserAccountNotFoundException'
            end
        end

        T_UserAccountNotFoundException = ::Ice::__defineException('::IceGrid::UserAccountNotFoundException', UserAccountNotFoundException, nil, [])
    end

    if not defined?(::IceGrid::T_UserAccountMapperPrx)
        T_UserAccountMapperPrx = ::Ice::__declareProxy('::IceGrid::UserAccountMapper')
    end

    if not defined?(::IceGrid::UserAccountMapperPrx)
        module UserAccountMapperPrx_mixin

            def getUserAccount(user, context=nil)
                UserAccountMapperPrx_mixin::OP_getUserAccount.invoke(self, [user], context)
            end
        end

        class UserAccountMapperPrx < ::Ice::ObjectPrx
            include ::Ice::Proxy_mixin
            include UserAccountMapperPrx_mixin
        end

        T_UserAccountMapperPrx.defineProxy(UserAccountMapperPrx, nil, [])

        UserAccountMapperPrx_mixin::OP_getUserAccount = ::Ice::__defineOperation('getUserAccount', ::Ice::OperationMode::Normal, nil, [[::Ice::T_string, false, 0]], [], [::Ice::T_string, false, 0], [::IceGrid::T_UserAccountNotFoundException])
    end
end
