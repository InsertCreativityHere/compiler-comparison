# encoding: utf-8
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.8.0-alpha.0
#
# <auto-generated>
#
# Generated from file `FileInfo.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

require 'Ice'
require 'Ice/BuiltinSequences.rb'

module ::IcePatch2

    if not defined?(::IcePatch2::FileInfo)
        class FileInfo
            include ::Ice::Inspect_mixin
            def initialize(path='', checksum=nil, size=0, executable=false)
                @path = path
                @checksum = checksum
                @size = size
                @executable = executable
            end

            def hash
                _h = 0
                _h = 5 * _h + @path.hash
                _h = 5 * _h + @checksum.hash
                _h = 5 * _h + @size.hash
                _h = 5 * _h + @executable.hash
                _h % 0x7fffffff
            end

            def ==(other)
                return false if !other.is_a? ::IcePatch2::FileInfo or
                    @path != other.path or
                    @checksum != other.checksum or
                    @size != other.size or
                    @executable != other.executable
                true
            end

            def eql?(other)
                return other.class == self.class && other == self
            end

            attr_accessor :path, :checksum, :size, :executable
        end

        T_FileInfo = ::Ice::__defineStruct('::IcePatch2::FileInfo', FileInfo, [
            ["path", ::Ice::T_string],
            ["checksum", ::Ice::T_ByteSeq],
            ["size", ::Ice::T_int],
            ["executable", ::Ice::T_bool]
        ])
    end

    if not defined?(::IcePatch2::T_FileInfoSeq)
        T_FileInfoSeq = ::Ice::__defineSequence('::IcePatch2::FileInfoSeq', ::IcePatch2::T_FileInfo)
    end

    if not defined?(::IcePatch2::LargeFileInfo)
        class LargeFileInfo
            include ::Ice::Inspect_mixin
            def initialize(path='', checksum=nil, size=0, executable=false)
                @path = path
                @checksum = checksum
                @size = size
                @executable = executable
            end

            def hash
                _h = 0
                _h = 5 * _h + @path.hash
                _h = 5 * _h + @checksum.hash
                _h = 5 * _h + @size.hash
                _h = 5 * _h + @executable.hash
                _h % 0x7fffffff
            end

            def ==(other)
                return false if !other.is_a? ::IcePatch2::LargeFileInfo or
                    @path != other.path or
                    @checksum != other.checksum or
                    @size != other.size or
                    @executable != other.executable
                true
            end

            def eql?(other)
                return other.class == self.class && other == self
            end

            attr_accessor :path, :checksum, :size, :executable
        end

        T_LargeFileInfo = ::Ice::__defineStruct('::IcePatch2::LargeFileInfo', LargeFileInfo, [
            ["path", ::Ice::T_string],
            ["checksum", ::Ice::T_ByteSeq],
            ["size", ::Ice::T_long],
            ["executable", ::Ice::T_bool]
        ])
    end

    if not defined?(::IcePatch2::T_LargeFileInfoSeq)
        T_LargeFileInfoSeq = ::Ice::__defineSequence('::IcePatch2::LargeFileInfoSeq', ::IcePatch2::T_LargeFileInfo)
    end
end
