//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Internal.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package IceGrid;

public interface DatabaseObserver extends com.zeroc.IceGrid.ApplicationObserver,
                                          com.zeroc.IceGrid.ObjectObserver,
                                          com.zeroc.IceGrid.AdapterObserver
{
    /** @hidden */
    static final String[] _iceIds =
    {
        "::Ice::Object",
        "::IceGrid::AdapterObserver",
        "::IceGrid::ApplicationObserver",
        "::IceGrid::DatabaseObserver",
        "::IceGrid::ObjectObserver"
    };

    @Override
    default String[] ice_ids(com.zeroc.Ice.Current current)
    {
        return _iceIds;
    }

    @Override
    default String ice_id(com.zeroc.Ice.Current current)
    {
        return ice_staticId();
    }

    static String ice_staticId()
    {
        return "::IceGrid::DatabaseObserver";
    }

    /** @hidden */
    @Override
    default java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceDispatch(com.zeroc.IceInternal.Incoming in, com.zeroc.Ice.Current current)
        throws com.zeroc.Ice.UserException
    {
        return switch (current.operation)
        {
            case "applicationInit" -> com.zeroc.IceGrid.ApplicationObserver._iceD_applicationInit(this, in, current);
            case "applicationAdded" -> com.zeroc.IceGrid.ApplicationObserver._iceD_applicationAdded(this, in, current);
            case "applicationRemoved" -> com.zeroc.IceGrid.ApplicationObserver._iceD_applicationRemoved(this, in, current);
            case "applicationUpdated" -> com.zeroc.IceGrid.ApplicationObserver._iceD_applicationUpdated(this, in, current);
            case "objectInit" -> com.zeroc.IceGrid.ObjectObserver._iceD_objectInit(this, in, current);
            case "objectAdded" -> com.zeroc.IceGrid.ObjectObserver._iceD_objectAdded(this, in, current);
            case "objectUpdated" -> com.zeroc.IceGrid.ObjectObserver._iceD_objectUpdated(this, in, current);
            case "objectRemoved" -> com.zeroc.IceGrid.ObjectObserver._iceD_objectRemoved(this, in, current);
            case "adapterInit" -> com.zeroc.IceGrid.AdapterObserver._iceD_adapterInit(this, in, current);
            case "adapterAdded" -> com.zeroc.IceGrid.AdapterObserver._iceD_adapterAdded(this, in, current);
            case "adapterUpdated" -> com.zeroc.IceGrid.AdapterObserver._iceD_adapterUpdated(this, in, current);
            case "adapterRemoved" -> com.zeroc.IceGrid.AdapterObserver._iceD_adapterRemoved(this, in, current);
            case "ice_id" -> com.zeroc.Ice.Object._iceD_ice_id(this, in, current);
            case "ice_ids" -> com.zeroc.Ice.Object._iceD_ice_ids(this, in, current);
            case "ice_isA" -> com.zeroc.Ice.Object._iceD_ice_isA(this, in, current);
            case "ice_ping" -> com.zeroc.Ice.Object._iceD_ice_ping(this, in, current);
            default -> throw new com.zeroc.Ice.OperationNotExistException();
        };
    }
}
