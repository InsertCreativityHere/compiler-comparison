//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `Internal.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package IceGrid;

public class InternalDistributionDescriptor extends com.zeroc.Ice.Value
{
    public InternalDistributionDescriptor()
    {
        this.icepatch = "";
    }

    public InternalDistributionDescriptor(String icepatch, java.util.List<java.lang.String> directories)
    {
        this.icepatch = icepatch;
        this.directories = directories;
    }

    /**
     * The proxy of the IcePatch2 server.
     **/
    public String icepatch;

    /**
     * The source directories.
     **/
    public java.util.List<java.lang.String> directories;

    public InternalDistributionDescriptor clone()
    {
        return (InternalDistributionDescriptor)super.clone();
    }

    public static String ice_staticId()
    {
        return "::IceGrid::InternalDistributionDescriptor";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    /** @hidden */
    public static final long serialVersionUID = 8094394713629713453L;

    /** @hidden */
    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        ostr_.writeString(icepatch);
        if(directories == null)
        {
            ostr_.writeSize(0);
        }
        else
        {
            ostr_.writeSize(directories.size());
            for(String elem : directories)
            {
                ostr_.writeString(elem);
            }
        }
        ostr_.endSlice();
    }

    /** @hidden */
    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        icepatch = istr_.readString();
        directories = new java.util.LinkedList<String>();
        final int len0 = istr_.readAndCheckSeqSize(1);
        for(int i0 = 0; i0 < len0; i0++)
        {
            String elem;
            elem = istr_.readString();
            directories.add(elem);
        }
        istr_.endSlice();
    }
}
