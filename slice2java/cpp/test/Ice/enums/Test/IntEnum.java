// Copyright (c) ZeroC, Inc.
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file 'Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>

package Test;

public enum IntEnum
{
    ienum1(0),
    ienum2(1),
    ienum3(10),
    ienum4(11),
    ienum5(20),
    ienum6(21),
    ienum7(30),
    ienum8(31),
    ienum9(40),
    ienum10(41),
    ienum11(2147483647),
    ienum12(2147483646);

    public int value()
    {
        return _value;
    }

    public static IntEnum valueOf(int v)
    {
        switch(v)
        {
        case 0:
            return ienum1;
        case 1:
            return ienum2;
        case 10:
            return ienum3;
        case 11:
            return ienum4;
        case 20:
            return ienum5;
        case 21:
            return ienum6;
        case 30:
            return ienum7;
        case 31:
            return ienum8;
        case 40:
            return ienum9;
        case 41:
            return ienum10;
        case 2147483647:
            return ienum11;
        case 2147483646:
            return ienum12;
        }
        return null;
    }

    private IntEnum(int v)
    {
        _value = v;
    }

    public void ice_write(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeEnum(_value, 2147483647);
    }

    public static void ice_write(com.zeroc.Ice.OutputStream ostr, IntEnum v)
    {
        if(v == null)
        {
            ostr.writeEnum(Test.IntEnum.ienum1.value(), 2147483647);
        }
        else
        {
            ostr.writeEnum(v.value(), 2147483647);
        }
    }

    public static IntEnum ice_read(com.zeroc.Ice.InputStream istr)
    {
        int v = istr.readEnum(2147483647);
        return validate(v);
    }

    public static void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<IntEnum> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    public static void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, IntEnum v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.Size))
        {
            ice_write(ostr, v);
        }
    }

    public static java.util.Optional<IntEnum> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.Size))
        {
            return java.util.Optional.of(ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static IntEnum validate(int v)
    {
        final IntEnum e = valueOf(v);
        if(e == null)
        {
            throw new com.zeroc.Ice.MarshalException("enumerator value " + v + " is out of range");
        }
        return e;
    }

    private final int _value;
}
