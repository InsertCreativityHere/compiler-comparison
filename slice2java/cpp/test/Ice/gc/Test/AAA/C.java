//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.9
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Test.AAA;

public class C extends com.zeroc.Ice.Value
{
    public C()
    {
        this.z = new BStruct();
    }

    public C(com.zeroc.Ice.Value obj1, com.zeroc.Ice.Value obj2, B b1, B b2, B[] x, java.util.Map<java.lang.Integer, B> y, BStruct z)
    {
        this.obj1 = obj1;
        this.obj2 = obj2;
        this.b1 = b1;
        this.b2 = b2;
        this.x = x;
        this.y = y;
        this.z = z;
    }

    public com.zeroc.Ice.Value obj1;

    public com.zeroc.Ice.Value obj2;

    public B b1;

    public B b2;

    public B[] x;

    public java.util.Map<java.lang.Integer, B> y;

    public BStruct z;

    public C clone()
    {
        return (C)super.clone();
    }

    public static String ice_staticId()
    {
        return "::Test::AAA::C";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    /** @hidden */
    public static final long serialVersionUID = 2622923715366937433L;

    /** @hidden */
    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        ostr_.writeValue(obj1);
        ostr_.writeValue(obj2);
        ostr_.writeValue(b1);
        ostr_.writeValue(b2);
        BSeqHelper.write(ostr_, x);
        BDictHelper.write(ostr_, y);
        BStruct.ice_write(ostr_, z);
        ostr_.endSlice();
    }

    /** @hidden */
    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        istr_.readValue(v -> obj1 = v, com.zeroc.Ice.Value.class);
        istr_.readValue(v -> obj2 = v, com.zeroc.Ice.Value.class);
        istr_.readValue(v -> b1 = v, B.class);
        istr_.readValue(v -> b2 = v, B.class);
        x = BSeqHelper.read(istr_);
        y = BDictHelper.read(istr_);
        z = BStruct.ice_read(istr_);
        istr_.endSlice();
    }
}
