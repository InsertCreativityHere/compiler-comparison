//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package test.Ice.location.Test;

public interface TestLocatorRegistry extends com.zeroc.Ice.LocatorRegistry
{
    void addObject(com.zeroc.Ice.ObjectPrx obj, com.zeroc.Ice.Current current);

    /** @hidden */
    static final String[] _iceIds =
    {
        "::Ice::LocatorRegistry",
        "::Ice::Object",
        "::Test::TestLocatorRegistry"
    };

    @Override
    default String[] ice_ids(com.zeroc.Ice.Current current)
    {
        return _iceIds;
    }

    @Override
    default String ice_id(com.zeroc.Ice.Current current)
    {
        return ice_staticId();
    }

    static String ice_staticId()
    {
        return "::Test::TestLocatorRegistry";
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_addObject(TestLocatorRegistry obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        com.zeroc.Ice.InputStream istr = inS.startReadParams();
        com.zeroc.Ice.ObjectPrx iceP_obj;
        iceP_obj = istr.readProxy();
        inS.endReadParams();
        obj.addObject(iceP_obj, current);
        return inS.setResult(inS.writeEmptyParams());
    }

    /** @hidden */
    @Override
    default java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceDispatch(com.zeroc.IceInternal.Incoming in, com.zeroc.Ice.Current current)
        throws com.zeroc.Ice.UserException
    {
        return switch (current.operation)
        {
            case "setAdapterDirectProxy" -> com.zeroc.Ice.LocatorRegistry._iceD_setAdapterDirectProxy(this, in, current);
            case "setReplicatedAdapterDirectProxy" -> com.zeroc.Ice.LocatorRegistry._iceD_setReplicatedAdapterDirectProxy(this, in, current);
            case "setServerProcessProxy" -> com.zeroc.Ice.LocatorRegistry._iceD_setServerProcessProxy(this, in, current);
            case "addObject" -> TestLocatorRegistry._iceD_addObject(this, in, current);
            case "ice_id" -> com.zeroc.Ice.Object._iceD_ice_id(this, in, current);
            case "ice_ids" -> com.zeroc.Ice.Object._iceD_ice_ids(this, in, current);
            case "ice_isA" -> com.zeroc.Ice.Object._iceD_ice_isA(this, in, current);
            case "ice_ping" -> com.zeroc.Ice.Object._iceD_ice_ping(this, in, current);
            default -> throw new com.zeroc.Ice.OperationNotExistException();
        };
    }
}
