// Copyright (c) ZeroC, Inc.
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file 'Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>

package test.Ice.serialize.Test;

public class Derived extends Base
{
    public Derived()
    {
        super();
    }

    public Derived(Base b, com.zeroc.Ice.Value o, Struct1 s, byte[] seq1, int[] seq2, MyEnum[] seq3, Base[] seq4, java.util.Map<java.lang.Byte, java.lang.Boolean> d1, java.util.Map<java.lang.Short, java.lang.Integer> d2, java.util.Map<java.lang.String, MyEnum> d3, java.util.Map<java.lang.String, Base> d4, com.zeroc.Ice.ObjectPrx p)
    {
        super(b, o, s, seq1, seq2, seq3, seq4, d1, d2, d3, d4);
        this.p = p;
    }

    public com.zeroc.Ice.ObjectPrx p;

    public Derived clone()
    {
        return (Derived)super.clone();
    }

    public static String ice_staticId()
    {
        return "::Test::Derived";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    /** @hidden */
    private static final long serialVersionUID = 1003L;

    /** @hidden */
    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, false);
        ostr_.writeProxy(p);
        ostr_.endSlice();
        super._iceWriteImpl(ostr_);
    }

    /** @hidden */
    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        p = istr_.readProxy();
        istr_.endSlice();
        super._iceReadImpl(istr_);
    }
}
