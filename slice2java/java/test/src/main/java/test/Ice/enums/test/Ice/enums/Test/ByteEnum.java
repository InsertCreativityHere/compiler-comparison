//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package test.Ice.enums.Test;

public enum ByteEnum
{
    benum1(0),
    benum2(1),
    benum3(10),
    benum4(11),
    benum5(20),
    benum6(21),
    benum7(30),
    benum8(31),
    benum9(40),
    benum10(41),
    benum11(126);

    public int value()
    {
        return _value;
    }

    public static ByteEnum valueOf(int v)
    {
        switch(v)
        {
        case 0:
            return benum1;
        case 1:
            return benum2;
        case 10:
            return benum3;
        case 11:
            return benum4;
        case 20:
            return benum5;
        case 21:
            return benum6;
        case 30:
            return benum7;
        case 31:
            return benum8;
        case 40:
            return benum9;
        case 41:
            return benum10;
        case 126:
            return benum11;
        }
        return null;
    }

    private ByteEnum(int v)
    {
        _value = v;
    }

    public void ice_write(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeEnum(_value, 126);
    }

    public static void ice_write(com.zeroc.Ice.OutputStream ostr, ByteEnum v)
    {
        if(v == null)
        {
            ostr.writeEnum(test.Ice.enums.Test.ByteEnum.benum1.value(), 126);
        }
        else
        {
            ostr.writeEnum(v.value(), 126);
        }
    }

    public static ByteEnum ice_read(com.zeroc.Ice.InputStream istr)
    {
        int v = istr.readEnum(126);
        return validate(v);
    }

    public static void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<ByteEnum> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    public static void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, ByteEnum v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.Size))
        {
            ice_write(ostr, v);
        }
    }

    public static java.util.Optional<ByteEnum> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.Size))
        {
            return java.util.Optional.of(ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static ByteEnum validate(int v)
    {
        final ByteEnum e = valueOf(v);
        if(e == null)
        {
            throw new com.zeroc.Ice.MarshalException("enumerator value " + v + " is out of range");
        }
        return e;
    }

    private final int _value;
}
