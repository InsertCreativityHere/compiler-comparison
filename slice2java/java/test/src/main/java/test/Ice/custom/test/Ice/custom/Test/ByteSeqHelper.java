//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.9
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package test.Ice.custom.Test;

/**
 * Helper class for marshaling/unmarshaling ByteSeq.
 **/
public final class ByteSeqHelper
{
    public static void write(com.zeroc.Ice.OutputStream ostr, java.util.List<java.lang.Byte> v)
    {
        if(v == null)
        {
            ostr.writeSize(0);
        }
        else
        {
            ostr.writeSize(v.size());
            for(byte elem : v)
            {
                ostr.writeByte(elem);
            }
        }
    }

    public static java.util.List<java.lang.Byte> read(com.zeroc.Ice.InputStream istr)
    {
        final java.util.List<java.lang.Byte> v;
        v = new java.util.ArrayList<Byte>();
        final int len0 = istr.readAndCheckSeqSize(1);
        for(int i0 = 0; i0 < len0; i0++)
        {
            byte elem;
            elem = istr.readByte();
            v.add(elem);
        }
        return v;
    }

    public static void write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<java.util.List<java.lang.Byte>> v)
    {
        if(v != null && v.isPresent())
        {
            write(ostr, tag, v.get());
        }
    }

    public static void write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.List<java.lang.Byte> v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.VSize))
        {
            ByteSeqHelper.write(ostr, v);
        }
    }

    public static java.util.Optional<java.util.List<java.lang.Byte>> read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.VSize))
        {
            java.util.List<java.lang.Byte> v;
            v = ByteSeqHelper.read(istr);
            return java.util.Optional.of(v);
        }
        else
        {
            return java.util.Optional.empty();
        }
    }
}
