//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package test.Ice.operations.Test;

public interface MyClassPrx extends com.zeroc.Ice.ObjectPrx
{
    default void shutdown()
    {
        shutdown(com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default void shutdown(java.util.Map<String, String> context)
    {
        _iceI_shutdownAsync(context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<Void> shutdownAsync()
    {
        return _iceI_shutdownAsync(com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<Void> shutdownAsync(java.util.Map<String, String> context)
    {
        return _iceI_shutdownAsync(context, false);
    }

    /**
     * @hidden
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<Void> _iceI_shutdownAsync(java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<Void> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "shutdown", null, sync, null);
        f.invoke(false, context, com.zeroc.Ice.FormatType.DefaultFormat, null, null);
        return f;
    }

    default boolean supportsCompress()
    {
        return supportsCompress(com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default boolean supportsCompress(java.util.Map<String, String> context)
    {
        return _iceI_supportsCompressAsync(context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<java.lang.Boolean> supportsCompressAsync()
    {
        return _iceI_supportsCompressAsync(com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<java.lang.Boolean> supportsCompressAsync(java.util.Map<String, String> context)
    {
        return _iceI_supportsCompressAsync(context, false);
    }

    /**
     * @hidden
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<java.lang.Boolean> _iceI_supportsCompressAsync(java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<java.lang.Boolean> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "supportsCompress", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, null, istr -> {
                     boolean ret;
                     ret = istr.readBool();
                     return ret;
                 });
        return f;
    }

    default void opVoid()
    {
        opVoid(com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default void opVoid(java.util.Map<String, String> context)
    {
        _iceI_opVoidAsync(context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<Void> opVoidAsync()
    {
        return _iceI_opVoidAsync(com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<Void> opVoidAsync(java.util.Map<String, String> context)
    {
        return _iceI_opVoidAsync(context, false);
    }

    /**
     * @hidden
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<Void> _iceI_opVoidAsync(java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<Void> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opVoid", null, sync, null);
        f.invoke(false, context, com.zeroc.Ice.FormatType.DefaultFormat, null, null);
        return f;
    }

    default MyClass.OpByteResult opByte(byte p1, byte p2)
    {
        return opByte(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpByteResult opByte(byte p1, byte p2, java.util.Map<String, String> context)
    {
        return _iceI_opByteAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpByteResult> opByteAsync(byte p1, byte p2)
    {
        return _iceI_opByteAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpByteResult> opByteAsync(byte p1, byte p2, java.util.Map<String, String> context)
    {
        return _iceI_opByteAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpByteResult> _iceI_opByteAsync(byte iceP_p1, byte iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpByteResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opByte", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeByte(iceP_p1);
                     ostr.writeByte(iceP_p2);
                 }, istr -> {
                     MyClass.OpByteResult ret = new MyClass.OpByteResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpBoolResult opBool(boolean p1, boolean p2)
    {
        return opBool(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpBoolResult opBool(boolean p1, boolean p2, java.util.Map<String, String> context)
    {
        return _iceI_opBoolAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpBoolResult> opBoolAsync(boolean p1, boolean p2)
    {
        return _iceI_opBoolAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpBoolResult> opBoolAsync(boolean p1, boolean p2, java.util.Map<String, String> context)
    {
        return _iceI_opBoolAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpBoolResult> _iceI_opBoolAsync(boolean iceP_p1, boolean iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpBoolResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opBool", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeBool(iceP_p1);
                     ostr.writeBool(iceP_p2);
                 }, istr -> {
                     MyClass.OpBoolResult ret = new MyClass.OpBoolResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpShortIntLongResult opShortIntLong(short p1, int p2, long p3)
    {
        return opShortIntLong(p1, p2, p3, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpShortIntLongResult opShortIntLong(short p1, int p2, long p3, java.util.Map<String, String> context)
    {
        return _iceI_opShortIntLongAsync(p1, p2, p3, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpShortIntLongResult> opShortIntLongAsync(short p1, int p2, long p3)
    {
        return _iceI_opShortIntLongAsync(p1, p2, p3, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpShortIntLongResult> opShortIntLongAsync(short p1, int p2, long p3, java.util.Map<String, String> context)
    {
        return _iceI_opShortIntLongAsync(p1, p2, p3, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param iceP_p3 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpShortIntLongResult> _iceI_opShortIntLongAsync(short iceP_p1, int iceP_p2, long iceP_p3, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpShortIntLongResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opShortIntLong", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeShort(iceP_p1);
                     ostr.writeInt(iceP_p2);
                     ostr.writeLong(iceP_p3);
                 }, istr -> {
                     MyClass.OpShortIntLongResult ret = new MyClass.OpShortIntLongResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpFloatDoubleResult opFloatDouble(float p1, double p2)
    {
        return opFloatDouble(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpFloatDoubleResult opFloatDouble(float p1, double p2, java.util.Map<String, String> context)
    {
        return _iceI_opFloatDoubleAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpFloatDoubleResult> opFloatDoubleAsync(float p1, double p2)
    {
        return _iceI_opFloatDoubleAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpFloatDoubleResult> opFloatDoubleAsync(float p1, double p2, java.util.Map<String, String> context)
    {
        return _iceI_opFloatDoubleAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpFloatDoubleResult> _iceI_opFloatDoubleAsync(float iceP_p1, double iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpFloatDoubleResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opFloatDouble", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeFloat(iceP_p1);
                     ostr.writeDouble(iceP_p2);
                 }, istr -> {
                     MyClass.OpFloatDoubleResult ret = new MyClass.OpFloatDoubleResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpStringResult opString(String p1, String p2)
    {
        return opString(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpStringResult opString(String p1, String p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringResult> opStringAsync(String p1, String p2)
    {
        return _iceI_opStringAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringResult> opStringAsync(String p1, String p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringResult> _iceI_opStringAsync(String iceP_p1, String iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opString", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeString(iceP_p1);
                     ostr.writeString(iceP_p2);
                 }, istr -> {
                     MyClass.OpStringResult ret = new MyClass.OpStringResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpMyEnumResult opMyEnum(MyEnum p1)
    {
        return opMyEnum(p1, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpMyEnumResult opMyEnum(MyEnum p1, java.util.Map<String, String> context)
    {
        return _iceI_opMyEnumAsync(p1, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMyEnumResult> opMyEnumAsync(MyEnum p1)
    {
        return _iceI_opMyEnumAsync(p1, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMyEnumResult> opMyEnumAsync(MyEnum p1, java.util.Map<String, String> context)
    {
        return _iceI_opMyEnumAsync(p1, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMyEnumResult> _iceI_opMyEnumAsync(MyEnum iceP_p1, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMyEnumResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opMyEnum", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     MyEnum.ice_write(ostr, iceP_p1);
                 }, istr -> {
                     MyClass.OpMyEnumResult ret = new MyClass.OpMyEnumResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpMyClassResult opMyClass(MyClassPrx p1)
    {
        return opMyClass(p1, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpMyClassResult opMyClass(MyClassPrx p1, java.util.Map<String, String> context)
    {
        return _iceI_opMyClassAsync(p1, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMyClassResult> opMyClassAsync(MyClassPrx p1)
    {
        return _iceI_opMyClassAsync(p1, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMyClassResult> opMyClassAsync(MyClassPrx p1, java.util.Map<String, String> context)
    {
        return _iceI_opMyClassAsync(p1, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMyClassResult> _iceI_opMyClassAsync(MyClassPrx iceP_p1, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMyClassResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opMyClass", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeProxy(iceP_p1);
                 }, istr -> {
                     MyClass.OpMyClassResult ret = new MyClass.OpMyClassResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpStructResult opStruct(Structure p1, Structure p2)
    {
        return opStruct(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpStructResult opStruct(Structure p1, Structure p2, java.util.Map<String, String> context)
    {
        return _iceI_opStructAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStructResult> opStructAsync(Structure p1, Structure p2)
    {
        return _iceI_opStructAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStructResult> opStructAsync(Structure p1, Structure p2, java.util.Map<String, String> context)
    {
        return _iceI_opStructAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStructResult> _iceI_opStructAsync(Structure iceP_p1, Structure iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStructResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opStruct", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     Structure.ice_write(ostr, iceP_p1);
                     Structure.ice_write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpStructResult ret = new MyClass.OpStructResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpByteSResult opByteS(byte[] p1, byte[] p2)
    {
        return opByteS(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpByteSResult opByteS(byte[] p1, byte[] p2, java.util.Map<String, String> context)
    {
        return _iceI_opByteSAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpByteSResult> opByteSAsync(byte[] p1, byte[] p2)
    {
        return _iceI_opByteSAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpByteSResult> opByteSAsync(byte[] p1, byte[] p2, java.util.Map<String, String> context)
    {
        return _iceI_opByteSAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpByteSResult> _iceI_opByteSAsync(byte[] iceP_p1, byte[] iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpByteSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opByteS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeByteSeq(iceP_p1);
                     ostr.writeByteSeq(iceP_p2);
                 }, istr -> {
                     MyClass.OpByteSResult ret = new MyClass.OpByteSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpBoolSResult opBoolS(boolean[] p1, boolean[] p2)
    {
        return opBoolS(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpBoolSResult opBoolS(boolean[] p1, boolean[] p2, java.util.Map<String, String> context)
    {
        return _iceI_opBoolSAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpBoolSResult> opBoolSAsync(boolean[] p1, boolean[] p2)
    {
        return _iceI_opBoolSAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpBoolSResult> opBoolSAsync(boolean[] p1, boolean[] p2, java.util.Map<String, String> context)
    {
        return _iceI_opBoolSAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpBoolSResult> _iceI_opBoolSAsync(boolean[] iceP_p1, boolean[] iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpBoolSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opBoolS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeBoolSeq(iceP_p1);
                     ostr.writeBoolSeq(iceP_p2);
                 }, istr -> {
                     MyClass.OpBoolSResult ret = new MyClass.OpBoolSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpShortIntLongSResult opShortIntLongS(short[] p1, int[] p2, long[] p3)
    {
        return opShortIntLongS(p1, p2, p3, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpShortIntLongSResult opShortIntLongS(short[] p1, int[] p2, long[] p3, java.util.Map<String, String> context)
    {
        return _iceI_opShortIntLongSAsync(p1, p2, p3, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpShortIntLongSResult> opShortIntLongSAsync(short[] p1, int[] p2, long[] p3)
    {
        return _iceI_opShortIntLongSAsync(p1, p2, p3, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpShortIntLongSResult> opShortIntLongSAsync(short[] p1, int[] p2, long[] p3, java.util.Map<String, String> context)
    {
        return _iceI_opShortIntLongSAsync(p1, p2, p3, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param iceP_p3 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpShortIntLongSResult> _iceI_opShortIntLongSAsync(short[] iceP_p1, int[] iceP_p2, long[] iceP_p3, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpShortIntLongSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opShortIntLongS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeShortSeq(iceP_p1);
                     ostr.writeIntSeq(iceP_p2);
                     ostr.writeLongSeq(iceP_p3);
                 }, istr -> {
                     MyClass.OpShortIntLongSResult ret = new MyClass.OpShortIntLongSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpFloatDoubleSResult opFloatDoubleS(float[] p1, double[] p2)
    {
        return opFloatDoubleS(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpFloatDoubleSResult opFloatDoubleS(float[] p1, double[] p2, java.util.Map<String, String> context)
    {
        return _iceI_opFloatDoubleSAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpFloatDoubleSResult> opFloatDoubleSAsync(float[] p1, double[] p2)
    {
        return _iceI_opFloatDoubleSAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpFloatDoubleSResult> opFloatDoubleSAsync(float[] p1, double[] p2, java.util.Map<String, String> context)
    {
        return _iceI_opFloatDoubleSAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpFloatDoubleSResult> _iceI_opFloatDoubleSAsync(float[] iceP_p1, double[] iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpFloatDoubleSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opFloatDoubleS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeFloatSeq(iceP_p1);
                     ostr.writeDoubleSeq(iceP_p2);
                 }, istr -> {
                     MyClass.OpFloatDoubleSResult ret = new MyClass.OpFloatDoubleSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpStringSResult opStringS(String[] p1, String[] p2)
    {
        return opStringS(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpStringSResult opStringS(String[] p1, String[] p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringSAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringSResult> opStringSAsync(String[] p1, String[] p2)
    {
        return _iceI_opStringSAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringSResult> opStringSAsync(String[] p1, String[] p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringSAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringSResult> _iceI_opStringSAsync(String[] iceP_p1, String[] iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opStringS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeStringSeq(iceP_p1);
                     ostr.writeStringSeq(iceP_p2);
                 }, istr -> {
                     MyClass.OpStringSResult ret = new MyClass.OpStringSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpByteSSResult opByteSS(byte[][] p1, byte[][] p2)
    {
        return opByteSS(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpByteSSResult opByteSS(byte[][] p1, byte[][] p2, java.util.Map<String, String> context)
    {
        return _iceI_opByteSSAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpByteSSResult> opByteSSAsync(byte[][] p1, byte[][] p2)
    {
        return _iceI_opByteSSAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpByteSSResult> opByteSSAsync(byte[][] p1, byte[][] p2, java.util.Map<String, String> context)
    {
        return _iceI_opByteSSAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpByteSSResult> _iceI_opByteSSAsync(byte[][] iceP_p1, byte[][] iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpByteSSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opByteSS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ByteSSHelper.write(ostr, iceP_p1);
                     ByteSSHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpByteSSResult ret = new MyClass.OpByteSSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpBoolSSResult opBoolSS(boolean[][] p1, boolean[][] p2)
    {
        return opBoolSS(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpBoolSSResult opBoolSS(boolean[][] p1, boolean[][] p2, java.util.Map<String, String> context)
    {
        return _iceI_opBoolSSAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpBoolSSResult> opBoolSSAsync(boolean[][] p1, boolean[][] p2)
    {
        return _iceI_opBoolSSAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpBoolSSResult> opBoolSSAsync(boolean[][] p1, boolean[][] p2, java.util.Map<String, String> context)
    {
        return _iceI_opBoolSSAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpBoolSSResult> _iceI_opBoolSSAsync(boolean[][] iceP_p1, boolean[][] iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpBoolSSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opBoolSS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     BoolSSHelper.write(ostr, iceP_p1);
                     BoolSSHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpBoolSSResult ret = new MyClass.OpBoolSSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpShortIntLongSSResult opShortIntLongSS(short[][] p1, int[][] p2, long[][] p3)
    {
        return opShortIntLongSS(p1, p2, p3, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpShortIntLongSSResult opShortIntLongSS(short[][] p1, int[][] p2, long[][] p3, java.util.Map<String, String> context)
    {
        return _iceI_opShortIntLongSSAsync(p1, p2, p3, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpShortIntLongSSResult> opShortIntLongSSAsync(short[][] p1, int[][] p2, long[][] p3)
    {
        return _iceI_opShortIntLongSSAsync(p1, p2, p3, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpShortIntLongSSResult> opShortIntLongSSAsync(short[][] p1, int[][] p2, long[][] p3, java.util.Map<String, String> context)
    {
        return _iceI_opShortIntLongSSAsync(p1, p2, p3, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param iceP_p3 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpShortIntLongSSResult> _iceI_opShortIntLongSSAsync(short[][] iceP_p1, int[][] iceP_p2, long[][] iceP_p3, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpShortIntLongSSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opShortIntLongSS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ShortSSHelper.write(ostr, iceP_p1);
                     IntSSHelper.write(ostr, iceP_p2);
                     LongSSHelper.write(ostr, iceP_p3);
                 }, istr -> {
                     MyClass.OpShortIntLongSSResult ret = new MyClass.OpShortIntLongSSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpFloatDoubleSSResult opFloatDoubleSS(float[][] p1, double[][] p2)
    {
        return opFloatDoubleSS(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpFloatDoubleSSResult opFloatDoubleSS(float[][] p1, double[][] p2, java.util.Map<String, String> context)
    {
        return _iceI_opFloatDoubleSSAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpFloatDoubleSSResult> opFloatDoubleSSAsync(float[][] p1, double[][] p2)
    {
        return _iceI_opFloatDoubleSSAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpFloatDoubleSSResult> opFloatDoubleSSAsync(float[][] p1, double[][] p2, java.util.Map<String, String> context)
    {
        return _iceI_opFloatDoubleSSAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpFloatDoubleSSResult> _iceI_opFloatDoubleSSAsync(float[][] iceP_p1, double[][] iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpFloatDoubleSSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opFloatDoubleSS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     FloatSSHelper.write(ostr, iceP_p1);
                     DoubleSSHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpFloatDoubleSSResult ret = new MyClass.OpFloatDoubleSSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpStringSSResult opStringSS(String[][] p1, String[][] p2)
    {
        return opStringSS(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpStringSSResult opStringSS(String[][] p1, String[][] p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringSSAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringSSResult> opStringSSAsync(String[][] p1, String[][] p2)
    {
        return _iceI_opStringSSAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringSSResult> opStringSSAsync(String[][] p1, String[][] p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringSSAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringSSResult> _iceI_opStringSSAsync(String[][] iceP_p1, String[][] iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringSSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opStringSS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     StringSSHelper.write(ostr, iceP_p1);
                     StringSSHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpStringSSResult ret = new MyClass.OpStringSSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpStringSSSResult opStringSSS(String[][][] p1, String[][][] p2)
    {
        return opStringSSS(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpStringSSSResult opStringSSS(String[][][] p1, String[][][] p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringSSSAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringSSSResult> opStringSSSAsync(String[][][] p1, String[][][] p2)
    {
        return _iceI_opStringSSSAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringSSSResult> opStringSSSAsync(String[][][] p1, String[][][] p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringSSSAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringSSSResult> _iceI_opStringSSSAsync(String[][][] iceP_p1, String[][][] iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringSSSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opStringSSS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     StringSSSHelper.write(ostr, iceP_p1);
                     StringSSSHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpStringSSSResult ret = new MyClass.OpStringSSSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpByteBoolDResult opByteBoolD(java.util.Map<java.lang.Byte, java.lang.Boolean> p1, java.util.Map<java.lang.Byte, java.lang.Boolean> p2)
    {
        return opByteBoolD(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpByteBoolDResult opByteBoolD(java.util.Map<java.lang.Byte, java.lang.Boolean> p1, java.util.Map<java.lang.Byte, java.lang.Boolean> p2, java.util.Map<String, String> context)
    {
        return _iceI_opByteBoolDAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpByteBoolDResult> opByteBoolDAsync(java.util.Map<java.lang.Byte, java.lang.Boolean> p1, java.util.Map<java.lang.Byte, java.lang.Boolean> p2)
    {
        return _iceI_opByteBoolDAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpByteBoolDResult> opByteBoolDAsync(java.util.Map<java.lang.Byte, java.lang.Boolean> p1, java.util.Map<java.lang.Byte, java.lang.Boolean> p2, java.util.Map<String, String> context)
    {
        return _iceI_opByteBoolDAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpByteBoolDResult> _iceI_opByteBoolDAsync(java.util.Map<java.lang.Byte, java.lang.Boolean> iceP_p1, java.util.Map<java.lang.Byte, java.lang.Boolean> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpByteBoolDResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opByteBoolD", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ByteBoolDHelper.write(ostr, iceP_p1);
                     ByteBoolDHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpByteBoolDResult ret = new MyClass.OpByteBoolDResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpShortIntDResult opShortIntD(java.util.Map<java.lang.Short, java.lang.Integer> p1, java.util.Map<java.lang.Short, java.lang.Integer> p2)
    {
        return opShortIntD(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpShortIntDResult opShortIntD(java.util.Map<java.lang.Short, java.lang.Integer> p1, java.util.Map<java.lang.Short, java.lang.Integer> p2, java.util.Map<String, String> context)
    {
        return _iceI_opShortIntDAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpShortIntDResult> opShortIntDAsync(java.util.Map<java.lang.Short, java.lang.Integer> p1, java.util.Map<java.lang.Short, java.lang.Integer> p2)
    {
        return _iceI_opShortIntDAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpShortIntDResult> opShortIntDAsync(java.util.Map<java.lang.Short, java.lang.Integer> p1, java.util.Map<java.lang.Short, java.lang.Integer> p2, java.util.Map<String, String> context)
    {
        return _iceI_opShortIntDAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpShortIntDResult> _iceI_opShortIntDAsync(java.util.Map<java.lang.Short, java.lang.Integer> iceP_p1, java.util.Map<java.lang.Short, java.lang.Integer> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpShortIntDResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opShortIntD", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ShortIntDHelper.write(ostr, iceP_p1);
                     ShortIntDHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpShortIntDResult ret = new MyClass.OpShortIntDResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpLongFloatDResult opLongFloatD(java.util.Map<java.lang.Long, java.lang.Float> p1, java.util.Map<java.lang.Long, java.lang.Float> p2)
    {
        return opLongFloatD(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpLongFloatDResult opLongFloatD(java.util.Map<java.lang.Long, java.lang.Float> p1, java.util.Map<java.lang.Long, java.lang.Float> p2, java.util.Map<String, String> context)
    {
        return _iceI_opLongFloatDAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpLongFloatDResult> opLongFloatDAsync(java.util.Map<java.lang.Long, java.lang.Float> p1, java.util.Map<java.lang.Long, java.lang.Float> p2)
    {
        return _iceI_opLongFloatDAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpLongFloatDResult> opLongFloatDAsync(java.util.Map<java.lang.Long, java.lang.Float> p1, java.util.Map<java.lang.Long, java.lang.Float> p2, java.util.Map<String, String> context)
    {
        return _iceI_opLongFloatDAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpLongFloatDResult> _iceI_opLongFloatDAsync(java.util.Map<java.lang.Long, java.lang.Float> iceP_p1, java.util.Map<java.lang.Long, java.lang.Float> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpLongFloatDResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opLongFloatD", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     LongFloatDHelper.write(ostr, iceP_p1);
                     LongFloatDHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpLongFloatDResult ret = new MyClass.OpLongFloatDResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpStringStringDResult opStringStringD(java.util.Map<java.lang.String, java.lang.String> p1, java.util.Map<java.lang.String, java.lang.String> p2)
    {
        return opStringStringD(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpStringStringDResult opStringStringD(java.util.Map<java.lang.String, java.lang.String> p1, java.util.Map<java.lang.String, java.lang.String> p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringStringDAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringStringDResult> opStringStringDAsync(java.util.Map<java.lang.String, java.lang.String> p1, java.util.Map<java.lang.String, java.lang.String> p2)
    {
        return _iceI_opStringStringDAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringStringDResult> opStringStringDAsync(java.util.Map<java.lang.String, java.lang.String> p1, java.util.Map<java.lang.String, java.lang.String> p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringStringDAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringStringDResult> _iceI_opStringStringDAsync(java.util.Map<java.lang.String, java.lang.String> iceP_p1, java.util.Map<java.lang.String, java.lang.String> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringStringDResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opStringStringD", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     StringStringDHelper.write(ostr, iceP_p1);
                     StringStringDHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpStringStringDResult ret = new MyClass.OpStringStringDResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpStringMyEnumDResult opStringMyEnumD(java.util.Map<java.lang.String, MyEnum> p1, java.util.Map<java.lang.String, MyEnum> p2)
    {
        return opStringMyEnumD(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpStringMyEnumDResult opStringMyEnumD(java.util.Map<java.lang.String, MyEnum> p1, java.util.Map<java.lang.String, MyEnum> p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringMyEnumDAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringMyEnumDResult> opStringMyEnumDAsync(java.util.Map<java.lang.String, MyEnum> p1, java.util.Map<java.lang.String, MyEnum> p2)
    {
        return _iceI_opStringMyEnumDAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringMyEnumDResult> opStringMyEnumDAsync(java.util.Map<java.lang.String, MyEnum> p1, java.util.Map<java.lang.String, MyEnum> p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringMyEnumDAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringMyEnumDResult> _iceI_opStringMyEnumDAsync(java.util.Map<java.lang.String, MyEnum> iceP_p1, java.util.Map<java.lang.String, MyEnum> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringMyEnumDResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opStringMyEnumD", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     StringMyEnumDHelper.write(ostr, iceP_p1);
                     StringMyEnumDHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpStringMyEnumDResult ret = new MyClass.OpStringMyEnumDResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpMyEnumStringDResult opMyEnumStringD(java.util.Map<MyEnum, java.lang.String> p1, java.util.Map<MyEnum, java.lang.String> p2)
    {
        return opMyEnumStringD(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpMyEnumStringDResult opMyEnumStringD(java.util.Map<MyEnum, java.lang.String> p1, java.util.Map<MyEnum, java.lang.String> p2, java.util.Map<String, String> context)
    {
        return _iceI_opMyEnumStringDAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMyEnumStringDResult> opMyEnumStringDAsync(java.util.Map<MyEnum, java.lang.String> p1, java.util.Map<MyEnum, java.lang.String> p2)
    {
        return _iceI_opMyEnumStringDAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMyEnumStringDResult> opMyEnumStringDAsync(java.util.Map<MyEnum, java.lang.String> p1, java.util.Map<MyEnum, java.lang.String> p2, java.util.Map<String, String> context)
    {
        return _iceI_opMyEnumStringDAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMyEnumStringDResult> _iceI_opMyEnumStringDAsync(java.util.Map<MyEnum, java.lang.String> iceP_p1, java.util.Map<MyEnum, java.lang.String> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMyEnumStringDResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opMyEnumStringD", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     MyEnumStringDHelper.write(ostr, iceP_p1);
                     MyEnumStringDHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpMyEnumStringDResult ret = new MyClass.OpMyEnumStringDResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpMyStructMyEnumDResult opMyStructMyEnumD(java.util.Map<MyStruct, MyEnum> p1, java.util.Map<MyStruct, MyEnum> p2)
    {
        return opMyStructMyEnumD(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpMyStructMyEnumDResult opMyStructMyEnumD(java.util.Map<MyStruct, MyEnum> p1, java.util.Map<MyStruct, MyEnum> p2, java.util.Map<String, String> context)
    {
        return _iceI_opMyStructMyEnumDAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMyStructMyEnumDResult> opMyStructMyEnumDAsync(java.util.Map<MyStruct, MyEnum> p1, java.util.Map<MyStruct, MyEnum> p2)
    {
        return _iceI_opMyStructMyEnumDAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMyStructMyEnumDResult> opMyStructMyEnumDAsync(java.util.Map<MyStruct, MyEnum> p1, java.util.Map<MyStruct, MyEnum> p2, java.util.Map<String, String> context)
    {
        return _iceI_opMyStructMyEnumDAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMyStructMyEnumDResult> _iceI_opMyStructMyEnumDAsync(java.util.Map<MyStruct, MyEnum> iceP_p1, java.util.Map<MyStruct, MyEnum> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMyStructMyEnumDResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opMyStructMyEnumD", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     MyStructMyEnumDHelper.write(ostr, iceP_p1);
                     MyStructMyEnumDHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpMyStructMyEnumDResult ret = new MyClass.OpMyStructMyEnumDResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpByteBoolDSResult opByteBoolDS(java.util.List<java.util.Map<java.lang.Byte, java.lang.Boolean>> p1, java.util.List<java.util.Map<java.lang.Byte, java.lang.Boolean>> p2)
    {
        return opByteBoolDS(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpByteBoolDSResult opByteBoolDS(java.util.List<java.util.Map<java.lang.Byte, java.lang.Boolean>> p1, java.util.List<java.util.Map<java.lang.Byte, java.lang.Boolean>> p2, java.util.Map<String, String> context)
    {
        return _iceI_opByteBoolDSAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpByteBoolDSResult> opByteBoolDSAsync(java.util.List<java.util.Map<java.lang.Byte, java.lang.Boolean>> p1, java.util.List<java.util.Map<java.lang.Byte, java.lang.Boolean>> p2)
    {
        return _iceI_opByteBoolDSAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpByteBoolDSResult> opByteBoolDSAsync(java.util.List<java.util.Map<java.lang.Byte, java.lang.Boolean>> p1, java.util.List<java.util.Map<java.lang.Byte, java.lang.Boolean>> p2, java.util.Map<String, String> context)
    {
        return _iceI_opByteBoolDSAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpByteBoolDSResult> _iceI_opByteBoolDSAsync(java.util.List<java.util.Map<java.lang.Byte, java.lang.Boolean>> iceP_p1, java.util.List<java.util.Map<java.lang.Byte, java.lang.Boolean>> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpByteBoolDSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opByteBoolDS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ByteBoolDSHelper.write(ostr, iceP_p1);
                     ByteBoolDSHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpByteBoolDSResult ret = new MyClass.OpByteBoolDSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpShortIntDSResult opShortIntDS(java.util.List<java.util.Map<java.lang.Short, java.lang.Integer>> p1, java.util.List<java.util.Map<java.lang.Short, java.lang.Integer>> p2)
    {
        return opShortIntDS(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpShortIntDSResult opShortIntDS(java.util.List<java.util.Map<java.lang.Short, java.lang.Integer>> p1, java.util.List<java.util.Map<java.lang.Short, java.lang.Integer>> p2, java.util.Map<String, String> context)
    {
        return _iceI_opShortIntDSAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpShortIntDSResult> opShortIntDSAsync(java.util.List<java.util.Map<java.lang.Short, java.lang.Integer>> p1, java.util.List<java.util.Map<java.lang.Short, java.lang.Integer>> p2)
    {
        return _iceI_opShortIntDSAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpShortIntDSResult> opShortIntDSAsync(java.util.List<java.util.Map<java.lang.Short, java.lang.Integer>> p1, java.util.List<java.util.Map<java.lang.Short, java.lang.Integer>> p2, java.util.Map<String, String> context)
    {
        return _iceI_opShortIntDSAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpShortIntDSResult> _iceI_opShortIntDSAsync(java.util.List<java.util.Map<java.lang.Short, java.lang.Integer>> iceP_p1, java.util.List<java.util.Map<java.lang.Short, java.lang.Integer>> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpShortIntDSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opShortIntDS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ShortIntDSHelper.write(ostr, iceP_p1);
                     ShortIntDSHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpShortIntDSResult ret = new MyClass.OpShortIntDSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpLongFloatDSResult opLongFloatDS(java.util.List<java.util.Map<java.lang.Long, java.lang.Float>> p1, java.util.List<java.util.Map<java.lang.Long, java.lang.Float>> p2)
    {
        return opLongFloatDS(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpLongFloatDSResult opLongFloatDS(java.util.List<java.util.Map<java.lang.Long, java.lang.Float>> p1, java.util.List<java.util.Map<java.lang.Long, java.lang.Float>> p2, java.util.Map<String, String> context)
    {
        return _iceI_opLongFloatDSAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpLongFloatDSResult> opLongFloatDSAsync(java.util.List<java.util.Map<java.lang.Long, java.lang.Float>> p1, java.util.List<java.util.Map<java.lang.Long, java.lang.Float>> p2)
    {
        return _iceI_opLongFloatDSAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpLongFloatDSResult> opLongFloatDSAsync(java.util.List<java.util.Map<java.lang.Long, java.lang.Float>> p1, java.util.List<java.util.Map<java.lang.Long, java.lang.Float>> p2, java.util.Map<String, String> context)
    {
        return _iceI_opLongFloatDSAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpLongFloatDSResult> _iceI_opLongFloatDSAsync(java.util.List<java.util.Map<java.lang.Long, java.lang.Float>> iceP_p1, java.util.List<java.util.Map<java.lang.Long, java.lang.Float>> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpLongFloatDSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opLongFloatDS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     LongFloatDSHelper.write(ostr, iceP_p1);
                     LongFloatDSHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpLongFloatDSResult ret = new MyClass.OpLongFloatDSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpStringStringDSResult opStringStringDS(java.util.List<java.util.Map<java.lang.String, java.lang.String>> p1, java.util.List<java.util.Map<java.lang.String, java.lang.String>> p2)
    {
        return opStringStringDS(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpStringStringDSResult opStringStringDS(java.util.List<java.util.Map<java.lang.String, java.lang.String>> p1, java.util.List<java.util.Map<java.lang.String, java.lang.String>> p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringStringDSAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringStringDSResult> opStringStringDSAsync(java.util.List<java.util.Map<java.lang.String, java.lang.String>> p1, java.util.List<java.util.Map<java.lang.String, java.lang.String>> p2)
    {
        return _iceI_opStringStringDSAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringStringDSResult> opStringStringDSAsync(java.util.List<java.util.Map<java.lang.String, java.lang.String>> p1, java.util.List<java.util.Map<java.lang.String, java.lang.String>> p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringStringDSAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringStringDSResult> _iceI_opStringStringDSAsync(java.util.List<java.util.Map<java.lang.String, java.lang.String>> iceP_p1, java.util.List<java.util.Map<java.lang.String, java.lang.String>> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringStringDSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opStringStringDS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     StringStringDSHelper.write(ostr, iceP_p1);
                     StringStringDSHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpStringStringDSResult ret = new MyClass.OpStringStringDSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpStringMyEnumDSResult opStringMyEnumDS(java.util.List<java.util.Map<java.lang.String, MyEnum>> p1, java.util.List<java.util.Map<java.lang.String, MyEnum>> p2)
    {
        return opStringMyEnumDS(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpStringMyEnumDSResult opStringMyEnumDS(java.util.List<java.util.Map<java.lang.String, MyEnum>> p1, java.util.List<java.util.Map<java.lang.String, MyEnum>> p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringMyEnumDSAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringMyEnumDSResult> opStringMyEnumDSAsync(java.util.List<java.util.Map<java.lang.String, MyEnum>> p1, java.util.List<java.util.Map<java.lang.String, MyEnum>> p2)
    {
        return _iceI_opStringMyEnumDSAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringMyEnumDSResult> opStringMyEnumDSAsync(java.util.List<java.util.Map<java.lang.String, MyEnum>> p1, java.util.List<java.util.Map<java.lang.String, MyEnum>> p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringMyEnumDSAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringMyEnumDSResult> _iceI_opStringMyEnumDSAsync(java.util.List<java.util.Map<java.lang.String, MyEnum>> iceP_p1, java.util.List<java.util.Map<java.lang.String, MyEnum>> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringMyEnumDSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opStringMyEnumDS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     StringMyEnumDSHelper.write(ostr, iceP_p1);
                     StringMyEnumDSHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpStringMyEnumDSResult ret = new MyClass.OpStringMyEnumDSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpMyEnumStringDSResult opMyEnumStringDS(java.util.List<java.util.Map<MyEnum, java.lang.String>> p1, java.util.List<java.util.Map<MyEnum, java.lang.String>> p2)
    {
        return opMyEnumStringDS(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpMyEnumStringDSResult opMyEnumStringDS(java.util.List<java.util.Map<MyEnum, java.lang.String>> p1, java.util.List<java.util.Map<MyEnum, java.lang.String>> p2, java.util.Map<String, String> context)
    {
        return _iceI_opMyEnumStringDSAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMyEnumStringDSResult> opMyEnumStringDSAsync(java.util.List<java.util.Map<MyEnum, java.lang.String>> p1, java.util.List<java.util.Map<MyEnum, java.lang.String>> p2)
    {
        return _iceI_opMyEnumStringDSAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMyEnumStringDSResult> opMyEnumStringDSAsync(java.util.List<java.util.Map<MyEnum, java.lang.String>> p1, java.util.List<java.util.Map<MyEnum, java.lang.String>> p2, java.util.Map<String, String> context)
    {
        return _iceI_opMyEnumStringDSAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMyEnumStringDSResult> _iceI_opMyEnumStringDSAsync(java.util.List<java.util.Map<MyEnum, java.lang.String>> iceP_p1, java.util.List<java.util.Map<MyEnum, java.lang.String>> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMyEnumStringDSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opMyEnumStringDS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     MyEnumStringDSHelper.write(ostr, iceP_p1);
                     MyEnumStringDSHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpMyEnumStringDSResult ret = new MyClass.OpMyEnumStringDSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpMyStructMyEnumDSResult opMyStructMyEnumDS(java.util.List<java.util.Map<MyStruct, MyEnum>> p1, java.util.List<java.util.Map<MyStruct, MyEnum>> p2)
    {
        return opMyStructMyEnumDS(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpMyStructMyEnumDSResult opMyStructMyEnumDS(java.util.List<java.util.Map<MyStruct, MyEnum>> p1, java.util.List<java.util.Map<MyStruct, MyEnum>> p2, java.util.Map<String, String> context)
    {
        return _iceI_opMyStructMyEnumDSAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMyStructMyEnumDSResult> opMyStructMyEnumDSAsync(java.util.List<java.util.Map<MyStruct, MyEnum>> p1, java.util.List<java.util.Map<MyStruct, MyEnum>> p2)
    {
        return _iceI_opMyStructMyEnumDSAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMyStructMyEnumDSResult> opMyStructMyEnumDSAsync(java.util.List<java.util.Map<MyStruct, MyEnum>> p1, java.util.List<java.util.Map<MyStruct, MyEnum>> p2, java.util.Map<String, String> context)
    {
        return _iceI_opMyStructMyEnumDSAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMyStructMyEnumDSResult> _iceI_opMyStructMyEnumDSAsync(java.util.List<java.util.Map<MyStruct, MyEnum>> iceP_p1, java.util.List<java.util.Map<MyStruct, MyEnum>> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMyStructMyEnumDSResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opMyStructMyEnumDS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     MyStructMyEnumDSHelper.write(ostr, iceP_p1);
                     MyStructMyEnumDSHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpMyStructMyEnumDSResult ret = new MyClass.OpMyStructMyEnumDSResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpByteByteSDResult opByteByteSD(java.util.Map<java.lang.Byte, byte[]> p1, java.util.Map<java.lang.Byte, byte[]> p2)
    {
        return opByteByteSD(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpByteByteSDResult opByteByteSD(java.util.Map<java.lang.Byte, byte[]> p1, java.util.Map<java.lang.Byte, byte[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opByteByteSDAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpByteByteSDResult> opByteByteSDAsync(java.util.Map<java.lang.Byte, byte[]> p1, java.util.Map<java.lang.Byte, byte[]> p2)
    {
        return _iceI_opByteByteSDAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpByteByteSDResult> opByteByteSDAsync(java.util.Map<java.lang.Byte, byte[]> p1, java.util.Map<java.lang.Byte, byte[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opByteByteSDAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpByteByteSDResult> _iceI_opByteByteSDAsync(java.util.Map<java.lang.Byte, byte[]> iceP_p1, java.util.Map<java.lang.Byte, byte[]> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpByteByteSDResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opByteByteSD", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ByteByteSDHelper.write(ostr, iceP_p1);
                     ByteByteSDHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpByteByteSDResult ret = new MyClass.OpByteByteSDResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpBoolBoolSDResult opBoolBoolSD(java.util.Map<java.lang.Boolean, boolean[]> p1, java.util.Map<java.lang.Boolean, boolean[]> p2)
    {
        return opBoolBoolSD(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpBoolBoolSDResult opBoolBoolSD(java.util.Map<java.lang.Boolean, boolean[]> p1, java.util.Map<java.lang.Boolean, boolean[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opBoolBoolSDAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpBoolBoolSDResult> opBoolBoolSDAsync(java.util.Map<java.lang.Boolean, boolean[]> p1, java.util.Map<java.lang.Boolean, boolean[]> p2)
    {
        return _iceI_opBoolBoolSDAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpBoolBoolSDResult> opBoolBoolSDAsync(java.util.Map<java.lang.Boolean, boolean[]> p1, java.util.Map<java.lang.Boolean, boolean[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opBoolBoolSDAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpBoolBoolSDResult> _iceI_opBoolBoolSDAsync(java.util.Map<java.lang.Boolean, boolean[]> iceP_p1, java.util.Map<java.lang.Boolean, boolean[]> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpBoolBoolSDResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opBoolBoolSD", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     BoolBoolSDHelper.write(ostr, iceP_p1);
                     BoolBoolSDHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpBoolBoolSDResult ret = new MyClass.OpBoolBoolSDResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpShortShortSDResult opShortShortSD(java.util.Map<java.lang.Short, short[]> p1, java.util.Map<java.lang.Short, short[]> p2)
    {
        return opShortShortSD(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpShortShortSDResult opShortShortSD(java.util.Map<java.lang.Short, short[]> p1, java.util.Map<java.lang.Short, short[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opShortShortSDAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpShortShortSDResult> opShortShortSDAsync(java.util.Map<java.lang.Short, short[]> p1, java.util.Map<java.lang.Short, short[]> p2)
    {
        return _iceI_opShortShortSDAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpShortShortSDResult> opShortShortSDAsync(java.util.Map<java.lang.Short, short[]> p1, java.util.Map<java.lang.Short, short[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opShortShortSDAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpShortShortSDResult> _iceI_opShortShortSDAsync(java.util.Map<java.lang.Short, short[]> iceP_p1, java.util.Map<java.lang.Short, short[]> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpShortShortSDResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opShortShortSD", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ShortShortSDHelper.write(ostr, iceP_p1);
                     ShortShortSDHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpShortShortSDResult ret = new MyClass.OpShortShortSDResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpIntIntSDResult opIntIntSD(java.util.Map<java.lang.Integer, int[]> p1, java.util.Map<java.lang.Integer, int[]> p2)
    {
        return opIntIntSD(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpIntIntSDResult opIntIntSD(java.util.Map<java.lang.Integer, int[]> p1, java.util.Map<java.lang.Integer, int[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opIntIntSDAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpIntIntSDResult> opIntIntSDAsync(java.util.Map<java.lang.Integer, int[]> p1, java.util.Map<java.lang.Integer, int[]> p2)
    {
        return _iceI_opIntIntSDAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpIntIntSDResult> opIntIntSDAsync(java.util.Map<java.lang.Integer, int[]> p1, java.util.Map<java.lang.Integer, int[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opIntIntSDAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpIntIntSDResult> _iceI_opIntIntSDAsync(java.util.Map<java.lang.Integer, int[]> iceP_p1, java.util.Map<java.lang.Integer, int[]> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpIntIntSDResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opIntIntSD", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     IntIntSDHelper.write(ostr, iceP_p1);
                     IntIntSDHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpIntIntSDResult ret = new MyClass.OpIntIntSDResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpLongLongSDResult opLongLongSD(java.util.Map<java.lang.Long, long[]> p1, java.util.Map<java.lang.Long, long[]> p2)
    {
        return opLongLongSD(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpLongLongSDResult opLongLongSD(java.util.Map<java.lang.Long, long[]> p1, java.util.Map<java.lang.Long, long[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opLongLongSDAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpLongLongSDResult> opLongLongSDAsync(java.util.Map<java.lang.Long, long[]> p1, java.util.Map<java.lang.Long, long[]> p2)
    {
        return _iceI_opLongLongSDAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpLongLongSDResult> opLongLongSDAsync(java.util.Map<java.lang.Long, long[]> p1, java.util.Map<java.lang.Long, long[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opLongLongSDAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpLongLongSDResult> _iceI_opLongLongSDAsync(java.util.Map<java.lang.Long, long[]> iceP_p1, java.util.Map<java.lang.Long, long[]> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpLongLongSDResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opLongLongSD", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     LongLongSDHelper.write(ostr, iceP_p1);
                     LongLongSDHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpLongLongSDResult ret = new MyClass.OpLongLongSDResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpStringFloatSDResult opStringFloatSD(java.util.Map<java.lang.String, float[]> p1, java.util.Map<java.lang.String, float[]> p2)
    {
        return opStringFloatSD(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpStringFloatSDResult opStringFloatSD(java.util.Map<java.lang.String, float[]> p1, java.util.Map<java.lang.String, float[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringFloatSDAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringFloatSDResult> opStringFloatSDAsync(java.util.Map<java.lang.String, float[]> p1, java.util.Map<java.lang.String, float[]> p2)
    {
        return _iceI_opStringFloatSDAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringFloatSDResult> opStringFloatSDAsync(java.util.Map<java.lang.String, float[]> p1, java.util.Map<java.lang.String, float[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringFloatSDAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringFloatSDResult> _iceI_opStringFloatSDAsync(java.util.Map<java.lang.String, float[]> iceP_p1, java.util.Map<java.lang.String, float[]> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringFloatSDResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opStringFloatSD", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     StringFloatSDHelper.write(ostr, iceP_p1);
                     StringFloatSDHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpStringFloatSDResult ret = new MyClass.OpStringFloatSDResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpStringDoubleSDResult opStringDoubleSD(java.util.Map<java.lang.String, double[]> p1, java.util.Map<java.lang.String, double[]> p2)
    {
        return opStringDoubleSD(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpStringDoubleSDResult opStringDoubleSD(java.util.Map<java.lang.String, double[]> p1, java.util.Map<java.lang.String, double[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringDoubleSDAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringDoubleSDResult> opStringDoubleSDAsync(java.util.Map<java.lang.String, double[]> p1, java.util.Map<java.lang.String, double[]> p2)
    {
        return _iceI_opStringDoubleSDAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringDoubleSDResult> opStringDoubleSDAsync(java.util.Map<java.lang.String, double[]> p1, java.util.Map<java.lang.String, double[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringDoubleSDAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringDoubleSDResult> _iceI_opStringDoubleSDAsync(java.util.Map<java.lang.String, double[]> iceP_p1, java.util.Map<java.lang.String, double[]> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringDoubleSDResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opStringDoubleSD", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     StringDoubleSDHelper.write(ostr, iceP_p1);
                     StringDoubleSDHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpStringDoubleSDResult ret = new MyClass.OpStringDoubleSDResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpStringStringSDResult opStringStringSD(java.util.Map<java.lang.String, String[]> p1, java.util.Map<java.lang.String, String[]> p2)
    {
        return opStringStringSD(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpStringStringSDResult opStringStringSD(java.util.Map<java.lang.String, String[]> p1, java.util.Map<java.lang.String, String[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringStringSDAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringStringSDResult> opStringStringSDAsync(java.util.Map<java.lang.String, String[]> p1, java.util.Map<java.lang.String, String[]> p2)
    {
        return _iceI_opStringStringSDAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpStringStringSDResult> opStringStringSDAsync(java.util.Map<java.lang.String, String[]> p1, java.util.Map<java.lang.String, String[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opStringStringSDAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringStringSDResult> _iceI_opStringStringSDAsync(java.util.Map<java.lang.String, String[]> iceP_p1, java.util.Map<java.lang.String, String[]> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpStringStringSDResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opStringStringSD", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     StringStringSDHelper.write(ostr, iceP_p1);
                     StringStringSDHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpStringStringSDResult ret = new MyClass.OpStringStringSDResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpMyEnumMyEnumSDResult opMyEnumMyEnumSD(java.util.Map<MyEnum, MyEnum[]> p1, java.util.Map<MyEnum, MyEnum[]> p2)
    {
        return opMyEnumMyEnumSD(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpMyEnumMyEnumSDResult opMyEnumMyEnumSD(java.util.Map<MyEnum, MyEnum[]> p1, java.util.Map<MyEnum, MyEnum[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opMyEnumMyEnumSDAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMyEnumMyEnumSDResult> opMyEnumMyEnumSDAsync(java.util.Map<MyEnum, MyEnum[]> p1, java.util.Map<MyEnum, MyEnum[]> p2)
    {
        return _iceI_opMyEnumMyEnumSDAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMyEnumMyEnumSDResult> opMyEnumMyEnumSDAsync(java.util.Map<MyEnum, MyEnum[]> p1, java.util.Map<MyEnum, MyEnum[]> p2, java.util.Map<String, String> context)
    {
        return _iceI_opMyEnumMyEnumSDAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMyEnumMyEnumSDResult> _iceI_opMyEnumMyEnumSDAsync(java.util.Map<MyEnum, MyEnum[]> iceP_p1, java.util.Map<MyEnum, MyEnum[]> iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMyEnumMyEnumSDResult> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opMyEnumMyEnumSD", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     MyEnumMyEnumSDHelper.write(ostr, iceP_p1);
                     MyEnumMyEnumSDHelper.write(ostr, iceP_p2);
                 }, istr -> {
                     MyClass.OpMyEnumMyEnumSDResult ret = new MyClass.OpMyEnumMyEnumSDResult();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default int[] opIntS(int[] s)
    {
        return opIntS(s, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default int[] opIntS(int[] s, java.util.Map<String, String> context)
    {
        return _iceI_opIntSAsync(s, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<int[]> opIntSAsync(int[] s)
    {
        return _iceI_opIntSAsync(s, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<int[]> opIntSAsync(int[] s, java.util.Map<String, String> context)
    {
        return _iceI_opIntSAsync(s, context, false);
    }

    /**
     * @hidden
     * @param iceP_s -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<int[]> _iceI_opIntSAsync(int[] iceP_s, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<int[]> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opIntS", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeIntSeq(iceP_s);
                 }, istr -> {
                     int[] ret;
                     ret = istr.readIntSeq();
                     return ret;
                 });
        return f;
    }

    default void opByteSOneway(byte[] s)
    {
        opByteSOneway(s, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default void opByteSOneway(byte[] s, java.util.Map<String, String> context)
    {
        _iceI_opByteSOnewayAsync(s, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<Void> opByteSOnewayAsync(byte[] s)
    {
        return _iceI_opByteSOnewayAsync(s, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<Void> opByteSOnewayAsync(byte[] s, java.util.Map<String, String> context)
    {
        return _iceI_opByteSOnewayAsync(s, context, false);
    }

    /**
     * @hidden
     * @param iceP_s -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<Void> _iceI_opByteSOnewayAsync(byte[] iceP_s, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<Void> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opByteSOneway", null, sync, null);
        f.invoke(false, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeByteSeq(iceP_s);
                 }, null);
        return f;
    }

    default int opByteSOnewayCallCount()
    {
        return opByteSOnewayCallCount(com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default int opByteSOnewayCallCount(java.util.Map<String, String> context)
    {
        return _iceI_opByteSOnewayCallCountAsync(context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<java.lang.Integer> opByteSOnewayCallCountAsync()
    {
        return _iceI_opByteSOnewayCallCountAsync(com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<java.lang.Integer> opByteSOnewayCallCountAsync(java.util.Map<String, String> context)
    {
        return _iceI_opByteSOnewayCallCountAsync(context, false);
    }

    /**
     * @hidden
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<java.lang.Integer> _iceI_opByteSOnewayCallCountAsync(java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<java.lang.Integer> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opByteSOnewayCallCount", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, null, istr -> {
                     int ret;
                     ret = istr.readInt();
                     return ret;
                 });
        return f;
    }

    default java.util.Map<java.lang.String, java.lang.String> opContext()
    {
        return opContext(com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default java.util.Map<java.lang.String, java.lang.String> opContext(java.util.Map<String, String> context)
    {
        return _iceI_opContextAsync(context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<java.util.Map<java.lang.String, java.lang.String>> opContextAsync()
    {
        return _iceI_opContextAsync(com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<java.util.Map<java.lang.String, java.lang.String>> opContextAsync(java.util.Map<String, String> context)
    {
        return _iceI_opContextAsync(context, false);
    }

    /**
     * @hidden
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<java.util.Map<java.lang.String, java.lang.String>> _iceI_opContextAsync(java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<java.util.Map<java.lang.String, java.lang.String>> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opContext", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, null, istr -> {
                     java.util.Map<java.lang.String, java.lang.String> ret;
                     ret = com.zeroc.Ice.ContextHelper.read(istr);
                     return ret;
                 });
        return f;
    }

    default void opDoubleMarshaling(double p1, double[] p2)
    {
        opDoubleMarshaling(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default void opDoubleMarshaling(double p1, double[] p2, java.util.Map<String, String> context)
    {
        _iceI_opDoubleMarshalingAsync(p1, p2, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<Void> opDoubleMarshalingAsync(double p1, double[] p2)
    {
        return _iceI_opDoubleMarshalingAsync(p1, p2, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<Void> opDoubleMarshalingAsync(double p1, double[] p2, java.util.Map<String, String> context)
    {
        return _iceI_opDoubleMarshalingAsync(p1, p2, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param iceP_p2 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<Void> _iceI_opDoubleMarshalingAsync(double iceP_p1, double[] iceP_p2, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<Void> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opDoubleMarshaling", null, sync, null);
        f.invoke(false, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeDouble(iceP_p1);
                     ostr.writeDoubleSeq(iceP_p2);
                 }, null);
        return f;
    }

    default void opIdempotent()
    {
        opIdempotent(com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default void opIdempotent(java.util.Map<String, String> context)
    {
        _iceI_opIdempotentAsync(context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<Void> opIdempotentAsync()
    {
        return _iceI_opIdempotentAsync(com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<Void> opIdempotentAsync(java.util.Map<String, String> context)
    {
        return _iceI_opIdempotentAsync(context, false);
    }

    /**
     * @hidden
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<Void> _iceI_opIdempotentAsync(java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<Void> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opIdempotent", com.zeroc.Ice.OperationMode.Idempotent, sync, null);
        f.invoke(false, context, com.zeroc.Ice.FormatType.DefaultFormat, null, null);
        return f;
    }

    default byte opByte1(byte opByte1)
    {
        return opByte1(opByte1, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default byte opByte1(byte opByte1, java.util.Map<String, String> context)
    {
        return _iceI_opByte1Async(opByte1, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<java.lang.Byte> opByte1Async(byte opByte1)
    {
        return _iceI_opByte1Async(opByte1, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<java.lang.Byte> opByte1Async(byte opByte1, java.util.Map<String, String> context)
    {
        return _iceI_opByte1Async(opByte1, context, false);
    }

    /**
     * @hidden
     * @param iceP_opByte1 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<java.lang.Byte> _iceI_opByte1Async(byte iceP_opByte1, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<java.lang.Byte> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opByte1", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeByte(iceP_opByte1);
                 }, istr -> {
                     byte ret;
                     ret = istr.readByte();
                     return ret;
                 });
        return f;
    }

    default short opShort1(short opShort1)
    {
        return opShort1(opShort1, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default short opShort1(short opShort1, java.util.Map<String, String> context)
    {
        return _iceI_opShort1Async(opShort1, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<java.lang.Short> opShort1Async(short opShort1)
    {
        return _iceI_opShort1Async(opShort1, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<java.lang.Short> opShort1Async(short opShort1, java.util.Map<String, String> context)
    {
        return _iceI_opShort1Async(opShort1, context, false);
    }

    /**
     * @hidden
     * @param iceP_opShort1 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<java.lang.Short> _iceI_opShort1Async(short iceP_opShort1, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<java.lang.Short> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opShort1", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeShort(iceP_opShort1);
                 }, istr -> {
                     short ret;
                     ret = istr.readShort();
                     return ret;
                 });
        return f;
    }

    default int opInt1(int opInt1)
    {
        return opInt1(opInt1, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default int opInt1(int opInt1, java.util.Map<String, String> context)
    {
        return _iceI_opInt1Async(opInt1, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<java.lang.Integer> opInt1Async(int opInt1)
    {
        return _iceI_opInt1Async(opInt1, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<java.lang.Integer> opInt1Async(int opInt1, java.util.Map<String, String> context)
    {
        return _iceI_opInt1Async(opInt1, context, false);
    }

    /**
     * @hidden
     * @param iceP_opInt1 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<java.lang.Integer> _iceI_opInt1Async(int iceP_opInt1, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<java.lang.Integer> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opInt1", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeInt(iceP_opInt1);
                 }, istr -> {
                     int ret;
                     ret = istr.readInt();
                     return ret;
                 });
        return f;
    }

    default long opLong1(long opLong1)
    {
        return opLong1(opLong1, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default long opLong1(long opLong1, java.util.Map<String, String> context)
    {
        return _iceI_opLong1Async(opLong1, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<java.lang.Long> opLong1Async(long opLong1)
    {
        return _iceI_opLong1Async(opLong1, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<java.lang.Long> opLong1Async(long opLong1, java.util.Map<String, String> context)
    {
        return _iceI_opLong1Async(opLong1, context, false);
    }

    /**
     * @hidden
     * @param iceP_opLong1 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<java.lang.Long> _iceI_opLong1Async(long iceP_opLong1, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<java.lang.Long> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opLong1", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeLong(iceP_opLong1);
                 }, istr -> {
                     long ret;
                     ret = istr.readLong();
                     return ret;
                 });
        return f;
    }

    default float opFloat1(float opFloat1)
    {
        return opFloat1(opFloat1, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default float opFloat1(float opFloat1, java.util.Map<String, String> context)
    {
        return _iceI_opFloat1Async(opFloat1, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<java.lang.Float> opFloat1Async(float opFloat1)
    {
        return _iceI_opFloat1Async(opFloat1, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<java.lang.Float> opFloat1Async(float opFloat1, java.util.Map<String, String> context)
    {
        return _iceI_opFloat1Async(opFloat1, context, false);
    }

    /**
     * @hidden
     * @param iceP_opFloat1 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<java.lang.Float> _iceI_opFloat1Async(float iceP_opFloat1, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<java.lang.Float> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opFloat1", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeFloat(iceP_opFloat1);
                 }, istr -> {
                     float ret;
                     ret = istr.readFloat();
                     return ret;
                 });
        return f;
    }

    default double opDouble1(double opDouble1)
    {
        return opDouble1(opDouble1, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default double opDouble1(double opDouble1, java.util.Map<String, String> context)
    {
        return _iceI_opDouble1Async(opDouble1, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<java.lang.Double> opDouble1Async(double opDouble1)
    {
        return _iceI_opDouble1Async(opDouble1, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<java.lang.Double> opDouble1Async(double opDouble1, java.util.Map<String, String> context)
    {
        return _iceI_opDouble1Async(opDouble1, context, false);
    }

    /**
     * @hidden
     * @param iceP_opDouble1 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<java.lang.Double> _iceI_opDouble1Async(double iceP_opDouble1, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<java.lang.Double> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opDouble1", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeDouble(iceP_opDouble1);
                 }, istr -> {
                     double ret;
                     ret = istr.readDouble();
                     return ret;
                 });
        return f;
    }

    default String opString1(String opString1)
    {
        return opString1(opString1, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default String opString1(String opString1, java.util.Map<String, String> context)
    {
        return _iceI_opString1Async(opString1, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<java.lang.String> opString1Async(String opString1)
    {
        return _iceI_opString1Async(opString1, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<java.lang.String> opString1Async(String opString1, java.util.Map<String, String> context)
    {
        return _iceI_opString1Async(opString1, context, false);
    }

    /**
     * @hidden
     * @param iceP_opString1 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<java.lang.String> _iceI_opString1Async(String iceP_opString1, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<java.lang.String> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opString1", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeString(iceP_opString1);
                 }, istr -> {
                     String ret;
                     ret = istr.readString();
                     return ret;
                 });
        return f;
    }

    default String[] opStringS1(String[] opStringS1)
    {
        return opStringS1(opStringS1, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default String[] opStringS1(String[] opStringS1, java.util.Map<String, String> context)
    {
        return _iceI_opStringS1Async(opStringS1, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<String[]> opStringS1Async(String[] opStringS1)
    {
        return _iceI_opStringS1Async(opStringS1, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<String[]> opStringS1Async(String[] opStringS1, java.util.Map<String, String> context)
    {
        return _iceI_opStringS1Async(opStringS1, context, false);
    }

    /**
     * @hidden
     * @param iceP_opStringS1 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<String[]> _iceI_opStringS1Async(String[] iceP_opStringS1, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<String[]> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opStringS1", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeStringSeq(iceP_opStringS1);
                 }, istr -> {
                     String[] ret;
                     ret = istr.readStringSeq();
                     return ret;
                 });
        return f;
    }

    default java.util.Map<java.lang.Byte, java.lang.Boolean> opByteBoolD1(java.util.Map<java.lang.Byte, java.lang.Boolean> opByteBoolD1)
    {
        return opByteBoolD1(opByteBoolD1, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default java.util.Map<java.lang.Byte, java.lang.Boolean> opByteBoolD1(java.util.Map<java.lang.Byte, java.lang.Boolean> opByteBoolD1, java.util.Map<String, String> context)
    {
        return _iceI_opByteBoolD1Async(opByteBoolD1, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<java.util.Map<java.lang.Byte, java.lang.Boolean>> opByteBoolD1Async(java.util.Map<java.lang.Byte, java.lang.Boolean> opByteBoolD1)
    {
        return _iceI_opByteBoolD1Async(opByteBoolD1, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<java.util.Map<java.lang.Byte, java.lang.Boolean>> opByteBoolD1Async(java.util.Map<java.lang.Byte, java.lang.Boolean> opByteBoolD1, java.util.Map<String, String> context)
    {
        return _iceI_opByteBoolD1Async(opByteBoolD1, context, false);
    }

    /**
     * @hidden
     * @param iceP_opByteBoolD1 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<java.util.Map<java.lang.Byte, java.lang.Boolean>> _iceI_opByteBoolD1Async(java.util.Map<java.lang.Byte, java.lang.Boolean> iceP_opByteBoolD1, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<java.util.Map<java.lang.Byte, java.lang.Boolean>> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opByteBoolD1", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ByteBoolDHelper.write(ostr, iceP_opByteBoolD1);
                 }, istr -> {
                     java.util.Map<java.lang.Byte, java.lang.Boolean> ret;
                     ret = ByteBoolDHelper.read(istr);
                     return ret;
                 });
        return f;
    }

    default String[] opStringS2(String[] stringS)
    {
        return opStringS2(stringS, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default String[] opStringS2(String[] stringS, java.util.Map<String, String> context)
    {
        return _iceI_opStringS2Async(stringS, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<String[]> opStringS2Async(String[] stringS)
    {
        return _iceI_opStringS2Async(stringS, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<String[]> opStringS2Async(String[] stringS, java.util.Map<String, String> context)
    {
        return _iceI_opStringS2Async(stringS, context, false);
    }

    /**
     * @hidden
     * @param iceP_stringS -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<String[]> _iceI_opStringS2Async(String[] iceP_stringS, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<String[]> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opStringS2", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeStringSeq(iceP_stringS);
                 }, istr -> {
                     String[] ret;
                     ret = istr.readStringSeq();
                     return ret;
                 });
        return f;
    }

    default java.util.Map<java.lang.Byte, java.lang.Boolean> opByteBoolD2(java.util.Map<java.lang.Byte, java.lang.Boolean> byteBoolD)
    {
        return opByteBoolD2(byteBoolD, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default java.util.Map<java.lang.Byte, java.lang.Boolean> opByteBoolD2(java.util.Map<java.lang.Byte, java.lang.Boolean> byteBoolD, java.util.Map<String, String> context)
    {
        return _iceI_opByteBoolD2Async(byteBoolD, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<java.util.Map<java.lang.Byte, java.lang.Boolean>> opByteBoolD2Async(java.util.Map<java.lang.Byte, java.lang.Boolean> byteBoolD)
    {
        return _iceI_opByteBoolD2Async(byteBoolD, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<java.util.Map<java.lang.Byte, java.lang.Boolean>> opByteBoolD2Async(java.util.Map<java.lang.Byte, java.lang.Boolean> byteBoolD, java.util.Map<String, String> context)
    {
        return _iceI_opByteBoolD2Async(byteBoolD, context, false);
    }

    /**
     * @hidden
     * @param iceP_byteBoolD -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<java.util.Map<java.lang.Byte, java.lang.Boolean>> _iceI_opByteBoolD2Async(java.util.Map<java.lang.Byte, java.lang.Boolean> iceP_byteBoolD, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<java.util.Map<java.lang.Byte, java.lang.Boolean>> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opByteBoolD2", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ByteBoolDHelper.write(ostr, iceP_byteBoolD);
                 }, istr -> {
                     java.util.Map<java.lang.Byte, java.lang.Boolean> ret;
                     ret = ByteBoolDHelper.read(istr);
                     return ret;
                 });
        return f;
    }

    default String[] opStringLiterals()
    {
        return opStringLiterals(com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default String[] opStringLiterals(java.util.Map<String, String> context)
    {
        return _iceI_opStringLiteralsAsync(context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<String[]> opStringLiteralsAsync()
    {
        return _iceI_opStringLiteralsAsync(com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<String[]> opStringLiteralsAsync(java.util.Map<String, String> context)
    {
        return _iceI_opStringLiteralsAsync(context, false);
    }

    /**
     * @hidden
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<String[]> _iceI_opStringLiteralsAsync(java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<String[]> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opStringLiterals", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, null, istr -> {
                     String[] ret;
                     ret = istr.readStringSeq();
                     return ret;
                 });
        return f;
    }

    default String[] opWStringLiterals()
    {
        return opWStringLiterals(com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default String[] opWStringLiterals(java.util.Map<String, String> context)
    {
        return _iceI_opWStringLiteralsAsync(context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<String[]> opWStringLiteralsAsync()
    {
        return _iceI_opWStringLiteralsAsync(com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<String[]> opWStringLiteralsAsync(java.util.Map<String, String> context)
    {
        return _iceI_opWStringLiteralsAsync(context, false);
    }

    /**
     * @hidden
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<String[]> _iceI_opWStringLiteralsAsync(java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<String[]> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opWStringLiterals", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, null, istr -> {
                     String[] ret;
                     ret = istr.readStringSeq();
                     return ret;
                 });
        return f;
    }

    default Structure opMStruct1()
    {
        return opMStruct1(com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default Structure opMStruct1(java.util.Map<String, String> context)
    {
        return _iceI_opMStruct1Async(context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<Structure> opMStruct1Async()
    {
        return _iceI_opMStruct1Async(com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<Structure> opMStruct1Async(java.util.Map<String, String> context)
    {
        return _iceI_opMStruct1Async(context, false);
    }

    /**
     * @hidden
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<Structure> _iceI_opMStruct1Async(java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<Structure> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opMStruct1", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, null, istr -> {
                     Structure ret;
                     ret = Structure.ice_read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpMStruct2Result opMStruct2(Structure p1)
    {
        return opMStruct2(p1, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpMStruct2Result opMStruct2(Structure p1, java.util.Map<String, String> context)
    {
        return _iceI_opMStruct2Async(p1, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMStruct2Result> opMStruct2Async(Structure p1)
    {
        return _iceI_opMStruct2Async(p1, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMStruct2Result> opMStruct2Async(Structure p1, java.util.Map<String, String> context)
    {
        return _iceI_opMStruct2Async(p1, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMStruct2Result> _iceI_opMStruct2Async(Structure iceP_p1, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMStruct2Result> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opMStruct2", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     Structure.ice_write(ostr, iceP_p1);
                 }, istr -> {
                     MyClass.OpMStruct2Result ret = new MyClass.OpMStruct2Result();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default String[] opMSeq1()
    {
        return opMSeq1(com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default String[] opMSeq1(java.util.Map<String, String> context)
    {
        return _iceI_opMSeq1Async(context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<String[]> opMSeq1Async()
    {
        return _iceI_opMSeq1Async(com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<String[]> opMSeq1Async(java.util.Map<String, String> context)
    {
        return _iceI_opMSeq1Async(context, false);
    }

    /**
     * @hidden
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<String[]> _iceI_opMSeq1Async(java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<String[]> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opMSeq1", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, null, istr -> {
                     String[] ret;
                     ret = istr.readStringSeq();
                     return ret;
                 });
        return f;
    }

    default MyClass.OpMSeq2Result opMSeq2(String[] p1)
    {
        return opMSeq2(p1, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpMSeq2Result opMSeq2(String[] p1, java.util.Map<String, String> context)
    {
        return _iceI_opMSeq2Async(p1, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMSeq2Result> opMSeq2Async(String[] p1)
    {
        return _iceI_opMSeq2Async(p1, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMSeq2Result> opMSeq2Async(String[] p1, java.util.Map<String, String> context)
    {
        return _iceI_opMSeq2Async(p1, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMSeq2Result> _iceI_opMSeq2Async(String[] iceP_p1, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMSeq2Result> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opMSeq2", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     ostr.writeStringSeq(iceP_p1);
                 }, istr -> {
                     MyClass.OpMSeq2Result ret = new MyClass.OpMSeq2Result();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    default java.util.Map<java.lang.String, java.lang.String> opMDict1()
    {
        return opMDict1(com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default java.util.Map<java.lang.String, java.lang.String> opMDict1(java.util.Map<String, String> context)
    {
        return _iceI_opMDict1Async(context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<java.util.Map<java.lang.String, java.lang.String>> opMDict1Async()
    {
        return _iceI_opMDict1Async(com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<java.util.Map<java.lang.String, java.lang.String>> opMDict1Async(java.util.Map<String, String> context)
    {
        return _iceI_opMDict1Async(context, false);
    }

    /**
     * @hidden
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<java.util.Map<java.lang.String, java.lang.String>> _iceI_opMDict1Async(java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<java.util.Map<java.lang.String, java.lang.String>> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opMDict1", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, null, istr -> {
                     java.util.Map<java.lang.String, java.lang.String> ret;
                     ret = StringStringDHelper.read(istr);
                     return ret;
                 });
        return f;
    }

    default MyClass.OpMDict2Result opMDict2(java.util.Map<java.lang.String, java.lang.String> p1)
    {
        return opMDict2(p1, com.zeroc.Ice.ObjectPrx.noExplicitContext);
    }

    default MyClass.OpMDict2Result opMDict2(java.util.Map<java.lang.String, java.lang.String> p1, java.util.Map<String, String> context)
    {
        return _iceI_opMDict2Async(p1, context, true).waitForResponse();
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMDict2Result> opMDict2Async(java.util.Map<java.lang.String, java.lang.String> p1)
    {
        return _iceI_opMDict2Async(p1, com.zeroc.Ice.ObjectPrx.noExplicitContext, false);
    }

    default java.util.concurrent.CompletableFuture<MyClass.OpMDict2Result> opMDict2Async(java.util.Map<java.lang.String, java.lang.String> p1, java.util.Map<String, String> context)
    {
        return _iceI_opMDict2Async(p1, context, false);
    }

    /**
     * @hidden
     * @param iceP_p1 -
     * @param context -
     * @param sync -
     * @return -
     **/
    default com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMDict2Result> _iceI_opMDict2Async(java.util.Map<java.lang.String, java.lang.String> iceP_p1, java.util.Map<String, String> context, boolean sync)
    {
        com.zeroc.IceInternal.OutgoingAsync<MyClass.OpMDict2Result> f = new com.zeroc.IceInternal.OutgoingAsync<>(this, "opMDict2", null, sync, null);
        f.invoke(true, context, com.zeroc.Ice.FormatType.DefaultFormat, ostr -> {
                     StringStringDHelper.write(ostr, iceP_p1);
                 }, istr -> {
                     MyClass.OpMDict2Result ret = new MyClass.OpMDict2Result();
                     ret.read(istr);
                     return ret;
                 });
        return f;
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    static MyClassPrx checkedCast(com.zeroc.Ice.ObjectPrx obj)
    {
        return checkedCast(obj, noExplicitContext);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param obj The untyped proxy.
     * @param context The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    static MyClassPrx checkedCast(com.zeroc.Ice.ObjectPrx obj, java.util.Map<String, String> context)
    {
        if (obj != null)
        {
            try
            {
                boolean ok = obj.ice_isA(ice_staticId(), context);
                return ok ? new _MyClassPrxI(obj) : null;
            }
            catch (com.zeroc.Ice.FacetNotExistException ex)
            {
            }
        }
        return null;
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param obj The untyped proxy.
     * @param facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    static MyClassPrx checkedCast(com.zeroc.Ice.ObjectPrx obj, String facet)
    {
        return checkedCast(obj, facet, noExplicitContext);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param obj The untyped proxy.
     * @param facet The name of the desired facet.
     * @param context The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    static MyClassPrx checkedCast(com.zeroc.Ice.ObjectPrx obj, String facet, java.util.Map<String, String> context)
    {
        return (obj == null) ? null : checkedCast(obj.ice_facet(facet), context);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param obj The untyped proxy.
     * @return A proxy for this type.
     **/
    static MyClassPrx uncheckedCast(com.zeroc.Ice.ObjectPrx obj)
    {
        return (obj == null) ? null : new _MyClassPrxI(obj);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param obj The untyped proxy.
     * @param facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    static MyClassPrx uncheckedCast(com.zeroc.Ice.ObjectPrx obj, String facet)
    {
        return (obj == null) ? null : new _MyClassPrxI(obj.ice_facet(facet));
    }

    @Override
    MyClassPrx ice_context(java.util.Map<String, String> newContext);

    @Override
    MyClassPrx ice_adapterId(String newAdapterId);

    @Override
    MyClassPrx ice_endpoints(com.zeroc.Ice.Endpoint[] newEndpoints);

    @Override
    MyClassPrx ice_locatorCacheTimeout(int newTimeout);

    @Override
    MyClassPrx ice_invocationTimeout(int newTimeout);

    @Override
    MyClassPrx ice_connectionCached(boolean newCache);

    @Override
    MyClassPrx ice_endpointSelection(com.zeroc.Ice.EndpointSelectionType newType);

    @Override
    MyClassPrx ice_secure(boolean b);

    @Override
    MyClassPrx ice_encodingVersion(com.zeroc.Ice.EncodingVersion e);

    @Override
    MyClassPrx ice_preferSecure(boolean b);

    @Override
    MyClassPrx ice_router(com.zeroc.Ice.RouterPrx router);

    @Override
    MyClassPrx ice_locator(com.zeroc.Ice.LocatorPrx locator);

    @Override
    MyClassPrx ice_collocationOptimized(boolean b);

    @Override
    MyClassPrx ice_twoway();

    @Override
    MyClassPrx ice_oneway();

    @Override
    MyClassPrx ice_batchOneway();

    @Override
    MyClassPrx ice_datagram();

    @Override
    MyClassPrx ice_batchDatagram();

    @Override
    MyClassPrx ice_compress(boolean co);

    @Override
    MyClassPrx ice_connectionId(String connectionId);

    @Override
    MyClassPrx ice_fixed(com.zeroc.Ice.Connection connection);

    static String ice_staticId()
    {
        return "::Test::MyClass";
    }
}
