//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Test;

public interface Initial extends com.zeroc.Ice.Object
{
    NoNamespace.C1 getNoNamespaceC2AsC1(com.zeroc.Ice.Current current);

    NoNamespace.C2 getNoNamespaceC2AsC2(com.zeroc.Ice.Current current);

    void throwNoNamespaceE2AsE1(com.zeroc.Ice.Current current)
        throws NoNamespace.E1;

    void throwNoNamespaceE2AsE2(com.zeroc.Ice.Current current)
        throws NoNamespace.E2;

    void throwNoNamespaceNotify(com.zeroc.Ice.Current current)
        throws NoNamespace._notify;

    WithNamespace.C1 getWithNamespaceC2AsC1(com.zeroc.Ice.Current current);

    WithNamespace.C2 getWithNamespaceC2AsC2(com.zeroc.Ice.Current current);

    void throwWithNamespaceE2AsE1(com.zeroc.Ice.Current current)
        throws WithNamespace.E1;

    void throwWithNamespaceE2AsE2(com.zeroc.Ice.Current current)
        throws WithNamespace.E2;

    void shutdown(com.zeroc.Ice.Current current);

    /** @hidden */
    static final String[] _iceIds =
    {
        "::Ice::Object",
        "::Test::Initial"
    };

    @Override
    default String[] ice_ids(com.zeroc.Ice.Current current)
    {
        return _iceIds;
    }

    @Override
    default String ice_id(com.zeroc.Ice.Current current)
    {
        return ice_staticId();
    }

    static String ice_staticId()
    {
        return "::Test::Initial";
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_getNoNamespaceC2AsC1(Initial obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        inS.readEmptyParams();
        NoNamespace.C1 ret = obj.getNoNamespaceC2AsC1(current);
        com.zeroc.Ice.OutputStream ostr = inS.startWriteParams();
        ostr.writeValue(ret);
        ostr.writePendingValues();
        inS.endWriteParams(ostr);
        return inS.setResult(ostr);
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_getNoNamespaceC2AsC2(Initial obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        inS.readEmptyParams();
        NoNamespace.C2 ret = obj.getNoNamespaceC2AsC2(current);
        com.zeroc.Ice.OutputStream ostr = inS.startWriteParams();
        ostr.writeValue(ret);
        ostr.writePendingValues();
        inS.endWriteParams(ostr);
        return inS.setResult(ostr);
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
     * @throws com.zeroc.Ice.UserException -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_throwNoNamespaceE2AsE1(Initial obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
        throws com.zeroc.Ice.UserException
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        inS.readEmptyParams();
        obj.throwNoNamespaceE2AsE1(current);
        return inS.setResult(inS.writeEmptyParams());
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
     * @throws com.zeroc.Ice.UserException -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_throwNoNamespaceE2AsE2(Initial obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
        throws com.zeroc.Ice.UserException
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        inS.readEmptyParams();
        obj.throwNoNamespaceE2AsE2(current);
        return inS.setResult(inS.writeEmptyParams());
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
     * @throws com.zeroc.Ice.UserException -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_throwNoNamespaceNotify(Initial obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
        throws com.zeroc.Ice.UserException
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        inS.readEmptyParams();
        obj.throwNoNamespaceNotify(current);
        return inS.setResult(inS.writeEmptyParams());
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_getWithNamespaceC2AsC1(Initial obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        inS.readEmptyParams();
        WithNamespace.C1 ret = obj.getWithNamespaceC2AsC1(current);
        com.zeroc.Ice.OutputStream ostr = inS.startWriteParams();
        ostr.writeValue(ret);
        ostr.writePendingValues();
        inS.endWriteParams(ostr);
        return inS.setResult(ostr);
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_getWithNamespaceC2AsC2(Initial obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        inS.readEmptyParams();
        WithNamespace.C2 ret = obj.getWithNamespaceC2AsC2(current);
        com.zeroc.Ice.OutputStream ostr = inS.startWriteParams();
        ostr.writeValue(ret);
        ostr.writePendingValues();
        inS.endWriteParams(ostr);
        return inS.setResult(ostr);
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
     * @throws com.zeroc.Ice.UserException -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_throwWithNamespaceE2AsE1(Initial obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
        throws com.zeroc.Ice.UserException
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        inS.readEmptyParams();
        obj.throwWithNamespaceE2AsE1(current);
        return inS.setResult(inS.writeEmptyParams());
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
     * @throws com.zeroc.Ice.UserException -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_throwWithNamespaceE2AsE2(Initial obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
        throws com.zeroc.Ice.UserException
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        inS.readEmptyParams();
        obj.throwWithNamespaceE2AsE2(current);
        return inS.setResult(inS.writeEmptyParams());
    }

    /**
     * @hidden
     * @param obj -
     * @param inS -
     * @param current -
     * @return -
    **/
    static java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceD_shutdown(Initial obj, final com.zeroc.IceInternal.Incoming inS, com.zeroc.Ice.Current current)
    {
        com.zeroc.Ice.Object._iceCheckMode(null, current.mode);
        inS.readEmptyParams();
        obj.shutdown(current);
        return inS.setResult(inS.writeEmptyParams());
    }

    /** @hidden */
    @Override
    default java.util.concurrent.CompletionStage<com.zeroc.Ice.OutputStream> _iceDispatch(com.zeroc.IceInternal.Incoming in, com.zeroc.Ice.Current current)
        throws com.zeroc.Ice.UserException
    {
        return switch (current.operation)
        {
            case "getNoNamespaceC2AsC1" -> Initial._iceD_getNoNamespaceC2AsC1(this, in, current);
            case "getNoNamespaceC2AsC2" -> Initial._iceD_getNoNamespaceC2AsC2(this, in, current);
            case "throwNoNamespaceE2AsE1" -> Initial._iceD_throwNoNamespaceE2AsE1(this, in, current);
            case "throwNoNamespaceE2AsE2" -> Initial._iceD_throwNoNamespaceE2AsE2(this, in, current);
            case "throwNoNamespaceNotify" -> Initial._iceD_throwNoNamespaceNotify(this, in, current);
            case "getWithNamespaceC2AsC1" -> Initial._iceD_getWithNamespaceC2AsC1(this, in, current);
            case "getWithNamespaceC2AsC2" -> Initial._iceD_getWithNamespaceC2AsC2(this, in, current);
            case "throwWithNamespaceE2AsE1" -> Initial._iceD_throwWithNamespaceE2AsE1(this, in, current);
            case "throwWithNamespaceE2AsE2" -> Initial._iceD_throwWithNamespaceE2AsE2(this, in, current);
            case "shutdown" -> Initial._iceD_shutdown(this, in, current);
            case "ice_id" -> com.zeroc.Ice.Object._iceD_ice_id(this, in, current);
            case "ice_ids" -> com.zeroc.Ice.Object._iceD_ice_ids(this, in, current);
            case "ice_isA" -> com.zeroc.Ice.Object._iceD_ice_isA(this, in, current);
            case "ice_ping" -> com.zeroc.Ice.Object._iceD_ice_ping(this, in, current);
            default -> throw new com.zeroc.Ice.OperationNotExistException();
        };
    }
}
