//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Session.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.zeroc.Glacier2;

/** @hidden */
public class _IdentitySetPrxI extends com.zeroc.Ice._ObjectPrxI implements IdentitySetPrx
{
    @Override
    public IdentitySetPrx ice_context(java.util.Map<String, String> newContext)
    {
        return (IdentitySetPrx)super.ice_context(newContext);
    }

    @Override
    public IdentitySetPrx ice_adapterId(String newAdapterId)
    {
        return (IdentitySetPrx)super.ice_adapterId(newAdapterId);
    }

    @Override
    public IdentitySetPrx ice_endpoints(com.zeroc.Ice.Endpoint[] newEndpoints)
    {
        return (IdentitySetPrx)super.ice_endpoints(newEndpoints);
    }

    @Override
    public IdentitySetPrx ice_locatorCacheTimeout(int newTimeout)
    {
        return (IdentitySetPrx)super.ice_locatorCacheTimeout(newTimeout);
    }

    @Override
    public IdentitySetPrx ice_invocationTimeout(int newTimeout)
    {
        return (IdentitySetPrx)super.ice_invocationTimeout(newTimeout);
    }

    @Override
    public IdentitySetPrx ice_connectionCached(boolean newCache)
    {
        return (IdentitySetPrx)super.ice_connectionCached(newCache);
    }

    @Override
    public IdentitySetPrx ice_endpointSelection(com.zeroc.Ice.EndpointSelectionType newType)
    {
        return (IdentitySetPrx)super.ice_endpointSelection(newType);
    }

    @Override
    public IdentitySetPrx ice_secure(boolean b)
    {
        return (IdentitySetPrx)super.ice_secure(b);
    }

    @Override
    public IdentitySetPrx ice_encodingVersion(com.zeroc.Ice.EncodingVersion e)
    {
        return (IdentitySetPrx)super.ice_encodingVersion(e);
    }

    @Override
    public IdentitySetPrx ice_preferSecure(boolean b)
    {
        return (IdentitySetPrx)super.ice_preferSecure(b);
    }

    @Override
    public IdentitySetPrx ice_router(com.zeroc.Ice.RouterPrx router)
    {
        return (IdentitySetPrx)super.ice_router(router);
    }

    @Override
    public IdentitySetPrx ice_locator(com.zeroc.Ice.LocatorPrx locator)
    {
        return (IdentitySetPrx)super.ice_locator(locator);
    }

    @Override
    public IdentitySetPrx ice_collocationOptimized(boolean b)
    {
        return (IdentitySetPrx)super.ice_collocationOptimized(b);
    }

    @Override
    public IdentitySetPrx ice_twoway()
    {
        return (IdentitySetPrx)super.ice_twoway();
    }

    @Override
    public IdentitySetPrx ice_oneway()
    {
        return (IdentitySetPrx)super.ice_oneway();
    }

    @Override
    public IdentitySetPrx ice_batchOneway()
    {
        return (IdentitySetPrx)super.ice_batchOneway();
    }

    @Override
    public IdentitySetPrx ice_datagram()
    {
        return (IdentitySetPrx)super.ice_datagram();
    }

    @Override
    public IdentitySetPrx ice_batchDatagram()
    {
        return (IdentitySetPrx)super.ice_batchDatagram();
    }

    @Override
    public IdentitySetPrx ice_compress(boolean co)
    {
        return (IdentitySetPrx)super.ice_compress(co);
    }

    @Override
    public IdentitySetPrx ice_timeout(int t)
    {
        return (IdentitySetPrx)super.ice_timeout(t);
    }

    @Override
    public IdentitySetPrx ice_connectionId(String connectionId)
    {
        return (IdentitySetPrx)super.ice_connectionId(connectionId);
    }

    @Override
    public IdentitySetPrx ice_fixed(com.zeroc.Ice.Connection connection)
    {
        return (IdentitySetPrx)super.ice_fixed(connection);
    }

    /** @hidden */
    public static final long serialVersionUID = 0L;
}
