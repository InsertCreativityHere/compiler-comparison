<?php
//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `CTypes.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


namespace Test
{
    if(!defined('\\Test\\IntConst1'))
    {
        define(__NAMESPACE__ . '\\IntConst1', 100);
    }
}

namespace Test
{
    if(!defined('\\Test\\IntConst2'))
    {
        define(__NAMESPACE__ . '\\IntConst2', 100);
    }
}

namespace Test
{
    if(!defined('\\Test\\IntConst3'))
    {
        define(__NAMESPACE__ . '\\IntConst3', 100);
    }
}

namespace Test
{
    global $Test__t_Enum1;
    class Enum1
    {
        const Enum11 = 0;
        const Enum12 = 1;
        const Enum13 = 2;
    }

    $Test__t_Enum1 = IcePHP_defineEnum('::Test::Enum1', array('Enum11', 0, 'Enum12', 1, 'Enum13', 2));
}

namespace Test
{
    global $Test__t_Enum2;
    class Enum2
    {
        const Enum21 = 0;
        const Enum22 = 1;
        const Enum23 = 2;
    }

    $Test__t_Enum2 = IcePHP_defineEnum('::Test::Enum2', array('Enum21', 0, 'Enum22', 1, 'Enum23', 2));
}

namespace Test
{
    global $Test__t_Enum3;
    class Enum3
    {
        const Enum31 = 0;
        const Enum32 = 1;
        const Enum33 = 2;
    }

    $Test__t_Enum3 = IcePHP_defineEnum('::Test::Enum3', array('Enum31', 0, 'Enum32', 1, 'Enum33', 2));
}

namespace Test
{
    global $Test__t_Enum4;
    class Enum4
    {
        const Enum41 = 0;
        const Enum42 = 1;
        const Enum43 = 2;
    }

    $Test__t_Enum4 = IcePHP_defineEnum('::Test::Enum4', array('Enum41', 0, 'Enum42', 1, 'Enum43', 2));
}

namespace Test
{
    global $Test__t_EnumExplicit0;
    class EnumExplicit0
    {
        const EnumExplicit01 = 1;
        const EnumExplicit02 = 2;
        const EnumExplicit03 = 3;
    }

    $Test__t_EnumExplicit0 = IcePHP_defineEnum('::Test::EnumExplicit0', array('EnumExplicit01', 1, 'EnumExplicit02', 2, 'EnumExplicit03', 3));
}

namespace Test
{
    global $Test__t_EnumExplicit1;
    class EnumExplicit1
    {
        const EnumExplicit11 = 1;
        const EnumExplicit12 = 2;
        const EnumExplicit13 = 3;
    }

    $Test__t_EnumExplicit1 = IcePHP_defineEnum('::Test::EnumExplicit1', array('EnumExplicit11', 1, 'EnumExplicit12', 2, 'EnumExplicit13', 3));
}

namespace Test
{
    global $Test__t_EnumExplicit2;
    class EnumExplicit2
    {
        const EnumExplicit21 = 1;
        const EnumExplicit22 = 2;
        const EnumExplicit23 = 3;
    }

    $Test__t_EnumExplicit2 = IcePHP_defineEnum('::Test::EnumExplicit2', array('EnumExplicit21', 1, 'EnumExplicit22', 2, 'EnumExplicit23', 3));
}

namespace Test
{
    global $Test__t_EnumExplicit3;
    class EnumExplicit3
    {
        const EnumExplicit31 = 1;
        const EnumExplicit32 = 2;
        const EnumExplicit33 = 3;
    }

    $Test__t_EnumExplicit3 = IcePHP_defineEnum('::Test::EnumExplicit3', array('EnumExplicit31', 1, 'EnumExplicit32', 2, 'EnumExplicit33', 3));
}

namespace Test
{
    global $Test__t_Sequence1;

    if(!isset($Test__t_Sequence1))
    {
        global $IcePHP__t_int;
        $Test__t_Sequence1 = IcePHP_defineSequence('::Test::Sequence1', $IcePHP__t_int);
    }
}

namespace Test
{
    global $Test__t_Sequence2;

    if(!isset($Test__t_Sequence2))
    {
        global $IcePHP__t_int;
        $Test__t_Sequence2 = IcePHP_defineSequence('::Test::Sequence2', $IcePHP__t_int);
    }
}

namespace Test
{
    global $Test__t_Sequence3;

    if(!isset($Test__t_Sequence3))
    {
        global $IcePHP__t_int;
        $Test__t_Sequence3 = IcePHP_defineSequence('::Test::Sequence3', $IcePHP__t_int);
    }
}

namespace Test
{
    global $Test__t_Dictionary1;

    if(!isset($Test__t_Dictionary1))
    {
        global $IcePHP__t_string;
        global $IcePHP__t_int;
        $Test__t_Dictionary1 = IcePHP_defineDictionary('::Test::Dictionary1', $IcePHP__t_string, $IcePHP__t_int);
    }
}

namespace Test
{
    global $Test__t_Dictionary2;

    if(!isset($Test__t_Dictionary2))
    {
        global $IcePHP__t_string;
        global $IcePHP__t_int;
        $Test__t_Dictionary2 = IcePHP_defineDictionary('::Test::Dictionary2', $IcePHP__t_string, $IcePHP__t_int);
    }
}

namespace Test
{
    global $Test__t_Dictionary3;

    if(!isset($Test__t_Dictionary3))
    {
        global $IcePHP__t_string;
        global $IcePHP__t_int;
        $Test__t_Dictionary3 = IcePHP_defineDictionary('::Test::Dictionary3', $IcePHP__t_string, $IcePHP__t_int);
    }
}

namespace Test
{
    global $Test__t_Dictionary4;

    if(!isset($Test__t_Dictionary4))
    {
        global $IcePHP__t_string;
        global $IcePHP__t_int;
        $Test__t_Dictionary4 = IcePHP_defineDictionary('::Test::Dictionary4', $IcePHP__t_string, $IcePHP__t_int);
    }
}

namespace Test
{
    global $Test__t_Struct1;
    class Struct1
    {
        public function __construct($str='', $b=false)
        {
            $this->str = $str;
            $this->b = $b;
        }

        public function __toString(): string
        {
            global $Test__t_Struct1;
            return IcePHP_stringify($this, $Test__t_Struct1);
        }

        public $str;
        public $b;
    }

    global $IcePHP__t_string;
    global $IcePHP__t_bool;
    $Test__t_Struct1 = IcePHP_defineStruct('::Test::Struct1', '\\Test\\Struct1', array(
        array('str', $IcePHP__t_string),
        array('b', $IcePHP__t_bool)));
}

namespace Test
{
    global $Test__t_Struct2;
    class Struct2
    {
        public function __construct($str='', $b=false)
        {
            $this->str = $str;
            $this->b = $b;
        }

        public function __toString(): string
        {
            global $Test__t_Struct2;
            return IcePHP_stringify($this, $Test__t_Struct2);
        }

        public $str;
        public $b;
    }

    global $IcePHP__t_string;
    global $IcePHP__t_bool;
    $Test__t_Struct2 = IcePHP_defineStruct('::Test::Struct2', '\\Test\\Struct2', array(
        array('str', $IcePHP__t_string),
        array('b', $IcePHP__t_bool)));
}

namespace Test
{
    global $Test__t_Struct3;
    class Struct3
    {
        public function __construct($str='', $b=false)
        {
            $this->str = $str;
            $this->b = $b;
        }

        public function __toString(): string
        {
            global $Test__t_Struct3;
            return IcePHP_stringify($this, $Test__t_Struct3);
        }

        public $str;
        public $b;
    }

    global $IcePHP__t_string;
    global $IcePHP__t_bool;
    $Test__t_Struct3 = IcePHP_defineStruct('::Test::Struct3', '\\Test\\Struct3', array(
        array('str', $IcePHP__t_string),
        array('b', $IcePHP__t_bool)));
}

namespace Test
{
    global $Test__t_Struct4;
    class Struct4
    {
        public function __construct($str='', $b=false)
        {
            $this->str = $str;
            $this->b = $b;
        }

        public function __toString(): string
        {
            global $Test__t_Struct4;
            return IcePHP_stringify($this, $Test__t_Struct4);
        }

        public $str;
        public $b;
    }

    global $IcePHP__t_string;
    global $IcePHP__t_bool;
    $Test__t_Struct4 = IcePHP_defineStruct('::Test::Struct4', '\\Test\\Struct4', array(
        array('str', $IcePHP__t_string),
        array('b', $IcePHP__t_bool)));
}

namespace Test
{
    global $Test__t_Struct5;
    class Struct5
    {
        public function __construct($str='', $b=false)
        {
            $this->str = $str;
            $this->b = $b;
        }

        public function __toString(): string
        {
            global $Test__t_Struct5;
            return IcePHP_stringify($this, $Test__t_Struct5);
        }

        public $str;
        public $b;
    }

    global $IcePHP__t_string;
    global $IcePHP__t_bool;
    $Test__t_Struct5 = IcePHP_defineStruct('::Test::Struct5', '\\Test\\Struct5', array(
        array('str', $IcePHP__t_string),
        array('b', $IcePHP__t_bool)));
}

namespace Test
{
    global $Test__t_Interface1;
    global $Test__t_Interface1Prx;

    class Interface1PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::Interface1', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::Interface1', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::Interface1';
        }
    }
    $Test__t_Interface1 = IcePHP_defineClass('::Test::Interface1', '\\Test\\Interface1', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_Interface1Prx = IcePHP_defineProxy('::Test::Interface1', $Ice__t_ObjectPrx, null);
}

namespace Test
{
    global $Test__t_Interface2;
    global $Test__t_Interface2Prx;

    class Interface2PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::Interface2', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::Interface2', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::Interface2';
        }
    }
    $Test__t_Interface2 = IcePHP_defineClass('::Test::Interface2', '\\Test\\Interface2', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_Interface2Prx = IcePHP_defineProxy('::Test::Interface2', $Ice__t_ObjectPrx, null);
}

namespace Test
{
    global $Test__t_Interface3;
    global $Test__t_Interface3Prx;

    class Interface3PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::Interface3', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::Interface3', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::Interface3';
        }
    }
    $Test__t_Interface3 = IcePHP_defineClass('::Test::Interface3', '\\Test\\Interface3', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_Interface3Prx = IcePHP_defineProxy('::Test::Interface3', $Ice__t_ObjectPrx, null);
}

namespace Test
{
    global $Test__t_Interface4;
    global $Test__t_Interface4Prx;

    class Interface4PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::Interface4', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::Interface4', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::Interface4';
        }
    }
    $Test__t_Interface4 = IcePHP_defineClass('::Test::Interface4', '\\Test\\Interface4', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_Interface4Prx = IcePHP_defineProxy('::Test::Interface4', $Ice__t_ObjectPrx, null);
}

namespace Test
{
    global $Test__t_EmptyClass1;
    class EmptyClass1 extends \Ice\Value
    {
        public function __construct()
        {
        }

        public function ice_id()
        {
            return '::Test::EmptyClass1';
        }

        public static function ice_staticId()
        {
            return '::Test::EmptyClass1';
        }

        public function __toString(): string
        {
            global $Test__t_EmptyClass1;
            return IcePHP_stringify($this, $Test__t_EmptyClass1);
        }
    }

    global $Ice__t_Value;
    $Test__t_EmptyClass1 = IcePHP_defineClass('::Test::EmptyClass1', '\\Test\\EmptyClass1', -1, false, false, $Ice__t_Value, null);
}

namespace Test
{
    global $Test__t_EmptyClass2;
    class EmptyClass2 extends \Ice\Value
    {
        public function __construct()
        {
        }

        public function ice_id()
        {
            return '::Test::EmptyClass2';
        }

        public static function ice_staticId()
        {
            return '::Test::EmptyClass2';
        }

        public function __toString(): string
        {
            global $Test__t_EmptyClass2;
            return IcePHP_stringify($this, $Test__t_EmptyClass2);
        }
    }

    global $Ice__t_Value;
    $Test__t_EmptyClass2 = IcePHP_defineClass('::Test::EmptyClass2', '\\Test\\EmptyClass2', -1, false, false, $Ice__t_Value, null);
}

namespace Test
{
    global $Test__t_EmptyClass3;
    class EmptyClass3 extends \Ice\Value
    {
        public function __construct()
        {
        }

        public function ice_id()
        {
            return '::Test::EmptyClass3';
        }

        public static function ice_staticId()
        {
            return '::Test::EmptyClass3';
        }

        public function __toString(): string
        {
            global $Test__t_EmptyClass3;
            return IcePHP_stringify($this, $Test__t_EmptyClass3);
        }
    }

    global $Ice__t_Value;
    $Test__t_EmptyClass3 = IcePHP_defineClass('::Test::EmptyClass3', '\\Test\\EmptyClass3', -1, false, false, $Ice__t_Value, null);
}

namespace Test
{
    global $Test__t_EmptyClass4;
    class EmptyClass4 extends \Ice\Value
    {
        public function __construct()
        {
        }

        public function ice_id()
        {
            return '::Test::EmptyClass4';
        }

        public static function ice_staticId()
        {
            return '::Test::EmptyClass4';
        }

        public function __toString(): string
        {
            global $Test__t_EmptyClass4;
            return IcePHP_stringify($this, $Test__t_EmptyClass4);
        }
    }

    global $Ice__t_Value;
    $Test__t_EmptyClass4 = IcePHP_defineClass('::Test::EmptyClass4', '\\Test\\EmptyClass4', -1, false, false, $Ice__t_Value, null);
}

namespace Test
{
    global $Test__t_EmptyClass5;
    class EmptyClass5 extends \Ice\Value
    {
        public function __construct()
        {
        }

        public function ice_id()
        {
            return '::Test::EmptyClass5';
        }

        public static function ice_staticId()
        {
            return '::Test::EmptyClass5';
        }

        public function __toString(): string
        {
            global $Test__t_EmptyClass5;
            return IcePHP_stringify($this, $Test__t_EmptyClass5);
        }
    }

    global $Ice__t_Value;
    $Test__t_EmptyClass5 = IcePHP_defineClass('::Test::EmptyClass5', '\\Test\\EmptyClass5', -1, false, false, $Ice__t_Value, null);
}

namespace Test
{
    global $Test__t_SimpleClass1;
    class SimpleClass1 extends \Ice\Value
    {
        public function __construct($str='', $f=0.0)
        {
            $this->str = $str;
            $this->f = $f;
        }

        public function ice_id()
        {
            return '::Test::SimpleClass1';
        }

        public static function ice_staticId()
        {
            return '::Test::SimpleClass1';
        }

        public function __toString(): string
        {
            global $Test__t_SimpleClass1;
            return IcePHP_stringify($this, $Test__t_SimpleClass1);
        }

        public $str;
        public $f;
    }

    global $Ice__t_Value;
    global $IcePHP__t_string;
    global $IcePHP__t_float;
    $Test__t_SimpleClass1 = IcePHP_defineClass('::Test::SimpleClass1', '\\Test\\SimpleClass1', -1, false, false, $Ice__t_Value, array(
        array('str', $IcePHP__t_string, false, 0),
        array('f', $IcePHP__t_float, false, 0)));
}

namespace Test
{
    global $Test__t_SimpleClass2;
    class SimpleClass2 extends \Ice\Value
    {
        public function __construct($str='', $f=0.0)
        {
            $this->str = $str;
            $this->f = $f;
        }

        public function ice_id()
        {
            return '::Test::SimpleClass2';
        }

        public static function ice_staticId()
        {
            return '::Test::SimpleClass2';
        }

        public function __toString(): string
        {
            global $Test__t_SimpleClass2;
            return IcePHP_stringify($this, $Test__t_SimpleClass2);
        }

        public $str;
        public $f;
    }

    global $Ice__t_Value;
    global $IcePHP__t_string;
    global $IcePHP__t_float;
    $Test__t_SimpleClass2 = IcePHP_defineClass('::Test::SimpleClass2', '\\Test\\SimpleClass2', -1, false, false, $Ice__t_Value, array(
        array('str', $IcePHP__t_string, false, 0),
        array('f', $IcePHP__t_float, false, 0)));
}

namespace Test
{
    global $Test__t_SimpleClass3;
    class SimpleClass3 extends \Ice\Value
    {
        public function __construct($str='', $f=0.0)
        {
            $this->str = $str;
            $this->f = $f;
        }

        public function ice_id()
        {
            return '::Test::SimpleClass3';
        }

        public static function ice_staticId()
        {
            return '::Test::SimpleClass3';
        }

        public function __toString(): string
        {
            global $Test__t_SimpleClass3;
            return IcePHP_stringify($this, $Test__t_SimpleClass3);
        }

        public $str;
        public $f;
    }

    global $Ice__t_Value;
    global $IcePHP__t_string;
    global $IcePHP__t_float;
    $Test__t_SimpleClass3 = IcePHP_defineClass('::Test::SimpleClass3', '\\Test\\SimpleClass3', -1, false, false, $Ice__t_Value, array(
        array('str', $IcePHP__t_string, false, 0),
        array('f', $IcePHP__t_float, false, 0)));
}

namespace Test
{
    global $Test__t_SimpleClass4;
    class SimpleClass4 extends \Ice\Value
    {
        public function __construct($str='', $f=0.0)
        {
            $this->str = $str;
            $this->f = $f;
        }

        public function ice_id()
        {
            return '::Test::SimpleClass4';
        }

        public static function ice_staticId()
        {
            return '::Test::SimpleClass4';
        }

        public function __toString(): string
        {
            global $Test__t_SimpleClass4;
            return IcePHP_stringify($this, $Test__t_SimpleClass4);
        }

        public $str;
        public $f;
    }

    global $Ice__t_Value;
    global $IcePHP__t_string;
    global $IcePHP__t_float;
    $Test__t_SimpleClass4 = IcePHP_defineClass('::Test::SimpleClass4', '\\Test\\SimpleClass4', -1, false, false, $Ice__t_Value, array(
        array('str', $IcePHP__t_string, false, 0),
        array('f', $IcePHP__t_float, false, 0)));
}

namespace Test
{
    global $Test__t_SimpleClass5;
    class SimpleClass5 extends \Ice\Value
    {
        public function __construct($str='', $f=0.0)
        {
            $this->str = $str;
            $this->f = $f;
        }

        public function ice_id()
        {
            return '::Test::SimpleClass5';
        }

        public static function ice_staticId()
        {
            return '::Test::SimpleClass5';
        }

        public function __toString(): string
        {
            global $Test__t_SimpleClass5;
            return IcePHP_stringify($this, $Test__t_SimpleClass5);
        }

        public $str;
        public $f;
    }

    global $Ice__t_Value;
    global $IcePHP__t_string;
    global $IcePHP__t_float;
    $Test__t_SimpleClass5 = IcePHP_defineClass('::Test::SimpleClass5', '\\Test\\SimpleClass5', -1, false, false, $Ice__t_Value, array(
        array('str', $IcePHP__t_string, false, 0),
        array('f', $IcePHP__t_float, false, 0)));
}

namespace Test
{
    global $Test__t_SimpleClass6;
    class SimpleClass6 extends \Ice\Value
    {
        public function __construct($str='', $f=0.0)
        {
            $this->str = $str;
            $this->f = $f;
        }

        public function ice_id()
        {
            return '::Test::SimpleClass6';
        }

        public static function ice_staticId()
        {
            return '::Test::SimpleClass6';
        }

        public function __toString(): string
        {
            global $Test__t_SimpleClass6;
            return IcePHP_stringify($this, $Test__t_SimpleClass6);
        }

        public $str;
        public $f;
    }

    global $Ice__t_Value;
    global $IcePHP__t_string;
    global $IcePHP__t_float;
    $Test__t_SimpleClass6 = IcePHP_defineClass('::Test::SimpleClass6', '\\Test\\SimpleClass6', -1, false, false, $Ice__t_Value, array(
        array('str', $IcePHP__t_string, false, 0),
        array('f', $IcePHP__t_float, false, 0)));
}

namespace Test
{
    global $Test__t_SimpleClass7;
    class SimpleClass7 extends \Ice\Value
    {
        public function __construct($str='', $f=0.0)
        {
            $this->str = $str;
            $this->f = $f;
        }

        public function ice_id()
        {
            return '::Test::SimpleClass7';
        }

        public static function ice_staticId()
        {
            return '::Test::SimpleClass7';
        }

        public function __toString(): string
        {
            global $Test__t_SimpleClass7;
            return IcePHP_stringify($this, $Test__t_SimpleClass7);
        }

        public $str;
        public $f;
    }

    global $Ice__t_Value;
    global $IcePHP__t_string;
    global $IcePHP__t_float;
    $Test__t_SimpleClass7 = IcePHP_defineClass('::Test::SimpleClass7', '\\Test\\SimpleClass7', -1, false, false, $Ice__t_Value, array(
        array('str', $IcePHP__t_string, false, 0),
        array('f', $IcePHP__t_float, false, 0)));
}

namespace Test
{
    global $Test__t_Exception1;
    class Exception1 extends \Ice\UserException
    {
        public function __construct($str='', $b=false)
        {
            $this->str = $str;
            $this->b = $b;
        }

        public function ice_id()
        {
            return '::Test::Exception1';
        }

        public function __toString(): string
        {
            global $Test__t_Exception1;
            return IcePHP_stringifyException($this, $Test__t_Exception1);
        }

        public $str;
        public $b;
    }
    global $IcePHP__t_string;
    global $IcePHP__t_bool;

    $Test__t_Exception1 = IcePHP_defineException('::Test::Exception1', '\\Test\\Exception1', false, null, array(
        array('str', $IcePHP__t_string, false, 0),
        array('b', $IcePHP__t_bool, false, 0)));
}

namespace Test
{
    global $Test__t_Exception2;
    class Exception2 extends \Ice\UserException
    {
        public function __construct($str='', $b=false)
        {
            $this->str = $str;
            $this->b = $b;
        }

        public function ice_id()
        {
            return '::Test::Exception2';
        }

        public function __toString(): string
        {
            global $Test__t_Exception2;
            return IcePHP_stringifyException($this, $Test__t_Exception2);
        }

        public $str;
        public $b;
    }
    global $IcePHP__t_string;
    global $IcePHP__t_bool;

    $Test__t_Exception2 = IcePHP_defineException('::Test::Exception2', '\\Test\\Exception2', false, null, array(
        array('str', $IcePHP__t_string, false, 0),
        array('b', $IcePHP__t_bool, false, 0)));
}

namespace Test
{
    global $Test__t_Exception3;
    class Exception3 extends \Ice\UserException
    {
        public function __construct($str='', $b=false)
        {
            $this->str = $str;
            $this->b = $b;
        }

        public function ice_id()
        {
            return '::Test::Exception3';
        }

        public function __toString(): string
        {
            global $Test__t_Exception3;
            return IcePHP_stringifyException($this, $Test__t_Exception3);
        }

        public $str;
        public $b;
    }
    global $IcePHP__t_string;
    global $IcePHP__t_bool;

    $Test__t_Exception3 = IcePHP_defineException('::Test::Exception3', '\\Test\\Exception3', false, null, array(
        array('str', $IcePHP__t_string, false, 0),
        array('b', $IcePHP__t_bool, false, 0)));
}

namespace Test
{
    global $Test__t_Exception4;
    class Exception4 extends \Ice\UserException
    {
        public function __construct($str='', $b=false)
        {
            $this->str = $str;
            $this->b = $b;
        }

        public function ice_id()
        {
            return '::Test::Exception4';
        }

        public function __toString(): string
        {
            global $Test__t_Exception4;
            return IcePHP_stringifyException($this, $Test__t_Exception4);
        }

        public $str;
        public $b;
    }
    global $IcePHP__t_string;
    global $IcePHP__t_bool;

    $Test__t_Exception4 = IcePHP_defineException('::Test::Exception4', '\\Test\\Exception4', false, null, array(
        array('str', $IcePHP__t_string, false, 0),
        array('b', $IcePHP__t_bool, false, 0)));
}

namespace Test
{
    global $Test__t_Exception5;
    class Exception5 extends \Ice\UserException
    {
        public function __construct()
        {
        }

        public function ice_id()
        {
            return '::Test::Exception5';
        }

        public function __toString(): string
        {
            global $Test__t_Exception5;
            return IcePHP_stringifyException($this, $Test__t_Exception5);
        }
    }

    $Test__t_Exception5 = IcePHP_defineException('::Test::Exception5', '\\Test\\Exception5', false, null, null);
}

namespace Test
{
    global $Test__t_Exception6;
    class Exception6 extends \Ice\UserException
    {
        public function __construct($str='', $b=false)
        {
            $this->str = $str;
            $this->b = $b;
        }

        public function ice_id()
        {
            return '::Test::Exception6';
        }

        public function __toString(): string
        {
            global $Test__t_Exception6;
            return IcePHP_stringifyException($this, $Test__t_Exception6);
        }

        public $str;
        public $b;
    }
    global $IcePHP__t_string;
    global $IcePHP__t_bool;

    $Test__t_Exception6 = IcePHP_defineException('::Test::Exception6', '\\Test\\Exception6', false, null, array(
        array('str', $IcePHP__t_string, false, 0),
        array('b', $IcePHP__t_bool, false, 0)));
}

namespace Test
{
    global $Test__t_OptionalEx0;
    class OptionalEx0 extends \Ice\UserException
    {
        public function __construct($firstName='', $secondName=\Ice\None, $emailAddress=\Ice\None)
        {
            $this->firstName = $firstName;
            $this->secondName = $secondName;
            $this->emailAddress = $emailAddress;
        }

        public function ice_id()
        {
            return '::Test::OptionalEx0';
        }

        public function __toString(): string
        {
            global $Test__t_OptionalEx0;
            return IcePHP_stringifyException($this, $Test__t_OptionalEx0);
        }

        public $firstName;
        public $secondName;
        public $emailAddress;
    }
    global $IcePHP__t_string;

    $Test__t_OptionalEx0 = IcePHP_defineException('::Test::OptionalEx0', '\\Test\\OptionalEx0', false, null, array(
        array('firstName', $IcePHP__t_string, false, 0),
        array('secondName', $IcePHP__t_string, true, 1),
        array('emailAddress', $IcePHP__t_string, true, 2)));
}

namespace Test
{
    global $Test__t_OptionalEx1;
    class OptionalEx1 extends \Ice\UserException
    {
        public function __construct($firstName='', $secondName=\Ice\None, $emailAddress=\Ice\None)
        {
            $this->firstName = $firstName;
            $this->secondName = $secondName;
            $this->emailAddress = $emailAddress;
        }

        public function ice_id()
        {
            return '::Test::OptionalEx1';
        }

        public function __toString(): string
        {
            global $Test__t_OptionalEx1;
            return IcePHP_stringifyException($this, $Test__t_OptionalEx1);
        }

        public $firstName;
        public $secondName;
        public $emailAddress;
    }
    global $IcePHP__t_string;

    $Test__t_OptionalEx1 = IcePHP_defineException('::Test::OptionalEx1', '\\Test\\OptionalEx1', false, null, array(
        array('firstName', $IcePHP__t_string, false, 0),
        array('secondName', $IcePHP__t_string, true, 1),
        array('emailAddress', $IcePHP__t_string, true, 2)));
}

namespace Test
{
    global $Test__t_OptionalEx2;
    class OptionalEx2 extends \Ice\UserException
    {
        public function __construct($firstName='', $secondName='', $emailAddress=\Ice\None)
        {
            $this->firstName = $firstName;
            $this->secondName = $secondName;
            $this->emailAddress = $emailAddress;
        }

        public function ice_id()
        {
            return '::Test::OptionalEx2';
        }

        public function __toString(): string
        {
            global $Test__t_OptionalEx2;
            return IcePHP_stringifyException($this, $Test__t_OptionalEx2);
        }

        public $firstName;
        public $secondName;
        public $emailAddress;
    }
    global $IcePHP__t_string;

    $Test__t_OptionalEx2 = IcePHP_defineException('::Test::OptionalEx2', '\\Test\\OptionalEx2', false, null, array(
        array('firstName', $IcePHP__t_string, false, 0),
        array('secondName', $IcePHP__t_string, false, 0),
        array('emailAddress', $IcePHP__t_string, true, 1)));
}

namespace Test
{
    global $Test__t_OptionalEx3;
    class OptionalEx3 extends \Ice\UserException
    {
        public function __construct($firstName='', $secondName=\Ice\None, $emailAddress=\Ice\None)
        {
            $this->firstName = $firstName;
            $this->secondName = $secondName;
            $this->emailAddress = $emailAddress;
        }

        public function ice_id()
        {
            return '::Test::OptionalEx3';
        }

        public function __toString(): string
        {
            global $Test__t_OptionalEx3;
            return IcePHP_stringifyException($this, $Test__t_OptionalEx3);
        }

        public $firstName;
        public $secondName;
        public $emailAddress;
    }
    global $IcePHP__t_string;

    $Test__t_OptionalEx3 = IcePHP_defineException('::Test::OptionalEx3', '\\Test\\OptionalEx3', false, null, array(
        array('firstName', $IcePHP__t_string, false, 0),
        array('secondName', $IcePHP__t_string, true, 1),
        array('emailAddress', $IcePHP__t_string, true, 2)));
}

namespace Test
{
    global $Test__t_OptionalEx4;
    class OptionalEx4 extends \Ice\UserException
    {
        public function __construct($firstName='', $secondName=\Ice\None, $emailAddress=\Ice\None)
        {
            $this->firstName = $firstName;
            $this->secondName = $secondName;
            $this->emailAddress = $emailAddress;
        }

        public function ice_id()
        {
            return '::Test::OptionalEx4';
        }

        public function __toString(): string
        {
            global $Test__t_OptionalEx4;
            return IcePHP_stringifyException($this, $Test__t_OptionalEx4);
        }

        public $firstName;
        public $secondName;
        public $emailAddress;
    }
    global $IcePHP__t_string;

    $Test__t_OptionalEx4 = IcePHP_defineException('::Test::OptionalEx4', '\\Test\\OptionalEx4', false, null, array(
        array('firstName', $IcePHP__t_string, false, 0),
        array('secondName', $IcePHP__t_string, true, 1),
        array('emailAddress', $IcePHP__t_string, true, 2)));
}

namespace Test
{
    global $Test__t_BaseInterface1;
    global $Test__t_BaseInterface1Prx;

    class BaseInterface1PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::BaseInterface1', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::BaseInterface1', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::BaseInterface1';
        }
    }
    $Test__t_BaseInterface1 = IcePHP_defineClass('::Test::BaseInterface1', '\\Test\\BaseInterface1', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_BaseInterface1Prx = IcePHP_defineProxy('::Test::BaseInterface1', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_int;
    global $IcePHP__t_string;
    IcePHP_defineOperation($Test__t_BaseInterface1Prx, 'baseOp1', 0, 0, 0, null, null, null, null);
    IcePHP_defineOperation($Test__t_BaseInterface1Prx, 'baseOp2', 0, 0, 0, array(array($IcePHP__t_int)), array(array($IcePHP__t_string)), null, array($Test__t_Exception1));
}

namespace Test
{
    global $Test__t_BaseInterface2;
    global $Test__t_BaseInterface2Prx;

    class BaseInterface2PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::BaseInterface2', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::BaseInterface2', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::BaseInterface2';
        }
    }
    $Test__t_BaseInterface2 = IcePHP_defineClass('::Test::BaseInterface2', '\\Test\\BaseInterface2', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_BaseInterface2Prx = IcePHP_defineProxy('::Test::BaseInterface2', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_int;
    global $IcePHP__t_string;
    IcePHP_defineOperation($Test__t_BaseInterface2Prx, 'baseOp', 0, 0, 0, null, null, null, null);
    IcePHP_defineOperation($Test__t_BaseInterface2Prx, 'baseOp2', 0, 0, 0, array(array($IcePHP__t_int)), array(array($IcePHP__t_string)), null, array($Test__t_Exception1));
}

namespace Test
{
    global $Test__t_BaseInterface3;
    global $Test__t_BaseInterface3Prx;

    class BaseInterface3PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::BaseInterface3', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::BaseInterface3', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::BaseInterface3';
        }
    }
    $Test__t_BaseInterface3 = IcePHP_defineClass('::Test::BaseInterface3', '\\Test\\BaseInterface3', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_BaseInterface3Prx = IcePHP_defineProxy('::Test::BaseInterface3', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_int;
    global $IcePHP__t_string;
    IcePHP_defineOperation($Test__t_BaseInterface3Prx, 'baseOp', 0, 0, 0, null, null, null, null);
    IcePHP_defineOperation($Test__t_BaseInterface3Prx, 'baseOp2', 0, 0, 0, array(array($IcePHP__t_int)), array(array($IcePHP__t_string)), null, array($Test__t_Exception1));
}

namespace Test
{
    global $Test__t_BaseInterface4;
    global $Test__t_BaseInterface4Prx;

    class BaseInterface4PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::BaseInterface4', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::BaseInterface4', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::BaseInterface4';
        }
    }
    $Test__t_BaseInterface4 = IcePHP_defineClass('::Test::BaseInterface4', '\\Test\\BaseInterface4', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_BaseInterface4Prx = IcePHP_defineProxy('::Test::BaseInterface4', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_int;
    global $IcePHP__t_string;
    IcePHP_defineOperation($Test__t_BaseInterface4Prx, 'baseOp', 0, 0, 0, null, null, null, null);
    IcePHP_defineOperation($Test__t_BaseInterface4Prx, 'baseOp2', 0, 0, 0, array(array($IcePHP__t_int)), array(array($IcePHP__t_string)), null, array($Test__t_Exception1));
}

namespace Test
{
    global $Test__t_BaseInterface5;
    global $Test__t_BaseInterface5Prx;

    class BaseInterface5PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::BaseInterface5', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::BaseInterface5', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::BaseInterface5';
        }
    }
    $Test__t_BaseInterface5 = IcePHP_defineClass('::Test::BaseInterface5', '\\Test\\BaseInterface5', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_BaseInterface5Prx = IcePHP_defineProxy('::Test::BaseInterface5', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_int;
    global $IcePHP__t_string;
    IcePHP_defineOperation($Test__t_BaseInterface5Prx, 'baseOp', 0, 0, 0, null, null, null, null);
    IcePHP_defineOperation($Test__t_BaseInterface5Prx, 'baseOp2', 0, 0, 0, array(array($IcePHP__t_int)), array(array($IcePHP__t_string)), null, array($Test__t_Exception1));
}

namespace Test
{
    global $Test__t_BaseInterface6;
    global $Test__t_BaseInterface6Prx;

    class BaseInterface6PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::BaseInterface6', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::BaseInterface6', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::BaseInterface6';
        }
    }
    $Test__t_BaseInterface6 = IcePHP_defineClass('::Test::BaseInterface6', '\\Test\\BaseInterface6', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_BaseInterface6Prx = IcePHP_defineProxy('::Test::BaseInterface6', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_int;
    global $IcePHP__t_string;
    IcePHP_defineOperation($Test__t_BaseInterface6Prx, 'baseOp', 0, 0, 0, null, null, null, null);
    IcePHP_defineOperation($Test__t_BaseInterface6Prx, 'baseOp2', 0, 0, 0, array(array($IcePHP__t_int)), array(array($IcePHP__t_string)), null, array($Test__t_Exception1));
}

namespace Test
{
    global $Test__t_BaseInterface7;
    global $Test__t_BaseInterface7Prx;

    class BaseInterface7PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::BaseInterface7', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::BaseInterface7', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::BaseInterface7';
        }
    }
    $Test__t_BaseInterface7 = IcePHP_defineClass('::Test::BaseInterface7', '\\Test\\BaseInterface7', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_BaseInterface7Prx = IcePHP_defineProxy('::Test::BaseInterface7', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_int;
    global $IcePHP__t_string;
    IcePHP_defineOperation($Test__t_BaseInterface7Prx, 'baseOp', 0, 0, 0, null, null, null, null);
    IcePHP_defineOperation($Test__t_BaseInterface7Prx, 'baseOp2', 0, 0, 0, array(array($IcePHP__t_int)), array(array($IcePHP__t_string)), null, array($Test__t_Exception1));
}

namespace Test
{
    global $Test__t_BaseInterface8;
    global $Test__t_BaseInterface8Prx;

    class BaseInterface8PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::BaseInterface8', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::BaseInterface8', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::BaseInterface8';
        }
    }
    $Test__t_BaseInterface8 = IcePHP_defineClass('::Test::BaseInterface8', '\\Test\\BaseInterface8', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_BaseInterface8Prx = IcePHP_defineProxy('::Test::BaseInterface8', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_int;
    global $IcePHP__t_string;
    IcePHP_defineOperation($Test__t_BaseInterface8Prx, 'baseOp', 0, 0, 0, null, null, null, null);
    IcePHP_defineOperation($Test__t_BaseInterface8Prx, 'baseOp2', 0, 0, 0, array(array($IcePHP__t_int)), array(array($IcePHP__t_string)), null, array($Test__t_Exception1));
}

namespace Test
{
    global $Test__t_BaseInterface9;
    global $Test__t_BaseInterface9Prx;

    class BaseInterface9PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::BaseInterface9', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::BaseInterface9', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::BaseInterface9';
        }
    }
    $Test__t_BaseInterface9 = IcePHP_defineClass('::Test::BaseInterface9', '\\Test\\BaseInterface9', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_BaseInterface9Prx = IcePHP_defineProxy('::Test::BaseInterface9', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_int;
    global $IcePHP__t_string;
    IcePHP_defineOperation($Test__t_BaseInterface9Prx, 'baseOp', 0, 0, 0, null, null, null, null);
    IcePHP_defineOperation($Test__t_BaseInterface9Prx, 'baseOp2', 0, 0, 0, array(array($IcePHP__t_int)), array(array($IcePHP__t_string)), null, array($Test__t_Exception1));
}

namespace Test
{
    global $Test__t_Compact1;
    class Compact1 extends \Ice\Value
    {
        public function __construct($id=0)
        {
            $this->id = $id;
        }

        public function ice_id()
        {
            return '::Test::Compact1';
        }

        public static function ice_staticId()
        {
            return '::Test::Compact1';
        }

        public function __toString(): string
        {
            global $Test__t_Compact1;
            return IcePHP_stringify($this, $Test__t_Compact1);
        }

        public $id;
    }

    global $Ice__t_Value;
    global $IcePHP__t_int;
    $Test__t_Compact1 = IcePHP_defineClass('::Test::Compact1', '\\Test\\Compact1', 1, false, false, $Ice__t_Value, array(
        array('id', $IcePHP__t_int, false, 0)));
}

namespace Test
{
    global $Test__t_Derived1;
    class Derived1 extends \Test\Compact1
    {
        public function __construct($id=0)
        {
            parent::__construct($id);
        }

        public function ice_id()
        {
            return '::Test::Derived1';
        }

        public static function ice_staticId()
        {
            return '::Test::Derived1';
        }

        public function __toString(): string
        {
            global $Test__t_Derived1;
            return IcePHP_stringify($this, $Test__t_Derived1);
        }
    }

    global $Test__t_Compact1;
    $Test__t_Derived1 = IcePHP_defineClass('::Test::Derived1', '\\Test\\Derived1', -1, false, false, $Test__t_Compact1, null);
}

namespace Test
{
    global $Test__t_Compact2;
    class Compact2 extends \Ice\Value
    {
        public function __construct($id=0)
        {
            $this->id = $id;
        }

        public function ice_id()
        {
            return '::Test::Compact2';
        }

        public static function ice_staticId()
        {
            return '::Test::Compact2';
        }

        public function __toString(): string
        {
            global $Test__t_Compact2;
            return IcePHP_stringify($this, $Test__t_Compact2);
        }

        public $id;
    }

    global $Ice__t_Value;
    global $IcePHP__t_int;
    $Test__t_Compact2 = IcePHP_defineClass('::Test::Compact2', '\\Test\\Compact2', 2, false, false, $Ice__t_Value, array(
        array('id', $IcePHP__t_int, false, 0)));
}

namespace Test
{
    global $Test__t_Optional0;
    class Optional0 extends \Ice\Value
    {
        public function __construct($firstName='', $secondName=\Ice\None, $emailAddress=\Ice\None)
        {
            $this->firstName = $firstName;
            $this->secondName = $secondName;
            $this->emailAddress = $emailAddress;
        }

        public function ice_id()
        {
            return '::Test::Optional0';
        }

        public static function ice_staticId()
        {
            return '::Test::Optional0';
        }

        public function __toString(): string
        {
            global $Test__t_Optional0;
            return IcePHP_stringify($this, $Test__t_Optional0);
        }

        public $firstName;
        public $secondName;
        public $emailAddress;
    }

    global $Ice__t_Value;
    global $IcePHP__t_string;
    $Test__t_Optional0 = IcePHP_defineClass('::Test::Optional0', '\\Test\\Optional0', -1, false, false, $Ice__t_Value, array(
        array('firstName', $IcePHP__t_string, false, 0),
        array('secondName', $IcePHP__t_string, true, 1),
        array('emailAddress', $IcePHP__t_string, true, 2)));
}

namespace Test
{
    global $Test__t_Optional1;
    class Optional1 extends \Ice\Value
    {
        public function __construct($firstName='', $secondName=\Ice\None, $emailAddress=\Ice\None)
        {
            $this->firstName = $firstName;
            $this->secondName = $secondName;
            $this->emailAddress = $emailAddress;
        }

        public function ice_id()
        {
            return '::Test::Optional1';
        }

        public static function ice_staticId()
        {
            return '::Test::Optional1';
        }

        public function __toString(): string
        {
            global $Test__t_Optional1;
            return IcePHP_stringify($this, $Test__t_Optional1);
        }

        public $firstName;
        public $secondName;
        public $emailAddress;
    }

    global $Ice__t_Value;
    global $IcePHP__t_string;
    $Test__t_Optional1 = IcePHP_defineClass('::Test::Optional1', '\\Test\\Optional1', -1, false, false, $Ice__t_Value, array(
        array('firstName', $IcePHP__t_string, false, 0),
        array('secondName', $IcePHP__t_string, true, 1),
        array('emailAddress', $IcePHP__t_string, true, 2)));
}

namespace Test
{
    global $Test__t_Optional2;
    class Optional2 extends \Ice\Value
    {
        public function __construct($firstName='', $secondName='', $emailAddress=\Ice\None)
        {
            $this->firstName = $firstName;
            $this->secondName = $secondName;
            $this->emailAddress = $emailAddress;
        }

        public function ice_id()
        {
            return '::Test::Optional2';
        }

        public static function ice_staticId()
        {
            return '::Test::Optional2';
        }

        public function __toString(): string
        {
            global $Test__t_Optional2;
            return IcePHP_stringify($this, $Test__t_Optional2);
        }

        public $firstName;
        public $secondName;
        public $emailAddress;
    }

    global $Ice__t_Value;
    global $IcePHP__t_string;
    $Test__t_Optional2 = IcePHP_defineClass('::Test::Optional2', '\\Test\\Optional2', -1, false, false, $Ice__t_Value, array(
        array('firstName', $IcePHP__t_string, false, 0),
        array('secondName', $IcePHP__t_string, false, 0),
        array('emailAddress', $IcePHP__t_string, true, 1)));
}

namespace Test
{
    global $Test__t_Optional3;
    class Optional3 extends \Ice\Value
    {
        public function __construct($firstName='', $secondName=\Ice\None, $emailAddress=\Ice\None)
        {
            $this->firstName = $firstName;
            $this->secondName = $secondName;
            $this->emailAddress = $emailAddress;
        }

        public function ice_id()
        {
            return '::Test::Optional3';
        }

        public static function ice_staticId()
        {
            return '::Test::Optional3';
        }

        public function __toString(): string
        {
            global $Test__t_Optional3;
            return IcePHP_stringify($this, $Test__t_Optional3);
        }

        public $firstName;
        public $secondName;
        public $emailAddress;
    }

    global $Ice__t_Value;
    global $IcePHP__t_string;
    $Test__t_Optional3 = IcePHP_defineClass('::Test::Optional3', '\\Test\\Optional3', -1, false, false, $Ice__t_Value, array(
        array('firstName', $IcePHP__t_string, false, 0),
        array('secondName', $IcePHP__t_string, true, 1),
        array('emailAddress', $IcePHP__t_string, true, 2)));
}

namespace Test
{
    global $Test__t_Optional4;
    class Optional4 extends \Ice\Value
    {
        public function __construct($firstName='', $secondName=\Ice\None, $emailAddress=\Ice\None)
        {
            $this->firstName = $firstName;
            $this->secondName = $secondName;
            $this->emailAddress = $emailAddress;
        }

        public function ice_id()
        {
            return '::Test::Optional4';
        }

        public static function ice_staticId()
        {
            return '::Test::Optional4';
        }

        public function __toString(): string
        {
            global $Test__t_Optional4;
            return IcePHP_stringify($this, $Test__t_Optional4);
        }

        public $firstName;
        public $secondName;
        public $emailAddress;
    }

    global $Ice__t_Value;
    global $IcePHP__t_string;
    $Test__t_Optional4 = IcePHP_defineClass('::Test::Optional4', '\\Test\\Optional4', -1, false, false, $Ice__t_Value, array(
        array('firstName', $IcePHP__t_string, false, 0),
        array('secondName', $IcePHP__t_string, true, 1),
        array('emailAddress', $IcePHP__t_string, true, 2)));
}

namespace Test
{
    global $Test__t_OptionalParameters0;
    global $Test__t_OptionalParameters0Prx;

    class OptionalParameters0PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::OptionalParameters0', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::OptionalParameters0', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::OptionalParameters0';
        }
    }
    $Test__t_OptionalParameters0 = IcePHP_defineClass('::Test::OptionalParameters0', '\\Test\\OptionalParameters0', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_OptionalParameters0Prx = IcePHP_defineProxy('::Test::OptionalParameters0', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_string;
    IcePHP_defineOperation($Test__t_OptionalParameters0Prx, 'op1', 0, 0, 0, array(array($IcePHP__t_string), array($IcePHP__t_string, 1), array($IcePHP__t_string, 2)), null, null, null);
}

namespace Test
{
    global $Test__t_OptionalParameters1;
    global $Test__t_OptionalParameters1Prx;

    class OptionalParameters1PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::OptionalParameters1', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::OptionalParameters1', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::OptionalParameters1';
        }
    }
    $Test__t_OptionalParameters1 = IcePHP_defineClass('::Test::OptionalParameters1', '\\Test\\OptionalParameters1', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_OptionalParameters1Prx = IcePHP_defineProxy('::Test::OptionalParameters1', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_string;
    IcePHP_defineOperation($Test__t_OptionalParameters1Prx, 'op1', 0, 0, 0, array(array($IcePHP__t_string), array($IcePHP__t_string, 1), array($IcePHP__t_string, 2)), null, null, null);
}

namespace Test
{
    global $Test__t_OptionalParameters2;
    global $Test__t_OptionalParameters2Prx;

    class OptionalParameters2PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::OptionalParameters2', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::OptionalParameters2', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::OptionalParameters2';
        }
    }
    $Test__t_OptionalParameters2 = IcePHP_defineClass('::Test::OptionalParameters2', '\\Test\\OptionalParameters2', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_OptionalParameters2Prx = IcePHP_defineProxy('::Test::OptionalParameters2', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_string;
    IcePHP_defineOperation($Test__t_OptionalParameters2Prx, 'op1', 0, 0, 0, array(array($IcePHP__t_string), array($IcePHP__t_string, 1), array($IcePHP__t_string, 2)), null, null, null);
}

namespace Test
{
    global $Test__t_OptionalParameters3;
    global $Test__t_OptionalParameters3Prx;

    class OptionalParameters3PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::OptionalParameters3', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::OptionalParameters3', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::OptionalParameters3';
        }
    }
    $Test__t_OptionalParameters3 = IcePHP_defineClass('::Test::OptionalParameters3', '\\Test\\OptionalParameters3', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_OptionalParameters3Prx = IcePHP_defineProxy('::Test::OptionalParameters3', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_string;
    IcePHP_defineOperation($Test__t_OptionalParameters3Prx, 'op1', 0, 0, 0, array(array($IcePHP__t_string), array($IcePHP__t_string, 1), array($IcePHP__t_string)), null, null, null);
}

namespace Test
{
    global $Test__t_OptionalReturn0;
    global $Test__t_OptionalReturn0Prx;

    class OptionalReturn0PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::OptionalReturn0', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::OptionalReturn0', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::OptionalReturn0';
        }
    }
    $Test__t_OptionalReturn0 = IcePHP_defineClass('::Test::OptionalReturn0', '\\Test\\OptionalReturn0', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_OptionalReturn0Prx = IcePHP_defineProxy('::Test::OptionalReturn0', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_int;
    IcePHP_defineOperation($Test__t_OptionalReturn0Prx, 'op', 0, 0, 0, null, null, array($IcePHP__t_int, 1), null);
}

namespace Test
{
    global $Test__t_OptionalReturn2;
    global $Test__t_OptionalReturn2Prx;

    class OptionalReturn2PrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::OptionalReturn2', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::OptionalReturn2', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::OptionalReturn2';
        }
    }
    $Test__t_OptionalReturn2 = IcePHP_defineClass('::Test::OptionalReturn2', '\\Test\\OptionalReturn2', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_OptionalReturn2Prx = IcePHP_defineProxy('::Test::OptionalReturn2', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_int;
    IcePHP_defineOperation($Test__t_OptionalReturn2Prx, 'op', 0, 0, 0, null, null, array($IcePHP__t_int, 1), null);
}

namespace Test
{
    global $Test__t_LocalEnum;
    class LocalEnum
    {
        const LocalEnum1 = 0;
        const LocalEnum2 = 1;
        const LocalEnum3 = 2;
    }

    $Test__t_LocalEnum = IcePHP_defineEnum('::Test::LocalEnum', array('LocalEnum1', 0, 'LocalEnum2', 1, 'LocalEnum3', 2));
}

namespace Test
{
    global $Test__t_LocalSequence;

    if(!isset($Test__t_LocalSequence))
    {
        global $IcePHP__t_string;
        $Test__t_LocalSequence = IcePHP_defineSequence('::Test::LocalSequence', $IcePHP__t_string);
    }
}

namespace Test
{
    global $Test__t_LocalDictionary;

    if(!isset($Test__t_LocalDictionary))
    {
        global $IcePHP__t_string;
        global $IcePHP__t_string;
        $Test__t_LocalDictionary = IcePHP_defineDictionary('::Test::LocalDictionary', $IcePHP__t_string, $IcePHP__t_string);
    }
}

namespace Test
{
    global $Test__t_LocalStruct;
    class LocalStruct
    {
        public function __construct($str='')
        {
            $this->str = $str;
        }

        public function __toString(): string
        {
            global $Test__t_LocalStruct;
            return IcePHP_stringify($this, $Test__t_LocalStruct);
        }

        public $str;
    }

    global $IcePHP__t_string;
    $Test__t_LocalStruct = IcePHP_defineStruct('::Test::LocalStruct', '\\Test\\LocalStruct', array(
        array('str', $IcePHP__t_string)));
}

namespace Test
{
    global $Test__t_LocalClass;
    class LocalClass
    {
        public function __construct()
        {
        }

        public function __toString(): string
        {
            global $Test__t_LocalClass;
            return IcePHP_stringify($this, $Test__t_LocalClass);
        }
    }
    $Test__t_LocalClass = IcePHP_defineClass('::Test::LocalClass', '\\Test\\LocalClass', -1, false, false, null, null);
}
?>
