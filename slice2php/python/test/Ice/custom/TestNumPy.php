<?php
//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `TestNumPy.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


namespace Test\NumPy
{
    global $Test_NumPy__t_BoolSeq1;

    if(!isset($Test_NumPy__t_BoolSeq1))
    {
        global $IcePHP__t_bool;
        $Test_NumPy__t_BoolSeq1 = IcePHP_defineSequence('::Test::NumPy::BoolSeq1', $IcePHP__t_bool);
    }
}

namespace Test\NumPy
{
    global $Test_NumPy__t_BoolSeq2;

    if(!isset($Test_NumPy__t_BoolSeq2))
    {
        global $IcePHP__t_bool;
        $Test_NumPy__t_BoolSeq2 = IcePHP_defineSequence('::Test::NumPy::BoolSeq2', $IcePHP__t_bool);
    }
}

namespace Test\NumPy
{
    global $Test_NumPy__t_ByteSeq1;

    if(!isset($Test_NumPy__t_ByteSeq1))
    {
        global $IcePHP__t_byte;
        $Test_NumPy__t_ByteSeq1 = IcePHP_defineSequence('::Test::NumPy::ByteSeq1', $IcePHP__t_byte);
    }
}

namespace Test\NumPy
{
    global $Test_NumPy__t_ByteSeq2;

    if(!isset($Test_NumPy__t_ByteSeq2))
    {
        global $IcePHP__t_byte;
        $Test_NumPy__t_ByteSeq2 = IcePHP_defineSequence('::Test::NumPy::ByteSeq2', $IcePHP__t_byte);
    }
}

namespace Test\NumPy
{
    global $Test_NumPy__t_ShortSeq1;

    if(!isset($Test_NumPy__t_ShortSeq1))
    {
        global $IcePHP__t_short;
        $Test_NumPy__t_ShortSeq1 = IcePHP_defineSequence('::Test::NumPy::ShortSeq1', $IcePHP__t_short);
    }
}

namespace Test\NumPy
{
    global $Test_NumPy__t_ShortSeq2;

    if(!isset($Test_NumPy__t_ShortSeq2))
    {
        global $IcePHP__t_short;
        $Test_NumPy__t_ShortSeq2 = IcePHP_defineSequence('::Test::NumPy::ShortSeq2', $IcePHP__t_short);
    }
}

namespace Test\NumPy
{
    global $Test_NumPy__t_IntSeq1;

    if(!isset($Test_NumPy__t_IntSeq1))
    {
        global $IcePHP__t_int;
        $Test_NumPy__t_IntSeq1 = IcePHP_defineSequence('::Test::NumPy::IntSeq1', $IcePHP__t_int);
    }
}

namespace Test\NumPy
{
    global $Test_NumPy__t_IntSeq2;

    if(!isset($Test_NumPy__t_IntSeq2))
    {
        global $IcePHP__t_int;
        $Test_NumPy__t_IntSeq2 = IcePHP_defineSequence('::Test::NumPy::IntSeq2', $IcePHP__t_int);
    }
}

namespace Test\NumPy
{
    global $Test_NumPy__t_LongSeq1;

    if(!isset($Test_NumPy__t_LongSeq1))
    {
        global $IcePHP__t_long;
        $Test_NumPy__t_LongSeq1 = IcePHP_defineSequence('::Test::NumPy::LongSeq1', $IcePHP__t_long);
    }
}

namespace Test\NumPy
{
    global $Test_NumPy__t_LongSeq2;

    if(!isset($Test_NumPy__t_LongSeq2))
    {
        global $IcePHP__t_long;
        $Test_NumPy__t_LongSeq2 = IcePHP_defineSequence('::Test::NumPy::LongSeq2', $IcePHP__t_long);
    }
}

namespace Test\NumPy
{
    global $Test_NumPy__t_FloatSeq1;

    if(!isset($Test_NumPy__t_FloatSeq1))
    {
        global $IcePHP__t_float;
        $Test_NumPy__t_FloatSeq1 = IcePHP_defineSequence('::Test::NumPy::FloatSeq1', $IcePHP__t_float);
    }
}

namespace Test\NumPy
{
    global $Test_NumPy__t_FloatSeq2;

    if(!isset($Test_NumPy__t_FloatSeq2))
    {
        global $IcePHP__t_float;
        $Test_NumPy__t_FloatSeq2 = IcePHP_defineSequence('::Test::NumPy::FloatSeq2', $IcePHP__t_float);
    }
}

namespace Test\NumPy
{
    global $Test_NumPy__t_DoubleSeq1;

    if(!isset($Test_NumPy__t_DoubleSeq1))
    {
        global $IcePHP__t_double;
        $Test_NumPy__t_DoubleSeq1 = IcePHP_defineSequence('::Test::NumPy::DoubleSeq1', $IcePHP__t_double);
    }
}

namespace Test\NumPy
{
    global $Test_NumPy__t_DoubleSeq2;

    if(!isset($Test_NumPy__t_DoubleSeq2))
    {
        global $IcePHP__t_double;
        $Test_NumPy__t_DoubleSeq2 = IcePHP_defineSequence('::Test::NumPy::DoubleSeq2', $IcePHP__t_double);
    }
}

namespace Test\NumPy
{
    global $Test_NumPy__t_Complex128Seq;

    if(!isset($Test_NumPy__t_Complex128Seq))
    {
        global $IcePHP__t_byte;
        $Test_NumPy__t_Complex128Seq = IcePHP_defineSequence('::Test::NumPy::Complex128Seq', $IcePHP__t_byte);
    }
}

namespace Test\NumPy
{
    global $Test_NumPy__t_D;
    class D extends \Ice\Value
    {
        public function __construct($boolSeq=\Ice\None, $byteSeq=\Ice\None, $shortSeq=\Ice\None, $intSeq=\Ice\None, $longSeq=\Ice\None, $floatSeq=\Ice\None, $doubleSeq=\Ice\None)
        {
            $this->boolSeq = $boolSeq;
            $this->byteSeq = $byteSeq;
            $this->shortSeq = $shortSeq;
            $this->intSeq = $intSeq;
            $this->longSeq = $longSeq;
            $this->floatSeq = $floatSeq;
            $this->doubleSeq = $doubleSeq;
        }

        public function ice_id()
        {
            return '::Test::NumPy::D';
        }

        public static function ice_staticId()
        {
            return '::Test::NumPy::D';
        }

        public function __toString(): string
        {
            global $Test_NumPy__t_D;
            return IcePHP_stringify($this, $Test_NumPy__t_D);
        }

        public $boolSeq;
        public $byteSeq;
        public $shortSeq;
        public $intSeq;
        public $longSeq;
        public $floatSeq;
        public $doubleSeq;
    }

    global $Ice__t_Value;
    global $Test_NumPy__t_BoolSeq1;
    global $Test_NumPy__t_ByteSeq1;
    global $Test_NumPy__t_ShortSeq1;
    global $Test_NumPy__t_IntSeq1;
    global $Test_NumPy__t_LongSeq1;
    global $Test_NumPy__t_FloatSeq1;
    global $Test_NumPy__t_DoubleSeq1;
    $Test_NumPy__t_D = IcePHP_defineClass('::Test::NumPy::D', '\\Test\\NumPy\\D', -1, false, false, $Ice__t_Value, array(
        array('boolSeq', $Test_NumPy__t_BoolSeq1, true, 1),
        array('byteSeq', $Test_NumPy__t_ByteSeq1, true, 2),
        array('shortSeq', $Test_NumPy__t_ShortSeq1, true, 3),
        array('intSeq', $Test_NumPy__t_IntSeq1, true, 4),
        array('longSeq', $Test_NumPy__t_LongSeq1, true, 5),
        array('floatSeq', $Test_NumPy__t_FloatSeq1, true, 6),
        array('doubleSeq', $Test_NumPy__t_DoubleSeq1, true, 7)));
}

namespace Test\NumPy
{
    global $Test_NumPy__t_Custom;
    global $Test_NumPy__t_CustomPrx;

    class CustomPrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::NumPy::Custom', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::NumPy::Custom', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::NumPy::Custom';
        }
    }
    $Test_NumPy__t_Custom = IcePHP_defineClass('::Test::NumPy::Custom', '\\Test\\NumPy\\Custom', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test_NumPy__t_CustomPrx = IcePHP_defineProxy('::Test::NumPy::Custom', $Ice__t_ObjectPrx, null);

    global $Test_NumPy__t_BoolSeq1;
    global $Test_NumPy__t_BoolSeq2;
    global $Test_NumPy__t_ByteSeq1;
    global $Test_NumPy__t_ByteSeq2;
    global $Test_NumPy__t_ShortSeq1;
    global $Test_NumPy__t_ShortSeq2;
    global $Test_NumPy__t_IntSeq1;
    global $Test_NumPy__t_IntSeq2;
    global $Test_NumPy__t_LongSeq1;
    global $Test_NumPy__t_LongSeq2;
    global $Test_NumPy__t_FloatSeq1;
    global $Test_NumPy__t_FloatSeq2;
    global $Test_NumPy__t_DoubleSeq1;
    global $Test_NumPy__t_DoubleSeq2;
    global $Test_NumPy__t_Complex128Seq;
    global $Test_NumPy__t_D;
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opBoolSeq', 0, 0, 0, array(array($Test_NumPy__t_BoolSeq1)), array(array($Test_NumPy__t_BoolSeq2)), array($Test_NumPy__t_BoolSeq1), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opByteSeq', 0, 0, 0, array(array($Test_NumPy__t_ByteSeq1)), array(array($Test_NumPy__t_ByteSeq2)), array($Test_NumPy__t_ByteSeq1), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opShortSeq', 0, 0, 0, array(array($Test_NumPy__t_ShortSeq1)), array(array($Test_NumPy__t_ShortSeq2)), array($Test_NumPy__t_ShortSeq1), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opIntSeq', 0, 0, 0, array(array($Test_NumPy__t_IntSeq1)), array(array($Test_NumPy__t_IntSeq2)), array($Test_NumPy__t_IntSeq1), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opLongSeq', 0, 0, 0, array(array($Test_NumPy__t_LongSeq1)), array(array($Test_NumPy__t_LongSeq2)), array($Test_NumPy__t_LongSeq1), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opFloatSeq', 0, 0, 0, array(array($Test_NumPy__t_FloatSeq1)), array(array($Test_NumPy__t_FloatSeq2)), array($Test_NumPy__t_FloatSeq1), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opDoubleSeq', 0, 0, 0, array(array($Test_NumPy__t_DoubleSeq1)), array(array($Test_NumPy__t_DoubleSeq2)), array($Test_NumPy__t_DoubleSeq1), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opComplex128Seq', 0, 0, 0, array(array($Test_NumPy__t_Complex128Seq)), null, array($Test_NumPy__t_Complex128Seq), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opBoolMatrix', 0, 0, 0, null, null, array($Test_NumPy__t_BoolSeq1), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opByteMatrix', 0, 0, 0, null, null, array($Test_NumPy__t_ByteSeq1), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opShortMatrix', 0, 0, 0, null, null, array($Test_NumPy__t_ShortSeq1), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opIntMatrix', 0, 0, 0, null, null, array($Test_NumPy__t_IntSeq1), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opLongMatrix', 0, 0, 0, null, null, array($Test_NumPy__t_LongSeq1), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opFloatMatrix', 0, 0, 0, null, null, array($Test_NumPy__t_FloatSeq1), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opDoubleMatrix', 0, 0, 0, null, null, array($Test_NumPy__t_DoubleSeq1), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opBogusNumpyArrayType', 0, 0, 0, null, null, array($Test_NumPy__t_BoolSeq1), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'opD', 0, 0, 0, array(array($Test_NumPy__t_D)), null, array($Test_NumPy__t_D), null);
    IcePHP_defineOperation($Test_NumPy__t_CustomPrx, 'shutdown', 0, 0, 0, null, null, null, null);
}
?>
