<?php
//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.9
//
// <auto-generated>
//
// Generated from file `LocalTest.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


namespace LocalTest
{
    global $LocalTest__t_C1;
    class C1 extends \Ice\Value
    {
        public function __construct($i=0)
        {
            $this->i = $i;
        }

        public function ice_id()
        {
            return '::LocalTest::C1';
        }

        public static function ice_staticId()
        {
            return '::LocalTest::C1';
        }

        public function __toString(): string
        {
            global $LocalTest__t_C1;
            return IcePHP_stringify($this, $LocalTest__t_C1);
        }

        public $i;
    }

    global $Ice__t_Value;
    global $IcePHP__t_int;
    $LocalTest__t_C1 = IcePHP_defineClass('::LocalTest::C1', '\\LocalTest\\C1', -1, false, false, $Ice__t_Value, array(
        array('i', $IcePHP__t_int, false, 0)));
}

namespace LocalTest
{
    global $LocalTest__t_S1;
    class S1
    {
        public function __construct($c1=null)
        {
            $this->c1 = $c1;
        }

        public function __toString(): string
        {
            global $LocalTest__t_S1;
            return IcePHP_stringify($this, $LocalTest__t_S1);
        }

        public $c1;
    }

    global $LocalTest__t_C1;
    $LocalTest__t_S1 = IcePHP_defineStruct('::LocalTest::S1', '\\LocalTest\\S1', array(
        array('c1', $LocalTest__t_C1)));
}

namespace LocalTest
{
    global $LocalTest__t_C1Seq;

    if(!isset($LocalTest__t_C1Seq))
    {
        global $LocalTest__t_C1;
        $LocalTest__t_C1Seq = IcePHP_defineSequence('::LocalTest::C1Seq', $LocalTest__t_C1);
    }
}

namespace LocalTest
{
    global $LocalTest__t_S1Seq;

    if(!isset($LocalTest__t_S1Seq))
    {
        global $LocalTest__t_S1;
        $LocalTest__t_S1Seq = IcePHP_defineSequence('::LocalTest::S1Seq', $LocalTest__t_S1);
    }
}

namespace LocalTest
{
    global $LocalTest__t_C1Dict;

    if(!isset($LocalTest__t_C1Dict))
    {
        global $IcePHP__t_int;
        global $LocalTest__t_C1;
        $LocalTest__t_C1Dict = IcePHP_defineDictionary('::LocalTest::C1Dict', $IcePHP__t_int, $LocalTest__t_C1);
    }
}

namespace LocalTest
{
    global $LocalTest__t_S1Dict;

    if(!isset($LocalTest__t_S1Dict))
    {
        global $IcePHP__t_int;
        global $LocalTest__t_S1;
        $LocalTest__t_S1Dict = IcePHP_defineDictionary('::LocalTest::S1Dict', $IcePHP__t_int, $LocalTest__t_S1);
    }
}

namespace LocalTest
{
    global $LocalTest__t_C1SeqSeq;

    if(!isset($LocalTest__t_C1SeqSeq))
    {
        global $LocalTest__t_C1Seq;
        $LocalTest__t_C1SeqSeq = IcePHP_defineSequence('::LocalTest::C1SeqSeq', $LocalTest__t_C1Seq);
    }
}

namespace LocalTest
{
    global $LocalTest__t_S1SeqSeq;

    if(!isset($LocalTest__t_S1SeqSeq))
    {
        global $LocalTest__t_S1Seq;
        $LocalTest__t_S1SeqSeq = IcePHP_defineSequence('::LocalTest::S1SeqSeq', $LocalTest__t_S1Seq);
    }
}

namespace LocalTest
{
    global $LocalTest__t_S2;
    class S2
    {
        public function __construct($s1=null)
        {
            $this->s1 = is_null($s1) ? new \LocalTest\S1 : $s1;
        }

        public function __toString(): string
        {
            global $LocalTest__t_S2;
            return IcePHP_stringify($this, $LocalTest__t_S2);
        }

        public $s1;
    }

    global $LocalTest__t_S1;
    $LocalTest__t_S2 = IcePHP_defineStruct('::LocalTest::S2', '\\LocalTest\\S2', array(
        array('s1', $LocalTest__t_S1)));
}

namespace LocalTest
{
    global $LocalTest__t_S3;
    class S3
    {
        public function __construct($c1seq=null)
        {
            $this->c1seq = $c1seq;
        }

        public function __toString(): string
        {
            global $LocalTest__t_S3;
            return IcePHP_stringify($this, $LocalTest__t_S3);
        }

        public $c1seq;
    }

    global $LocalTest__t_C1Seq;
    $LocalTest__t_S3 = IcePHP_defineStruct('::LocalTest::S3', '\\LocalTest\\S3', array(
        array('c1seq', $LocalTest__t_C1Seq)));
}

namespace LocalTest
{
    global $LocalTest__t_S4;
    class S4
    {
        public function __construct($s1seq=null)
        {
            $this->s1seq = $s1seq;
        }

        public function __toString(): string
        {
            global $LocalTest__t_S4;
            return IcePHP_stringify($this, $LocalTest__t_S4);
        }

        public $s1seq;
    }

    global $LocalTest__t_S1Seq;
    $LocalTest__t_S4 = IcePHP_defineStruct('::LocalTest::S4', '\\LocalTest\\S4', array(
        array('s1seq', $LocalTest__t_S1Seq)));
}

namespace LocalTest
{
    global $LocalTest__t_S5;
    class S5
    {
        public function __construct($c1dict=null)
        {
            $this->c1dict = $c1dict;
        }

        public function __toString(): string
        {
            global $LocalTest__t_S5;
            return IcePHP_stringify($this, $LocalTest__t_S5);
        }

        public $c1dict;
    }

    global $LocalTest__t_C1Dict;
    $LocalTest__t_S5 = IcePHP_defineStruct('::LocalTest::S5', '\\LocalTest\\S5', array(
        array('c1dict', $LocalTest__t_C1Dict)));
}

namespace LocalTest
{
    global $LocalTest__t_S6;
    class S6
    {
        public function __construct($s1dict=null)
        {
            $this->s1dict = $s1dict;
        }

        public function __toString(): string
        {
            global $LocalTest__t_S6;
            return IcePHP_stringify($this, $LocalTest__t_S6);
        }

        public $s1dict;
    }

    global $LocalTest__t_S1Dict;
    $LocalTest__t_S6 = IcePHP_defineStruct('::LocalTest::S6', '\\LocalTest\\S6', array(
        array('s1dict', $LocalTest__t_S1Dict)));
}

namespace LocalTest
{
    global $LocalTest__t_S7;
    class S7
    {
        public function __construct($c1seqseq=null)
        {
            $this->c1seqseq = $c1seqseq;
        }

        public function __toString(): string
        {
            global $LocalTest__t_S7;
            return IcePHP_stringify($this, $LocalTest__t_S7);
        }

        public $c1seqseq;
    }

    global $LocalTest__t_C1SeqSeq;
    $LocalTest__t_S7 = IcePHP_defineStruct('::LocalTest::S7', '\\LocalTest\\S7', array(
        array('c1seqseq', $LocalTest__t_C1SeqSeq)));
}

namespace LocalTest
{
    global $LocalTest__t_S8;
    class S8
    {
        public function __construct($s1seqseq=null)
        {
            $this->s1seqseq = $s1seqseq;
        }

        public function __toString(): string
        {
            global $LocalTest__t_S8;
            return IcePHP_stringify($this, $LocalTest__t_S8);
        }

        public $s1seqseq;
    }

    global $LocalTest__t_S1SeqSeq;
    $LocalTest__t_S8 = IcePHP_defineStruct('::LocalTest::S8', '\\LocalTest\\S8', array(
        array('s1seqseq', $LocalTest__t_S1SeqSeq)));
}

namespace LocalTest
{
    global $LocalTest__t_CB1;
    class CB1 extends \Ice\Value
    {
        public function __construct($s1=null)
        {
            $this->s1 = is_null($s1) ? new \LocalTest\S1 : $s1;
        }

        public function ice_id()
        {
            return '::LocalTest::CB1';
        }

        public static function ice_staticId()
        {
            return '::LocalTest::CB1';
        }

        public function __toString(): string
        {
            global $LocalTest__t_CB1;
            return IcePHP_stringify($this, $LocalTest__t_CB1);
        }

        public $s1;
    }

    $LocalTest__t_CB1 = IcePHP_declareClass('::LocalTest::CB1');

    global $Ice__t_Value;
    global $LocalTest__t_S1;
    $LocalTest__t_CB1 = IcePHP_defineClass('::LocalTest::CB1', '\\LocalTest\\CB1', -1, false, false, $Ice__t_Value, array(
        array('s1', $LocalTest__t_S1, false, 0)));
}

namespace LocalTest
{
    global $LocalTest__t_CB2;
    class CB2 extends \Ice\Value
    {
        public function __construct($c1seq=null)
        {
            $this->c1seq = $c1seq;
        }

        public function ice_id()
        {
            return '::LocalTest::CB2';
        }

        public static function ice_staticId()
        {
            return '::LocalTest::CB2';
        }

        public function __toString(): string
        {
            global $LocalTest__t_CB2;
            return IcePHP_stringify($this, $LocalTest__t_CB2);
        }

        public $c1seq;
    }

    $LocalTest__t_CB2 = IcePHP_declareClass('::LocalTest::CB2');

    global $Ice__t_Value;
    global $LocalTest__t_C1Seq;
    $LocalTest__t_CB2 = IcePHP_defineClass('::LocalTest::CB2', '\\LocalTest\\CB2', -1, false, false, $Ice__t_Value, array(
        array('c1seq', $LocalTest__t_C1Seq, false, 0)));
}

namespace LocalTest
{
    global $LocalTest__t_CB3;
    class CB3 extends \Ice\Value
    {
        public function __construct($s1seq=null)
        {
            $this->s1seq = $s1seq;
        }

        public function ice_id()
        {
            return '::LocalTest::CB3';
        }

        public static function ice_staticId()
        {
            return '::LocalTest::CB3';
        }

        public function __toString(): string
        {
            global $LocalTest__t_CB3;
            return IcePHP_stringify($this, $LocalTest__t_CB3);
        }

        public $s1seq;
    }

    $LocalTest__t_CB3 = IcePHP_declareClass('::LocalTest::CB3');

    global $Ice__t_Value;
    global $LocalTest__t_S1Seq;
    $LocalTest__t_CB3 = IcePHP_defineClass('::LocalTest::CB3', '\\LocalTest\\CB3', -1, false, false, $Ice__t_Value, array(
        array('s1seq', $LocalTest__t_S1Seq, false, 0)));
}

namespace LocalTest
{
    global $LocalTest__t_CB4;
    class CB4 extends \Ice\Value
    {
        public function __construct($c1dict=null)
        {
            $this->c1dict = $c1dict;
        }

        public function ice_id()
        {
            return '::LocalTest::CB4';
        }

        public static function ice_staticId()
        {
            return '::LocalTest::CB4';
        }

        public function __toString(): string
        {
            global $LocalTest__t_CB4;
            return IcePHP_stringify($this, $LocalTest__t_CB4);
        }

        public $c1dict;
    }

    $LocalTest__t_CB4 = IcePHP_declareClass('::LocalTest::CB4');

    global $Ice__t_Value;
    global $LocalTest__t_C1Dict;
    $LocalTest__t_CB4 = IcePHP_defineClass('::LocalTest::CB4', '\\LocalTest\\CB4', -1, false, false, $Ice__t_Value, array(
        array('c1dict', $LocalTest__t_C1Dict, false, 0)));
}

namespace LocalTest
{
    global $LocalTest__t_CB5;
    class CB5 extends \Ice\Value
    {
        public function __construct($s1dict=null)
        {
            $this->s1dict = $s1dict;
        }

        public function ice_id()
        {
            return '::LocalTest::CB5';
        }

        public static function ice_staticId()
        {
            return '::LocalTest::CB5';
        }

        public function __toString(): string
        {
            global $LocalTest__t_CB5;
            return IcePHP_stringify($this, $LocalTest__t_CB5);
        }

        public $s1dict;
    }

    $LocalTest__t_CB5 = IcePHP_declareClass('::LocalTest::CB5');

    global $Ice__t_Value;
    global $LocalTest__t_S1Dict;
    $LocalTest__t_CB5 = IcePHP_defineClass('::LocalTest::CB5', '\\LocalTest\\CB5', -1, false, false, $Ice__t_Value, array(
        array('s1dict', $LocalTest__t_S1Dict, false, 0)));
}

namespace LocalTest
{
    global $LocalTest__t_CB6;
    class CB6 extends \Ice\Value
    {
        public function __construct($c1seqseq=null)
        {
            $this->c1seqseq = $c1seqseq;
        }

        public function ice_id()
        {
            return '::LocalTest::CB6';
        }

        public static function ice_staticId()
        {
            return '::LocalTest::CB6';
        }

        public function __toString(): string
        {
            global $LocalTest__t_CB6;
            return IcePHP_stringify($this, $LocalTest__t_CB6);
        }

        public $c1seqseq;
    }

    $LocalTest__t_CB6 = IcePHP_declareClass('::LocalTest::CB6');

    global $Ice__t_Value;
    global $LocalTest__t_C1SeqSeq;
    $LocalTest__t_CB6 = IcePHP_defineClass('::LocalTest::CB6', '\\LocalTest\\CB6', -1, false, false, $Ice__t_Value, array(
        array('c1seqseq', $LocalTest__t_C1SeqSeq, false, 0)));
}

namespace LocalTest
{
    global $LocalTest__t_CB7;
    class CB7 extends \Ice\Value
    {
        public function __construct($s1seqseq=null)
        {
            $this->s1seqseq = $s1seqseq;
        }

        public function ice_id()
        {
            return '::LocalTest::CB7';
        }

        public static function ice_staticId()
        {
            return '::LocalTest::CB7';
        }

        public function __toString(): string
        {
            global $LocalTest__t_CB7;
            return IcePHP_stringify($this, $LocalTest__t_CB7);
        }

        public $s1seqseq;
    }

    $LocalTest__t_CB7 = IcePHP_declareClass('::LocalTest::CB7');

    global $Ice__t_Value;
    global $LocalTest__t_S1SeqSeq;
    $LocalTest__t_CB7 = IcePHP_defineClass('::LocalTest::CB7', '\\LocalTest\\CB7', -1, false, false, $Ice__t_Value, array(
        array('s1seqseq', $LocalTest__t_S1SeqSeq, false, 0)));
}

namespace LocalTest
{
    global $LocalTest__t_CB8;
    class CB8 extends \Ice\Value
    {
        public function __construct($s1=null, $c1seq=null, $s1dict=null)
        {
            $this->s1 = is_null($s1) ? new \LocalTest\S1 : $s1;
            $this->c1seq = $c1seq;
            $this->s1dict = $s1dict;
        }

        public function ice_id()
        {
            return '::LocalTest::CB8';
        }

        public static function ice_staticId()
        {
            return '::LocalTest::CB8';
        }

        public function __toString(): string
        {
            global $LocalTest__t_CB8;
            return IcePHP_stringify($this, $LocalTest__t_CB8);
        }

        public $s1;
        public $c1seq;
        public $s1dict;
    }

    $LocalTest__t_CB8 = IcePHP_declareClass('::LocalTest::CB8');

    global $Ice__t_Value;
    global $LocalTest__t_S1;
    global $LocalTest__t_C1Seq;
    global $LocalTest__t_S1Dict;
    $LocalTest__t_CB8 = IcePHP_defineClass('::LocalTest::CB8', '\\LocalTest\\CB8', -1, false, false, $Ice__t_Value, array(
        array('s1', $LocalTest__t_S1, false, 0),
        array('c1seq', $LocalTest__t_C1Seq, false, 0),
        array('s1dict', $LocalTest__t_S1Dict, false, 0)));
}

namespace LocalTest
{
    global $LocalTest__t_StructKey;
    class StructKey
    {
        public function __construct($i=0, $j=0)
        {
            $this->i = $i;
            $this->j = $j;
        }

        public function __toString(): string
        {
            global $LocalTest__t_StructKey;
            return IcePHP_stringify($this, $LocalTest__t_StructKey);
        }

        public $i;
        public $j;
    }

    global $IcePHP__t_int;
    $LocalTest__t_StructKey = IcePHP_defineStruct('::LocalTest::StructKey', '\\LocalTest\\StructKey', array(
        array('i', $IcePHP__t_int),
        array('j', $IcePHP__t_int)));
}

namespace LocalTest
{
    global $LocalTest__t_StructDict1;

    if(!isset($LocalTest__t_StructDict1))
    {
        global $LocalTest__t_StructKey;
        global $LocalTest__t_C1;
        $LocalTest__t_StructDict1 = IcePHP_defineDictionary('::LocalTest::StructDict1', $LocalTest__t_StructKey, $LocalTest__t_C1);
    }
}

namespace LocalTest
{
    global $LocalTest__t_StructDict2;

    if(!isset($LocalTest__t_StructDict2))
    {
        global $LocalTest__t_StructKey;
        global $LocalTest__t_S1;
        $LocalTest__t_StructDict2 = IcePHP_defineDictionary('::LocalTest::StructDict2', $LocalTest__t_StructKey, $LocalTest__t_S1);
    }
}

namespace LocalTest
{
    global $LocalTest__t_C1DictDict;

    if(!isset($LocalTest__t_C1DictDict))
    {
        global $IcePHP__t_int;
        global $LocalTest__t_C1Dict;
        $LocalTest__t_C1DictDict = IcePHP_defineDictionary('::LocalTest::C1DictDict', $IcePHP__t_int, $LocalTest__t_C1Dict);
    }
}

namespace LocalTest
{
    global $LocalTest__t_S1DictDict;

    if(!isset($LocalTest__t_S1DictDict))
    {
        global $IcePHP__t_int;
        global $LocalTest__t_S1Dict;
        $LocalTest__t_S1DictDict = IcePHP_defineDictionary('::LocalTest::S1DictDict', $IcePHP__t_int, $LocalTest__t_S1Dict);
    }
}

namespace LocalTest
{
    global $LocalTest__t_Opt;
    class Opt extends \Ice\Value
    {
        public function __construct($s1=\Ice\None, $c1seq=\Ice\None, $s1dict=\Ice\None)
        {
            $this->s1 = is_null($s1) ? new \LocalTest\S1 : $s1;
            $this->c1seq = $c1seq;
            $this->s1dict = $s1dict;
        }

        public function ice_id()
        {
            return '::LocalTest::Opt';
        }

        public static function ice_staticId()
        {
            return '::LocalTest::Opt';
        }

        public function __toString(): string
        {
            global $LocalTest__t_Opt;
            return IcePHP_stringify($this, $LocalTest__t_Opt);
        }

        public $s1;
        public $c1seq;
        public $s1dict;
    }

    $LocalTest__t_Opt = IcePHP_declareClass('::LocalTest::Opt');

    global $Ice__t_Value;
    global $LocalTest__t_S1;
    global $LocalTest__t_C1Seq;
    global $LocalTest__t_S1Dict;
    $LocalTest__t_Opt = IcePHP_defineClass('::LocalTest::Opt', '\\LocalTest\\Opt', -1, false, false, $Ice__t_Value, array(
        array('s1', $LocalTest__t_S1, true, 1),
        array('c1seq', $LocalTest__t_C1Seq, true, 2),
        array('s1dict', $LocalTest__t_S1Dict, true, 3)));
}
?>
