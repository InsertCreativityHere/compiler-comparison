<?php
//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file 'TestAMD.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


namespace Test
{
    global $Test__t_AByteS;

    if(!isset($Test__t_AByteS))
    {
        global $IcePHP__t_byte;
        $Test__t_AByteS = IcePHP_defineSequence('::Test::AByteS', $IcePHP__t_byte);
    }
}

namespace Test
{
    global $Test__t_LByteS;

    if(!isset($Test__t_LByteS))
    {
        global $IcePHP__t_byte;
        $Test__t_LByteS = IcePHP_defineSequence('::Test::LByteS', $IcePHP__t_byte);
    }
}

namespace Test
{
    global $Test__t_KByteS;

    if(!isset($Test__t_KByteS))
    {
        global $IcePHP__t_byte;
        $Test__t_KByteS = IcePHP_defineSequence('::Test::KByteS', $IcePHP__t_byte);
    }
}

namespace Test
{
    global $Test__t_QByteS;

    if(!isset($Test__t_QByteS))
    {
        global $IcePHP__t_byte;
        $Test__t_QByteS = IcePHP_defineSequence('::Test::QByteS', $IcePHP__t_byte);
    }
}

namespace Test
{
    global $Test__t_SByteS;

    if(!isset($Test__t_SByteS))
    {
        global $IcePHP__t_byte;
        $Test__t_SByteS = IcePHP_defineSequence('::Test::SByteS', $IcePHP__t_byte);
    }
}

namespace Test
{
    global $Test__t_ABoolS;

    if(!isset($Test__t_ABoolS))
    {
        global $IcePHP__t_bool;
        $Test__t_ABoolS = IcePHP_defineSequence('::Test::ABoolS', $IcePHP__t_bool);
    }
}

namespace Test
{
    global $Test__t_LBoolS;

    if(!isset($Test__t_LBoolS))
    {
        global $IcePHP__t_bool;
        $Test__t_LBoolS = IcePHP_defineSequence('::Test::LBoolS', $IcePHP__t_bool);
    }
}

namespace Test
{
    global $Test__t_KBoolS;

    if(!isset($Test__t_KBoolS))
    {
        global $IcePHP__t_bool;
        $Test__t_KBoolS = IcePHP_defineSequence('::Test::KBoolS', $IcePHP__t_bool);
    }
}

namespace Test
{
    global $Test__t_QBoolS;

    if(!isset($Test__t_QBoolS))
    {
        global $IcePHP__t_bool;
        $Test__t_QBoolS = IcePHP_defineSequence('::Test::QBoolS', $IcePHP__t_bool);
    }
}

namespace Test
{
    global $Test__t_SBoolS;

    if(!isset($Test__t_SBoolS))
    {
        global $IcePHP__t_bool;
        $Test__t_SBoolS = IcePHP_defineSequence('::Test::SBoolS', $IcePHP__t_bool);
    }
}

namespace Test
{
    global $Test__t_AShortS;

    if(!isset($Test__t_AShortS))
    {
        global $IcePHP__t_short;
        $Test__t_AShortS = IcePHP_defineSequence('::Test::AShortS', $IcePHP__t_short);
    }
}

namespace Test
{
    global $Test__t_LShortS;

    if(!isset($Test__t_LShortS))
    {
        global $IcePHP__t_short;
        $Test__t_LShortS = IcePHP_defineSequence('::Test::LShortS', $IcePHP__t_short);
    }
}

namespace Test
{
    global $Test__t_KShortS;

    if(!isset($Test__t_KShortS))
    {
        global $IcePHP__t_short;
        $Test__t_KShortS = IcePHP_defineSequence('::Test::KShortS', $IcePHP__t_short);
    }
}

namespace Test
{
    global $Test__t_QShortS;

    if(!isset($Test__t_QShortS))
    {
        global $IcePHP__t_short;
        $Test__t_QShortS = IcePHP_defineSequence('::Test::QShortS', $IcePHP__t_short);
    }
}

namespace Test
{
    global $Test__t_SShortS;

    if(!isset($Test__t_SShortS))
    {
        global $IcePHP__t_short;
        $Test__t_SShortS = IcePHP_defineSequence('::Test::SShortS', $IcePHP__t_short);
    }
}

namespace Test
{
    global $Test__t_AIntS;

    if(!isset($Test__t_AIntS))
    {
        global $IcePHP__t_int;
        $Test__t_AIntS = IcePHP_defineSequence('::Test::AIntS', $IcePHP__t_int);
    }
}

namespace Test
{
    global $Test__t_LIntS;

    if(!isset($Test__t_LIntS))
    {
        global $IcePHP__t_int;
        $Test__t_LIntS = IcePHP_defineSequence('::Test::LIntS', $IcePHP__t_int);
    }
}

namespace Test
{
    global $Test__t_KIntS;

    if(!isset($Test__t_KIntS))
    {
        global $IcePHP__t_int;
        $Test__t_KIntS = IcePHP_defineSequence('::Test::KIntS', $IcePHP__t_int);
    }
}

namespace Test
{
    global $Test__t_QIntS;

    if(!isset($Test__t_QIntS))
    {
        global $IcePHP__t_int;
        $Test__t_QIntS = IcePHP_defineSequence('::Test::QIntS', $IcePHP__t_int);
    }
}

namespace Test
{
    global $Test__t_SIntS;

    if(!isset($Test__t_SIntS))
    {
        global $IcePHP__t_int;
        $Test__t_SIntS = IcePHP_defineSequence('::Test::SIntS', $IcePHP__t_int);
    }
}

namespace Test
{
    global $Test__t_ALongS;

    if(!isset($Test__t_ALongS))
    {
        global $IcePHP__t_long;
        $Test__t_ALongS = IcePHP_defineSequence('::Test::ALongS', $IcePHP__t_long);
    }
}

namespace Test
{
    global $Test__t_LLongS;

    if(!isset($Test__t_LLongS))
    {
        global $IcePHP__t_long;
        $Test__t_LLongS = IcePHP_defineSequence('::Test::LLongS', $IcePHP__t_long);
    }
}

namespace Test
{
    global $Test__t_KLongS;

    if(!isset($Test__t_KLongS))
    {
        global $IcePHP__t_long;
        $Test__t_KLongS = IcePHP_defineSequence('::Test::KLongS', $IcePHP__t_long);
    }
}

namespace Test
{
    global $Test__t_QLongS;

    if(!isset($Test__t_QLongS))
    {
        global $IcePHP__t_long;
        $Test__t_QLongS = IcePHP_defineSequence('::Test::QLongS', $IcePHP__t_long);
    }
}

namespace Test
{
    global $Test__t_SLongS;

    if(!isset($Test__t_SLongS))
    {
        global $IcePHP__t_long;
        $Test__t_SLongS = IcePHP_defineSequence('::Test::SLongS', $IcePHP__t_long);
    }
}

namespace Test
{
    global $Test__t_AFloatS;

    if(!isset($Test__t_AFloatS))
    {
        global $IcePHP__t_float;
        $Test__t_AFloatS = IcePHP_defineSequence('::Test::AFloatS', $IcePHP__t_float);
    }
}

namespace Test
{
    global $Test__t_LFloatS;

    if(!isset($Test__t_LFloatS))
    {
        global $IcePHP__t_float;
        $Test__t_LFloatS = IcePHP_defineSequence('::Test::LFloatS', $IcePHP__t_float);
    }
}

namespace Test
{
    global $Test__t_KFloatS;

    if(!isset($Test__t_KFloatS))
    {
        global $IcePHP__t_float;
        $Test__t_KFloatS = IcePHP_defineSequence('::Test::KFloatS', $IcePHP__t_float);
    }
}

namespace Test
{
    global $Test__t_QFloatS;

    if(!isset($Test__t_QFloatS))
    {
        global $IcePHP__t_float;
        $Test__t_QFloatS = IcePHP_defineSequence('::Test::QFloatS', $IcePHP__t_float);
    }
}

namespace Test
{
    global $Test__t_SFloatS;

    if(!isset($Test__t_SFloatS))
    {
        global $IcePHP__t_float;
        $Test__t_SFloatS = IcePHP_defineSequence('::Test::SFloatS', $IcePHP__t_float);
    }
}

namespace Test
{
    global $Test__t_ADoubleS;

    if(!isset($Test__t_ADoubleS))
    {
        global $IcePHP__t_double;
        $Test__t_ADoubleS = IcePHP_defineSequence('::Test::ADoubleS', $IcePHP__t_double);
    }
}

namespace Test
{
    global $Test__t_LDoubleS;

    if(!isset($Test__t_LDoubleS))
    {
        global $IcePHP__t_double;
        $Test__t_LDoubleS = IcePHP_defineSequence('::Test::LDoubleS', $IcePHP__t_double);
    }
}

namespace Test
{
    global $Test__t_KDoubleS;

    if(!isset($Test__t_KDoubleS))
    {
        global $IcePHP__t_double;
        $Test__t_KDoubleS = IcePHP_defineSequence('::Test::KDoubleS', $IcePHP__t_double);
    }
}

namespace Test
{
    global $Test__t_QDoubleS;

    if(!isset($Test__t_QDoubleS))
    {
        global $IcePHP__t_double;
        $Test__t_QDoubleS = IcePHP_defineSequence('::Test::QDoubleS', $IcePHP__t_double);
    }
}

namespace Test
{
    global $Test__t_SDoubleS;

    if(!isset($Test__t_SDoubleS))
    {
        global $IcePHP__t_double;
        $Test__t_SDoubleS = IcePHP_defineSequence('::Test::SDoubleS', $IcePHP__t_double);
    }
}

namespace Test
{
    global $Test__t_AStringS;

    if(!isset($Test__t_AStringS))
    {
        global $IcePHP__t_string;
        $Test__t_AStringS = IcePHP_defineSequence('::Test::AStringS', $IcePHP__t_string);
    }
}

namespace Test
{
    global $Test__t_LStringS;

    if(!isset($Test__t_LStringS))
    {
        global $IcePHP__t_string;
        $Test__t_LStringS = IcePHP_defineSequence('::Test::LStringS', $IcePHP__t_string);
    }
}

namespace Test
{
    global $Test__t_KStringS;

    if(!isset($Test__t_KStringS))
    {
        global $IcePHP__t_string;
        $Test__t_KStringS = IcePHP_defineSequence('::Test::KStringS', $IcePHP__t_string);
    }
}

namespace Test
{
    global $Test__t_QStringS;

    if(!isset($Test__t_QStringS))
    {
        global $IcePHP__t_string;
        $Test__t_QStringS = IcePHP_defineSequence('::Test::QStringS', $IcePHP__t_string);
    }
}

namespace Test
{
    global $Test__t_SStringS;

    if(!isset($Test__t_SStringS))
    {
        global $IcePHP__t_string;
        $Test__t_SStringS = IcePHP_defineSequence('::Test::SStringS', $IcePHP__t_string);
    }
}

namespace Test
{
    global $Test__t_AObjectS;

    if(!isset($Test__t_AObjectS))
    {
        global $Ice__t_Value;
        $Test__t_AObjectS = IcePHP_defineSequence('::Test::AObjectS', $Ice__t_Value);
    }
}

namespace Test
{
    global $Test__t_LObjectS;

    if(!isset($Test__t_LObjectS))
    {
        global $Ice__t_Value;
        $Test__t_LObjectS = IcePHP_defineSequence('::Test::LObjectS', $Ice__t_Value);
    }
}

namespace Test
{
    global $Test__t_AObjectPrxS;

    if(!isset($Test__t_AObjectPrxS))
    {
        global $Ice__t_ObjectPrx;
        $Test__t_AObjectPrxS = IcePHP_defineSequence('::Test::AObjectPrxS', $Ice__t_ObjectPrx);
    }
}

namespace Test
{
    global $Test__t_LObjectPrxS;

    if(!isset($Test__t_LObjectPrxS))
    {
        global $Ice__t_ObjectPrx;
        $Test__t_LObjectPrxS = IcePHP_defineSequence('::Test::LObjectPrxS', $Ice__t_ObjectPrx);
    }
}

namespace Test
{
    global $Test__t_KObjectPrxS;

    if(!isset($Test__t_KObjectPrxS))
    {
        global $Ice__t_ObjectPrx;
        $Test__t_KObjectPrxS = IcePHP_defineSequence('::Test::KObjectPrxS', $Ice__t_ObjectPrx);
    }
}

namespace Test
{
    global $Test__t_QObjectPrxS;

    if(!isset($Test__t_QObjectPrxS))
    {
        global $Ice__t_ObjectPrx;
        $Test__t_QObjectPrxS = IcePHP_defineSequence('::Test::QObjectPrxS', $Ice__t_ObjectPrx);
    }
}

namespace Test
{
    global $Test__t_SObjectPrxS;

    if(!isset($Test__t_SObjectPrxS))
    {
        global $Ice__t_ObjectPrx;
        $Test__t_SObjectPrxS = IcePHP_defineSequence('::Test::SObjectPrxS', $Ice__t_ObjectPrx);
    }
}

namespace Test
{
    global $Test__t_S;
    class S
    {
        public function __construct($i=0)
        {
            $this->i = $i;
        }

        public function __toString(): string
        {
            global $Test__t_S;
            return IcePHP_stringify($this, $Test__t_S);
        }

        public $i;
    }

    global $IcePHP__t_int;
    $Test__t_S = IcePHP_defineStruct('::Test::S', '\\Test\\S', array(
        array('i', $IcePHP__t_int)));
}

namespace Test
{
    global $Test__t_AStructS;

    if(!isset($Test__t_AStructS))
    {
        global $Test__t_S;
        $Test__t_AStructS = IcePHP_defineSequence('::Test::AStructS', $Test__t_S);
    }
}

namespace Test
{
    global $Test__t_LStructS;

    if(!isset($Test__t_LStructS))
    {
        global $Test__t_S;
        $Test__t_LStructS = IcePHP_defineSequence('::Test::LStructS', $Test__t_S);
    }
}

namespace Test
{
    global $Test__t_KStructS;

    if(!isset($Test__t_KStructS))
    {
        global $Test__t_S;
        $Test__t_KStructS = IcePHP_defineSequence('::Test::KStructS', $Test__t_S);
    }
}

namespace Test
{
    global $Test__t_QStructS;

    if(!isset($Test__t_QStructS))
    {
        global $Test__t_S;
        $Test__t_QStructS = IcePHP_defineSequence('::Test::QStructS', $Test__t_S);
    }
}

namespace Test
{
    global $Test__t_SStructS;

    if(!isset($Test__t_SStructS))
    {
        global $Test__t_S;
        $Test__t_SStructS = IcePHP_defineSequence('::Test::SStructS', $Test__t_S);
    }
}

namespace Test
{
    global $Test__t_SD;
    class SD
    {
        public function __construct($i=1)
        {
            $this->i = $i;
        }

        public function __toString(): string
        {
            global $Test__t_SD;
            return IcePHP_stringify($this, $Test__t_SD);
        }

        public $i;
    }

    global $IcePHP__t_int;
    $Test__t_SD = IcePHP_defineStruct('::Test::SD', '\\Test\\SD', array(
        array('i', $IcePHP__t_int)));
}

namespace Test
{
    global $Test__t_AStructSD;

    if(!isset($Test__t_AStructSD))
    {
        global $Test__t_SD;
        $Test__t_AStructSD = IcePHP_defineSequence('::Test::AStructSD', $Test__t_SD);
    }
}

namespace Test
{
    global $Test__t_LStructSD;

    if(!isset($Test__t_LStructSD))
    {
        global $Test__t_SD;
        $Test__t_LStructSD = IcePHP_defineSequence('::Test::LStructSD', $Test__t_SD);
    }
}

namespace Test
{
    global $Test__t_KStructSD;

    if(!isset($Test__t_KStructSD))
    {
        global $Test__t_SD;
        $Test__t_KStructSD = IcePHP_defineSequence('::Test::KStructSD', $Test__t_SD);
    }
}

namespace Test
{
    global $Test__t_QStructSD;

    if(!isset($Test__t_QStructSD))
    {
        global $Test__t_SD;
        $Test__t_QStructSD = IcePHP_defineSequence('::Test::QStructSD', $Test__t_SD);
    }
}

namespace Test
{
    global $Test__t_SStructSD;

    if(!isset($Test__t_SStructSD))
    {
        global $Test__t_SD;
        $Test__t_SStructSD = IcePHP_defineSequence('::Test::SStructSD', $Test__t_SD);
    }
}

namespace Test
{
    global $Test__t_CV;
    class CV extends \Ice\Value
    {
        public function __construct($i=0)
        {
            $this->i = $i;
        }

        public function ice_id()
        {
            return '::Test::CV';
        }

        public static function ice_staticId()
        {
            return '::Test::CV';
        }

        public function __toString(): string
        {
            global $Test__t_CV;
            return IcePHP_stringify($this, $Test__t_CV);
        }

        public $i;
    }

    global $Ice__t_Value;
    global $IcePHP__t_int;
    $Test__t_CV = IcePHP_defineClass('::Test::CV', '\\Test\\CV', -1, false, $Ice__t_Value, array(
        array('i', $IcePHP__t_int, false, 0)));
}

namespace Test
{
    global $Test__t_ACVS;

    if(!isset($Test__t_ACVS))
    {
        global $Test__t_CV;
        $Test__t_ACVS = IcePHP_defineSequence('::Test::ACVS', $Test__t_CV);
    }
}

namespace Test
{
    global $Test__t_LCVS;

    if(!isset($Test__t_LCVS))
    {
        global $Test__t_CV;
        $Test__t_LCVS = IcePHP_defineSequence('::Test::LCVS', $Test__t_CV);
    }
}

namespace Test
{
    global $Test__t_I;
    global $Test__t_IPrx;

    class IPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::I');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::I', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::I', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::I';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_IPrx = IcePHP_defineProxy('::Test::I', $Ice__t_ObjectPrx, null);
}

namespace Test
{
    global $Test__t_AIPrxS;

    if(!isset($Test__t_AIPrxS))
    {
        global $Test__t_IPrx;
        $Test__t_AIPrxS = IcePHP_defineSequence('::Test::AIPrxS', $Test__t_IPrx);
    }
}

namespace Test
{
    global $Test__t_LIPrxS;

    if(!isset($Test__t_LIPrxS))
    {
        global $Test__t_IPrx;
        $Test__t_LIPrxS = IcePHP_defineSequence('::Test::LIPrxS', $Test__t_IPrx);
    }
}

namespace Test
{
    global $Test__t_KIPrxS;

    if(!isset($Test__t_KIPrxS))
    {
        global $Test__t_IPrx;
        $Test__t_KIPrxS = IcePHP_defineSequence('::Test::KIPrxS', $Test__t_IPrx);
    }
}

namespace Test
{
    global $Test__t_QIPrxS;

    if(!isset($Test__t_QIPrxS))
    {
        global $Test__t_IPrx;
        $Test__t_QIPrxS = IcePHP_defineSequence('::Test::QIPrxS', $Test__t_IPrx);
    }
}

namespace Test
{
    global $Test__t_SIPrxS;

    if(!isset($Test__t_SIPrxS))
    {
        global $Test__t_IPrx;
        $Test__t_SIPrxS = IcePHP_defineSequence('::Test::SIPrxS', $Test__t_IPrx);
    }
}

namespace Test
{
    global $Test__t_CR;
    class CR extends \Ice\Value
    {
        public function __construct($v=null)
        {
            $this->v = $v;
        }

        public function ice_id()
        {
            return '::Test::CR';
        }

        public static function ice_staticId()
        {
            return '::Test::CR';
        }

        public function __toString(): string
        {
            global $Test__t_CR;
            return IcePHP_stringify($this, $Test__t_CR);
        }

        public $v;
    }

    $Test__t_CR = IcePHP_declareClass('::Test::CR');

    global $Ice__t_Value;
    global $Test__t_CV;
    $Test__t_CR = IcePHP_defineClass('::Test::CR', '\\Test\\CR', -1, false, $Ice__t_Value, array(
        array('v', $Test__t_CV, false, 0)));
}

namespace Test
{
    global $Test__t_ACRS;

    if(!isset($Test__t_ACRS))
    {
        global $Test__t_CR;
        $Test__t_ACRS = IcePHP_defineSequence('::Test::ACRS', $Test__t_CR);
    }
}

namespace Test
{
    global $Test__t_LCRS;

    if(!isset($Test__t_LCRS))
    {
        global $Test__t_CR;
        $Test__t_LCRS = IcePHP_defineSequence('::Test::LCRS', $Test__t_CR);
    }
}

namespace Test
{
    global $Test__t_En;
    class En
    {
        const A = 0;
        const B = 1;
        const C = 2;
    }

    $Test__t_En = IcePHP_defineEnum('::Test::En', array('A', 0, 'B', 1, 'C', 2));
}

namespace Test
{
    global $Test__t_AEnS;

    if(!isset($Test__t_AEnS))
    {
        global $Test__t_En;
        $Test__t_AEnS = IcePHP_defineSequence('::Test::AEnS', $Test__t_En);
    }
}

namespace Test
{
    global $Test__t_LEnS;

    if(!isset($Test__t_LEnS))
    {
        global $Test__t_En;
        $Test__t_LEnS = IcePHP_defineSequence('::Test::LEnS', $Test__t_En);
    }
}

namespace Test
{
    global $Test__t_KEnS;

    if(!isset($Test__t_KEnS))
    {
        global $Test__t_En;
        $Test__t_KEnS = IcePHP_defineSequence('::Test::KEnS', $Test__t_En);
    }
}

namespace Test
{
    global $Test__t_QEnS;

    if(!isset($Test__t_QEnS))
    {
        global $Test__t_En;
        $Test__t_QEnS = IcePHP_defineSequence('::Test::QEnS', $Test__t_En);
    }
}

namespace Test
{
    global $Test__t_SEnS;

    if(!isset($Test__t_SEnS))
    {
        global $Test__t_En;
        $Test__t_SEnS = IcePHP_defineSequence('::Test::SEnS', $Test__t_En);
    }
}

namespace Test
{
    global $Test__t_CustomIntS;

    if(!isset($Test__t_CustomIntS))
    {
        global $IcePHP__t_int;
        $Test__t_CustomIntS = IcePHP_defineSequence('::Test::CustomIntS', $IcePHP__t_int);
    }
}

namespace Test
{
    global $Test__t_CustomCVS;

    if(!isset($Test__t_CustomCVS))
    {
        global $Test__t_CV;
        $Test__t_CustomCVS = IcePHP_defineSequence('::Test::CustomCVS', $Test__t_CV);
    }
}

namespace Test
{
    global $Test__t_CustomIntSS;

    if(!isset($Test__t_CustomIntSS))
    {
        global $Test__t_CustomIntS;
        $Test__t_CustomIntSS = IcePHP_defineSequence('::Test::CustomIntSS', $Test__t_CustomIntS);
    }
}

namespace Test
{
    global $Test__t_CustomCVSS;

    if(!isset($Test__t_CustomCVSS))
    {
        global $Test__t_CustomCVS;
        $Test__t_CustomCVSS = IcePHP_defineSequence('::Test::CustomCVSS', $Test__t_CustomCVS);
    }
}

namespace Test
{
    global $Test__t_MyClass;
    global $Test__t_MyClassPrx;

    class MyClassPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::MyClass');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::MyClass', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::MyClass', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::MyClass';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_MyClassPrx = IcePHP_defineProxy('::Test::MyClass', $Ice__t_ObjectPrx, null);

    global $Test__t_AByteS;
    global $Test__t_LByteS;
    global $Test__t_KByteS;
    global $Test__t_QByteS;
    global $Test__t_SByteS;
    global $Test__t_ABoolS;
    global $Test__t_LBoolS;
    global $Test__t_KBoolS;
    global $Test__t_QBoolS;
    global $Test__t_SBoolS;
    global $Test__t_AShortS;
    global $Test__t_LShortS;
    global $Test__t_KShortS;
    global $Test__t_QShortS;
    global $Test__t_SShortS;
    global $Test__t_AIntS;
    global $Test__t_LIntS;
    global $Test__t_KIntS;
    global $Test__t_QIntS;
    global $Test__t_SIntS;
    global $Test__t_ALongS;
    global $Test__t_LLongS;
    global $Test__t_KLongS;
    global $Test__t_QLongS;
    global $Test__t_SLongS;
    global $Test__t_AFloatS;
    global $Test__t_LFloatS;
    global $Test__t_KFloatS;
    global $Test__t_QFloatS;
    global $Test__t_SFloatS;
    global $Test__t_ADoubleS;
    global $Test__t_LDoubleS;
    global $Test__t_KDoubleS;
    global $Test__t_QDoubleS;
    global $Test__t_SDoubleS;
    global $Test__t_AStringS;
    global $Test__t_LStringS;
    global $Test__t_KStringS;
    global $Test__t_QStringS;
    global $Test__t_SStringS;
    global $Test__t_AObjectS;
    global $Test__t_LObjectS;
    global $Test__t_AObjectPrxS;
    global $Test__t_LObjectPrxS;
    global $Test__t_KObjectPrxS;
    global $Test__t_QObjectPrxS;
    global $Test__t_SObjectPrxS;
    global $Test__t_AStructS;
    global $Test__t_LStructS;
    global $Test__t_KStructS;
    global $Test__t_QStructS;
    global $Test__t_SStructS;
    global $Test__t_AStructSD;
    global $Test__t_LStructSD;
    global $Test__t_KStructSD;
    global $Test__t_QStructSD;
    global $Test__t_SStructSD;
    global $Test__t_ACVS;
    global $Test__t_LCVS;
    global $Test__t_ACRS;
    global $Test__t_LCRS;
    global $Test__t_AEnS;
    global $Test__t_LEnS;
    global $Test__t_KEnS;
    global $Test__t_QEnS;
    global $Test__t_SEnS;
    global $Test__t_AIPrxS;
    global $Test__t_LIPrxS;
    global $Test__t_KIPrxS;
    global $Test__t_QIPrxS;
    global $Test__t_SIPrxS;
    global $Test__t_CustomIntS;
    global $Test__t_CustomCVS;
    global $Test__t_CustomIntSS;
    global $Test__t_CustomCVSS;
    IcePHP_defineOperation($Test__t_MyClassPrx, 'shutdown', 0, -1, null, null, null, null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opAByteS', 0, -1, array(array($Test__t_AByteS)), array(array($Test__t_AByteS)), array($Test__t_AByteS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opLByteS', 0, -1, array(array($Test__t_LByteS)), array(array($Test__t_LByteS)), array($Test__t_LByteS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opKByteS', 0, -1, array(array($Test__t_KByteS)), array(array($Test__t_KByteS)), array($Test__t_KByteS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opQByteS', 0, -1, array(array($Test__t_QByteS)), array(array($Test__t_QByteS)), array($Test__t_QByteS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opSByteS', 0, -1, array(array($Test__t_SByteS)), array(array($Test__t_SByteS)), array($Test__t_SByteS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opABoolS', 0, -1, array(array($Test__t_ABoolS)), array(array($Test__t_ABoolS)), array($Test__t_ABoolS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opLBoolS', 0, -1, array(array($Test__t_LBoolS)), array(array($Test__t_LBoolS)), array($Test__t_LBoolS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opKBoolS', 0, -1, array(array($Test__t_KBoolS)), array(array($Test__t_KBoolS)), array($Test__t_KBoolS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opQBoolS', 0, -1, array(array($Test__t_QBoolS)), array(array($Test__t_QBoolS)), array($Test__t_QBoolS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opSBoolS', 0, -1, array(array($Test__t_SBoolS)), array(array($Test__t_SBoolS)), array($Test__t_SBoolS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opAShortS', 0, -1, array(array($Test__t_AShortS)), array(array($Test__t_AShortS)), array($Test__t_AShortS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opLShortS', 0, -1, array(array($Test__t_LShortS)), array(array($Test__t_LShortS)), array($Test__t_LShortS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opKShortS', 0, -1, array(array($Test__t_KShortS)), array(array($Test__t_KShortS)), array($Test__t_KShortS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opQShortS', 0, -1, array(array($Test__t_QShortS)), array(array($Test__t_QShortS)), array($Test__t_QShortS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opSShortS', 0, -1, array(array($Test__t_SShortS)), array(array($Test__t_SShortS)), array($Test__t_SShortS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opAIntS', 0, -1, array(array($Test__t_AIntS)), array(array($Test__t_AIntS)), array($Test__t_AIntS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opLIntS', 0, -1, array(array($Test__t_LIntS)), array(array($Test__t_LIntS)), array($Test__t_LIntS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opKIntS', 0, -1, array(array($Test__t_KIntS)), array(array($Test__t_KIntS)), array($Test__t_KIntS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opQIntS', 0, -1, array(array($Test__t_QIntS)), array(array($Test__t_QIntS)), array($Test__t_QIntS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opSIntS', 0, -1, array(array($Test__t_SIntS)), array(array($Test__t_SIntS)), array($Test__t_SIntS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opALongS', 0, -1, array(array($Test__t_ALongS)), array(array($Test__t_ALongS)), array($Test__t_ALongS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opLLongS', 0, -1, array(array($Test__t_LLongS)), array(array($Test__t_LLongS)), array($Test__t_LLongS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opKLongS', 0, -1, array(array($Test__t_KLongS)), array(array($Test__t_KLongS)), array($Test__t_KLongS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opQLongS', 0, -1, array(array($Test__t_QLongS)), array(array($Test__t_QLongS)), array($Test__t_QLongS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opSLongS', 0, -1, array(array($Test__t_SLongS)), array(array($Test__t_SLongS)), array($Test__t_SLongS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opAFloatS', 0, -1, array(array($Test__t_AFloatS)), array(array($Test__t_AFloatS)), array($Test__t_AFloatS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opLFloatS', 0, -1, array(array($Test__t_LFloatS)), array(array($Test__t_LFloatS)), array($Test__t_LFloatS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opKFloatS', 0, -1, array(array($Test__t_KFloatS)), array(array($Test__t_KFloatS)), array($Test__t_KFloatS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opQFloatS', 0, -1, array(array($Test__t_QFloatS)), array(array($Test__t_QFloatS)), array($Test__t_QFloatS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opSFloatS', 0, -1, array(array($Test__t_SFloatS)), array(array($Test__t_SFloatS)), array($Test__t_SFloatS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opADoubleS', 0, -1, array(array($Test__t_ADoubleS)), array(array($Test__t_ADoubleS)), array($Test__t_ADoubleS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opLDoubleS', 0, -1, array(array($Test__t_LDoubleS)), array(array($Test__t_LDoubleS)), array($Test__t_LDoubleS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opKDoubleS', 0, -1, array(array($Test__t_KDoubleS)), array(array($Test__t_KDoubleS)), array($Test__t_KDoubleS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opQDoubleS', 0, -1, array(array($Test__t_QDoubleS)), array(array($Test__t_QDoubleS)), array($Test__t_QDoubleS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opSDoubleS', 0, -1, array(array($Test__t_SDoubleS)), array(array($Test__t_SDoubleS)), array($Test__t_SDoubleS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opAStringS', 0, -1, array(array($Test__t_AStringS)), array(array($Test__t_AStringS)), array($Test__t_AStringS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opLStringS', 0, -1, array(array($Test__t_LStringS)), array(array($Test__t_LStringS)), array($Test__t_LStringS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opKStringS', 0, -1, array(array($Test__t_KStringS)), array(array($Test__t_KStringS)), array($Test__t_KStringS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opQStringS', 0, -1, array(array($Test__t_QStringS)), array(array($Test__t_QStringS)), array($Test__t_QStringS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opSStringS', 0, -1, array(array($Test__t_SStringS)), array(array($Test__t_SStringS)), array($Test__t_SStringS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opAObjectS', 0, -1, array(array($Test__t_AObjectS)), array(array($Test__t_AObjectS)), array($Test__t_AObjectS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opLObjectS', 0, -1, array(array($Test__t_LObjectS)), array(array($Test__t_LObjectS)), array($Test__t_LObjectS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opAObjectPrxS', 0, -1, array(array($Test__t_AObjectPrxS)), array(array($Test__t_AObjectPrxS)), array($Test__t_AObjectPrxS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opLObjectPrxS', 0, -1, array(array($Test__t_LObjectPrxS)), array(array($Test__t_LObjectPrxS)), array($Test__t_LObjectPrxS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opKObjectPrxS', 0, -1, array(array($Test__t_KObjectPrxS)), array(array($Test__t_KObjectPrxS)), array($Test__t_KObjectPrxS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opQObjectPrxS', 0, -1, array(array($Test__t_QObjectPrxS)), array(array($Test__t_QObjectPrxS)), array($Test__t_QObjectPrxS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opSObjectPrxS', 0, -1, array(array($Test__t_SObjectPrxS)), array(array($Test__t_SObjectPrxS)), array($Test__t_SObjectPrxS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opAStructS', 0, -1, array(array($Test__t_AStructS)), array(array($Test__t_AStructS)), array($Test__t_AStructS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opLStructS', 0, -1, array(array($Test__t_LStructS)), array(array($Test__t_LStructS)), array($Test__t_LStructS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opKStructS', 0, -1, array(array($Test__t_KStructS)), array(array($Test__t_KStructS)), array($Test__t_KStructS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opQStructS', 0, -1, array(array($Test__t_QStructS)), array(array($Test__t_QStructS)), array($Test__t_QStructS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opSStructS', 0, -1, array(array($Test__t_SStructS)), array(array($Test__t_SStructS)), array($Test__t_SStructS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opAStructSD', 0, -1, array(array($Test__t_AStructSD)), array(array($Test__t_AStructSD)), array($Test__t_AStructSD), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opLStructSD', 0, -1, array(array($Test__t_LStructSD)), array(array($Test__t_LStructSD)), array($Test__t_LStructSD), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opKStructSD', 0, -1, array(array($Test__t_KStructSD)), array(array($Test__t_KStructSD)), array($Test__t_KStructSD), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opQStructSD', 0, -1, array(array($Test__t_QStructSD)), array(array($Test__t_QStructSD)), array($Test__t_QStructSD), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opSStructSD', 0, -1, array(array($Test__t_SStructSD)), array(array($Test__t_SStructSD)), array($Test__t_SStructSD), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opACVS', 0, -1, array(array($Test__t_ACVS)), array(array($Test__t_ACVS)), array($Test__t_ACVS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opLCVS', 0, -1, array(array($Test__t_LCVS)), array(array($Test__t_LCVS)), array($Test__t_LCVS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opACRS', 0, -1, array(array($Test__t_ACRS)), array(array($Test__t_ACRS)), array($Test__t_ACRS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opLCRS', 0, -1, array(array($Test__t_LCRS)), array(array($Test__t_LCRS)), array($Test__t_LCRS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opAEnS', 0, -1, array(array($Test__t_AEnS)), array(array($Test__t_AEnS)), array($Test__t_AEnS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opLEnS', 0, -1, array(array($Test__t_LEnS)), array(array($Test__t_LEnS)), array($Test__t_LEnS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opKEnS', 0, -1, array(array($Test__t_KEnS)), array(array($Test__t_KEnS)), array($Test__t_KEnS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opQEnS', 0, -1, array(array($Test__t_QEnS)), array(array($Test__t_QEnS)), array($Test__t_QEnS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opSEnS', 0, -1, array(array($Test__t_SEnS)), array(array($Test__t_SEnS)), array($Test__t_SEnS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opAIPrxS', 0, -1, array(array($Test__t_AIPrxS)), array(array($Test__t_AIPrxS)), array($Test__t_AIPrxS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opLIPrxS', 0, -1, array(array($Test__t_LIPrxS)), array(array($Test__t_LIPrxS)), array($Test__t_LIPrxS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opKIPrxS', 0, -1, array(array($Test__t_KIPrxS)), array(array($Test__t_KIPrxS)), array($Test__t_KIPrxS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opQIPrxS', 0, -1, array(array($Test__t_QIPrxS)), array(array($Test__t_QIPrxS)), array($Test__t_QIPrxS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opSIPrxS', 0, -1, array(array($Test__t_SIPrxS)), array(array($Test__t_SIPrxS)), array($Test__t_SIPrxS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opCustomIntS', 0, -1, array(array($Test__t_CustomIntS)), array(array($Test__t_CustomIntS)), array($Test__t_CustomIntS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opCustomCVS', 0, -1, array(array($Test__t_CustomCVS)), array(array($Test__t_CustomCVS)), array($Test__t_CustomCVS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opCustomIntSS', 0, -1, array(array($Test__t_CustomIntSS)), array(array($Test__t_CustomIntSS)), array($Test__t_CustomIntSS), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opCustomCVSS', 0, -1, array(array($Test__t_CustomCVSS)), array(array($Test__t_CustomCVSS)), array($Test__t_CustomCVSS), null);
}
?>
