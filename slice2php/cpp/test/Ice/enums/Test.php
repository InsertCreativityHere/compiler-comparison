<?php
//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.9
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


namespace Test
{
    if(!defined('\\Test\\ByteConst1'))
    {
        define(__NAMESPACE__ . '\\ByteConst1', 10);
    }
}

namespace Test
{
    if(!defined('\\Test\\ShortConst1'))
    {
        define(__NAMESPACE__ . '\\ShortConst1', 20);
    }
}

namespace Test
{
    if(!defined('\\Test\\IntConst1'))
    {
        define(__NAMESPACE__ . '\\IntConst1', 30);
    }
}

namespace Test
{
    if(!defined('\\Test\\LongConst1'))
    {
        define(__NAMESPACE__ . '\\LongConst1', 40);
    }
}

namespace Test
{
    if(!defined('\\Test\\ByteConst2'))
    {
        define(__NAMESPACE__ . '\\ByteConst2', 126);
    }
}

namespace Test
{
    if(!defined('\\Test\\ShortConst2'))
    {
        define(__NAMESPACE__ . '\\ShortConst2', 32766);
    }
}

namespace Test
{
    if(!defined('\\Test\\IntConst2'))
    {
        define(__NAMESPACE__ . '\\IntConst2', 2147483647);
    }
}

namespace Test
{
    if(!defined('\\Test\\LongConst2'))
    {
        define(__NAMESPACE__ . '\\LongConst2', 2147483646);
    }
}

namespace Test
{
    global $Test__t_ByteEnum;
    class ByteEnum
    {
        const benum1 = 0;
        const benum2 = 1;
        const benum3 = 10;
        const benum4 = 11;
        const benum5 = 20;
        const benum6 = 21;
        const benum7 = 30;
        const benum8 = 31;
        const benum9 = 40;
        const benum10 = 41;
        const benum11 = 126;
    }

    $Test__t_ByteEnum = IcePHP_defineEnum('::Test::ByteEnum', array('benum1', 0, 'benum2', 1, 'benum3', 10, 'benum4', 11, 'benum5', 20, 'benum6', 21, 'benum7', 30, 'benum8', 31, 'benum9', 40, 'benum10', 41, 'benum11', 126));
}

namespace Test
{
    global $Test__t_ByteEnumSeq;

    if(!isset($Test__t_ByteEnumSeq))
    {
        global $Test__t_ByteEnum;
        $Test__t_ByteEnumSeq = IcePHP_defineSequence('::Test::ByteEnumSeq', $Test__t_ByteEnum);
    }
}

namespace Test
{
    global $Test__t_ShortEnum;
    class ShortEnum
    {
        const senum1 = 3;
        const senum2 = 4;
        const senum3 = 10;
        const senum4 = 11;
        const senum5 = 20;
        const senum6 = 21;
        const senum7 = 30;
        const senum8 = 31;
        const senum9 = 40;
        const senum10 = 41;
        const senum11 = 32766;
    }

    $Test__t_ShortEnum = IcePHP_defineEnum('::Test::ShortEnum', array('senum1', 3, 'senum2', 4, 'senum3', 10, 'senum4', 11, 'senum5', 20, 'senum6', 21, 'senum7', 30, 'senum8', 31, 'senum9', 40, 'senum10', 41, 'senum11', 32766));
}

namespace Test
{
    global $Test__t_ShortEnumSeq;

    if(!isset($Test__t_ShortEnumSeq))
    {
        global $Test__t_ShortEnum;
        $Test__t_ShortEnumSeq = IcePHP_defineSequence('::Test::ShortEnumSeq', $Test__t_ShortEnum);
    }
}

namespace Test
{
    global $Test__t_IntEnum;
    class IntEnum
    {
        const ienum1 = 0;
        const ienum2 = 1;
        const ienum3 = 10;
        const ienum4 = 11;
        const ienum5 = 20;
        const ienum6 = 21;
        const ienum7 = 30;
        const ienum8 = 31;
        const ienum9 = 40;
        const ienum10 = 41;
        const ienum11 = 2147483647;
        const ienum12 = 2147483646;
    }

    $Test__t_IntEnum = IcePHP_defineEnum('::Test::IntEnum', array('ienum1', 0, 'ienum2', 1, 'ienum3', 10, 'ienum4', 11, 'ienum5', 20, 'ienum6', 21, 'ienum7', 30, 'ienum8', 31, 'ienum9', 40, 'ienum10', 41, 'ienum11', 2147483647, 'ienum12', 2147483646));
}

namespace Test
{
    global $Test__t_IntEnumSeq;

    if(!isset($Test__t_IntEnumSeq))
    {
        global $Test__t_IntEnum;
        $Test__t_IntEnumSeq = IcePHP_defineSequence('::Test::IntEnumSeq', $Test__t_IntEnum);
    }
}

namespace Test
{
    global $Test__t_SimpleEnum;
    class SimpleEnum
    {
        const red = 0;
        const green = 1;
        const blue = 2;
    }

    $Test__t_SimpleEnum = IcePHP_defineEnum('::Test::SimpleEnum', array('red', 0, 'green', 1, 'blue', 2));
}

namespace Test
{
    global $Test__t_SimpleEnumSeq;

    if(!isset($Test__t_SimpleEnumSeq))
    {
        global $Test__t_SimpleEnum;
        $Test__t_SimpleEnumSeq = IcePHP_defineSequence('::Test::SimpleEnumSeq', $Test__t_SimpleEnum);
    }
}

namespace Test
{
    global $Test__t_TestIntf;
    global $Test__t_TestIntfPrx;

    class TestIntfPrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::TestIntf', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::TestIntf', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::TestIntf';
        }
    }
    $Test__t_TestIntf = IcePHP_defineClass('::Test::TestIntf', '\\Test\\TestIntf', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_TestIntfPrx = IcePHP_defineProxy('::Test::TestIntf', $Ice__t_ObjectPrx, null);

    global $Test__t_ByteEnum;
    global $Test__t_ShortEnum;
    global $Test__t_IntEnum;
    global $Test__t_SimpleEnum;
    global $Test__t_ByteEnumSeq;
    global $Test__t_ShortEnumSeq;
    global $Test__t_IntEnumSeq;
    global $Test__t_SimpleEnumSeq;
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opByte', 0, 0, 0, array(array($Test__t_ByteEnum)), array(array($Test__t_ByteEnum)), array($Test__t_ByteEnum), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opShort', 0, 0, 0, array(array($Test__t_ShortEnum)), array(array($Test__t_ShortEnum)), array($Test__t_ShortEnum), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opInt', 0, 0, 0, array(array($Test__t_IntEnum)), array(array($Test__t_IntEnum)), array($Test__t_IntEnum), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opSimple', 0, 0, 0, array(array($Test__t_SimpleEnum)), array(array($Test__t_SimpleEnum)), array($Test__t_SimpleEnum), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opByteSeq', 0, 0, 0, array(array($Test__t_ByteEnumSeq)), array(array($Test__t_ByteEnumSeq)), array($Test__t_ByteEnumSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opShortSeq', 0, 0, 0, array(array($Test__t_ShortEnumSeq)), array(array($Test__t_ShortEnumSeq)), array($Test__t_ShortEnumSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opIntSeq', 0, 0, 0, array(array($Test__t_IntEnumSeq)), array(array($Test__t_IntEnumSeq)), array($Test__t_IntEnumSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opSimpleSeq', 0, 0, 0, array(array($Test__t_SimpleEnumSeq)), array(array($Test__t_SimpleEnumSeq)), array($Test__t_SimpleEnumSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'shutdown', 0, 0, 0, null, null, null, null);
}
?>
