<?php
//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file 'Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


namespace Test
{
    global $Test__t_DelayedTestIntf;
    global $Test__t_DelayedTestIntfPrx;

    class DelayedTestIntfPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::DelayedTestIntf');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::DelayedTestIntf', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::DelayedTestIntf', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::DelayedTestIntf';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_DelayedTestIntfPrx = IcePHP_defineProxy('::Test::DelayedTestIntf', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_int;
    IcePHP_defineOperation($Test__t_DelayedTestIntfPrx, 'sleep', 0, -1, array(array($IcePHP__t_int)), null, null, null);
}

namespace Test
{
    global $Test__t_TestIntf;
    global $Test__t_TestIntfPrx;

    class TestIntfPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::TestIntf');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::TestIntf', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::TestIntf', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::TestIntf';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_TestIntfPrx = IcePHP_defineProxy('::Test::TestIntf', $Ice__t_ObjectPrx, array($Test__t_DelayedTestIntfPrx));

    IcePHP_defineOperation($Test__t_TestIntfPrx, 'shutdown', 0, -1, null, null, null, null);
}

namespace Test
{
    global $Test__t_TestIntfBidir;
    global $Test__t_TestIntfBidirPrx;

    class TestIntfBidirPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::TestIntfBidir');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::TestIntfBidir', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::TestIntfBidir', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::TestIntfBidir';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_TestIntfBidirPrx = IcePHP_defineProxy('::Test::TestIntfBidir', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_bool;
    global $IcePHP__t_int;
    global $Test__t_DelayedTestIntfPrx;
    IcePHP_defineOperation($Test__t_TestIntfBidirPrx, 'makeSleep', 0, -1, array(array($IcePHP__t_bool), array($IcePHP__t_int), array($Test__t_DelayedTestIntfPrx)), null, null, null);
}
?>
