<?php
//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `TestAMD.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


namespace Test
{
    global $Test__t_BoolSeq;

    if(!isset($Test__t_BoolSeq))
    {
        global $IcePHP__t_bool;
        $Test__t_BoolSeq = IcePHP_defineSequence('::Test::BoolSeq', $IcePHP__t_bool);
    }
}

namespace Test
{
    global $Test__t_BoolList;

    if(!isset($Test__t_BoolList))
    {
        global $IcePHP__t_bool;
        $Test__t_BoolList = IcePHP_defineSequence('::Test::BoolList', $IcePHP__t_bool);
    }
}

namespace Test
{
    global $Test__t_BoolListList;

    if(!isset($Test__t_BoolListList))
    {
        global $Test__t_BoolList;
        $Test__t_BoolListList = IcePHP_defineSequence('::Test::BoolListList', $Test__t_BoolList);
    }
}

namespace Test
{
    global $Test__t_BoolListSeq;

    if(!isset($Test__t_BoolListSeq))
    {
        global $Test__t_BoolList;
        $Test__t_BoolListSeq = IcePHP_defineSequence('::Test::BoolListSeq', $Test__t_BoolList);
    }
}

namespace Test
{
    global $Test__t_BoolSeqList;

    if(!isset($Test__t_BoolSeqList))
    {
        global $Test__t_BoolSeq;
        $Test__t_BoolSeqList = IcePHP_defineSequence('::Test::BoolSeqList', $Test__t_BoolSeq);
    }
}

namespace Test
{
    global $Test__t_ByteSeq;

    if(!isset($Test__t_ByteSeq))
    {
        global $IcePHP__t_byte;
        $Test__t_ByteSeq = IcePHP_defineSequence('::Test::ByteSeq', $IcePHP__t_byte);
    }
}

namespace Test
{
    global $Test__t_ByteList;

    if(!isset($Test__t_ByteList))
    {
        global $IcePHP__t_byte;
        $Test__t_ByteList = IcePHP_defineSequence('::Test::ByteList', $IcePHP__t_byte);
    }
}

namespace Test
{
    global $Test__t_ByteListList;

    if(!isset($Test__t_ByteListList))
    {
        global $Test__t_ByteList;
        $Test__t_ByteListList = IcePHP_defineSequence('::Test::ByteListList', $Test__t_ByteList);
    }
}

namespace Test
{
    global $Test__t_ByteListSeq;

    if(!isset($Test__t_ByteListSeq))
    {
        global $Test__t_ByteList;
        $Test__t_ByteListSeq = IcePHP_defineSequence('::Test::ByteListSeq', $Test__t_ByteList);
    }
}

namespace Test
{
    global $Test__t_ByteSeqList;

    if(!isset($Test__t_ByteSeqList))
    {
        global $Test__t_ByteSeq;
        $Test__t_ByteSeqList = IcePHP_defineSequence('::Test::ByteSeqList', $Test__t_ByteSeq);
    }
}

namespace Test
{
    global $Test__t_StringSeq;

    if(!isset($Test__t_StringSeq))
    {
        global $IcePHP__t_string;
        $Test__t_StringSeq = IcePHP_defineSequence('::Test::StringSeq', $IcePHP__t_string);
    }
}

namespace Test
{
    global $Test__t_StringList;

    if(!isset($Test__t_StringList))
    {
        global $IcePHP__t_string;
        $Test__t_StringList = IcePHP_defineSequence('::Test::StringList', $IcePHP__t_string);
    }
}

namespace Test
{
    global $Test__t_StringListList;

    if(!isset($Test__t_StringListList))
    {
        global $Test__t_StringList;
        $Test__t_StringListList = IcePHP_defineSequence('::Test::StringListList', $Test__t_StringList);
    }
}

namespace Test
{
    global $Test__t_StringListSeq;

    if(!isset($Test__t_StringListSeq))
    {
        global $Test__t_StringList;
        $Test__t_StringListSeq = IcePHP_defineSequence('::Test::StringListSeq', $Test__t_StringList);
    }
}

namespace Test
{
    global $Test__t_StringSeqList;

    if(!isset($Test__t_StringSeqList))
    {
        global $Test__t_StringSeq;
        $Test__t_StringSeqList = IcePHP_defineSequence('::Test::StringSeqList', $Test__t_StringSeq);
    }
}

namespace Test
{
    global $Test__t_Fixed;
    class Fixed
    {
        public function __construct($s=0)
        {
            $this->s = $s;
        }

        public function __toString(): string
        {
            global $Test__t_Fixed;
            return IcePHP_stringify($this, $Test__t_Fixed);
        }

        public $s;
    }

    global $IcePHP__t_short;
    $Test__t_Fixed = IcePHP_defineStruct('::Test::Fixed', '\\Test\\Fixed', array(
        array('s', $IcePHP__t_short)));
}

namespace Test
{
    global $Test__t_FixedSeq;

    if(!isset($Test__t_FixedSeq))
    {
        global $Test__t_Fixed;
        $Test__t_FixedSeq = IcePHP_defineSequence('::Test::FixedSeq', $Test__t_Fixed);
    }
}

namespace Test
{
    global $Test__t_FixedList;

    if(!isset($Test__t_FixedList))
    {
        global $Test__t_Fixed;
        $Test__t_FixedList = IcePHP_defineSequence('::Test::FixedList', $Test__t_Fixed);
    }
}

namespace Test
{
    global $Test__t_FixedListList;

    if(!isset($Test__t_FixedListList))
    {
        global $Test__t_FixedList;
        $Test__t_FixedListList = IcePHP_defineSequence('::Test::FixedListList', $Test__t_FixedList);
    }
}

namespace Test
{
    global $Test__t_FixedListSeq;

    if(!isset($Test__t_FixedListSeq))
    {
        global $Test__t_FixedList;
        $Test__t_FixedListSeq = IcePHP_defineSequence('::Test::FixedListSeq', $Test__t_FixedList);
    }
}

namespace Test
{
    global $Test__t_FixedSeqList;

    if(!isset($Test__t_FixedSeqList))
    {
        global $Test__t_FixedSeq;
        $Test__t_FixedSeqList = IcePHP_defineSequence('::Test::FixedSeqList', $Test__t_FixedSeq);
    }
}

namespace Test
{
    global $Test__t_Variable;
    class Variable
    {
        public function __construct($s='', $bl=null, $ss=null)
        {
            $this->s = $s;
            $this->bl = $bl;
            $this->ss = $ss;
        }

        public function __toString(): string
        {
            global $Test__t_Variable;
            return IcePHP_stringify($this, $Test__t_Variable);
        }

        public $s;
        public $bl;
        public $ss;
    }

    global $IcePHP__t_string;
    global $Test__t_BoolList;
    global $Test__t_StringSeq;
    $Test__t_Variable = IcePHP_defineStruct('::Test::Variable', '\\Test\\Variable', array(
        array('s', $IcePHP__t_string),
        array('bl', $Test__t_BoolList),
        array('ss', $Test__t_StringSeq)));
}

namespace Test
{
    global $Test__t_VariableSeq;

    if(!isset($Test__t_VariableSeq))
    {
        global $Test__t_Variable;
        $Test__t_VariableSeq = IcePHP_defineSequence('::Test::VariableSeq', $Test__t_Variable);
    }
}

namespace Test
{
    global $Test__t_VariableList;

    if(!isset($Test__t_VariableList))
    {
        global $Test__t_Variable;
        $Test__t_VariableList = IcePHP_defineSequence('::Test::VariableList', $Test__t_Variable);
    }
}

namespace Test
{
    global $Test__t_VariableListList;

    if(!isset($Test__t_VariableListList))
    {
        global $Test__t_VariableList;
        $Test__t_VariableListList = IcePHP_defineSequence('::Test::VariableListList', $Test__t_VariableList);
    }
}

namespace Test
{
    global $Test__t_VariableListSeq;

    if(!isset($Test__t_VariableListSeq))
    {
        global $Test__t_VariableList;
        $Test__t_VariableListSeq = IcePHP_defineSequence('::Test::VariableListSeq', $Test__t_VariableList);
    }
}

namespace Test
{
    global $Test__t_VariableSeqList;

    if(!isset($Test__t_VariableSeqList))
    {
        global $Test__t_VariableSeq;
        $Test__t_VariableSeqList = IcePHP_defineSequence('::Test::VariableSeqList', $Test__t_VariableSeq);
    }
}

namespace Test
{
    global $Test__t_StringStringDict;

    if(!isset($Test__t_StringStringDict))
    {
        global $IcePHP__t_string;
        global $IcePHP__t_string;
        $Test__t_StringStringDict = IcePHP_defineDictionary('::Test::StringStringDict', $IcePHP__t_string, $IcePHP__t_string);
    }
}

namespace Test
{
    global $Test__t_StringStringDictSeq;

    if(!isset($Test__t_StringStringDictSeq))
    {
        global $Test__t_StringStringDict;
        $Test__t_StringStringDictSeq = IcePHP_defineSequence('::Test::StringStringDictSeq', $Test__t_StringStringDict);
    }
}

namespace Test
{
    global $Test__t_StringStringDictList;

    if(!isset($Test__t_StringStringDictList))
    {
        global $Test__t_StringStringDict;
        $Test__t_StringStringDictList = IcePHP_defineSequence('::Test::StringStringDictList', $Test__t_StringStringDict);
    }
}

namespace Test
{
    global $Test__t_StringStringDictListList;

    if(!isset($Test__t_StringStringDictListList))
    {
        global $Test__t_StringStringDictList;
        $Test__t_StringStringDictListList = IcePHP_defineSequence('::Test::StringStringDictListList', $Test__t_StringStringDictList);
    }
}

namespace Test
{
    global $Test__t_StringStringDictListSeq;

    if(!isset($Test__t_StringStringDictListSeq))
    {
        global $Test__t_StringStringDictList;
        $Test__t_StringStringDictListSeq = IcePHP_defineSequence('::Test::StringStringDictListSeq', $Test__t_StringStringDictList);
    }
}

namespace Test
{
    global $Test__t_StringStringDictSeqList;

    if(!isset($Test__t_StringStringDictSeqList))
    {
        global $Test__t_StringStringDictSeq;
        $Test__t_StringStringDictSeqList = IcePHP_defineSequence('::Test::StringStringDictSeqList', $Test__t_StringStringDictSeq);
    }
}

namespace Test
{
    global $Test__t_E;
    class E
    {
        const E1 = 0;
        const E2 = 1;
        const E3 = 2;
    }

    $Test__t_E = IcePHP_defineEnum('::Test::E', array('E1', 0, 'E2', 1, 'E3', 2));
}

namespace Test
{
    global $Test__t_ESeq;

    if(!isset($Test__t_ESeq))
    {
        global $Test__t_E;
        $Test__t_ESeq = IcePHP_defineSequence('::Test::ESeq', $Test__t_E);
    }
}

namespace Test
{
    global $Test__t_EList;

    if(!isset($Test__t_EList))
    {
        global $Test__t_E;
        $Test__t_EList = IcePHP_defineSequence('::Test::EList', $Test__t_E);
    }
}

namespace Test
{
    global $Test__t_EListList;

    if(!isset($Test__t_EListList))
    {
        global $Test__t_EList;
        $Test__t_EListList = IcePHP_defineSequence('::Test::EListList', $Test__t_EList);
    }
}

namespace Test
{
    global $Test__t_EListSeq;

    if(!isset($Test__t_EListSeq))
    {
        global $Test__t_EList;
        $Test__t_EListSeq = IcePHP_defineSequence('::Test::EListSeq', $Test__t_EList);
    }
}

namespace Test
{
    global $Test__t_ESeqList;

    if(!isset($Test__t_ESeqList))
    {
        global $Test__t_ESeq;
        $Test__t_ESeqList = IcePHP_defineSequence('::Test::ESeqList', $Test__t_ESeq);
    }
}

namespace Test
{
    global $Test__t_C;
    class C extends \Ice\Value
    {
        public function __construct()
        {
        }

        public function ice_id()
        {
            return '::Test::C';
        }

        public static function ice_staticId()
        {
            return '::Test::C';
        }

        public function __toString(): string
        {
            global $Test__t_C;
            return IcePHP_stringify($this, $Test__t_C);
        }
    }

    global $Ice__t_Value;
    $Test__t_C = IcePHP_defineClass('::Test::C', '\\Test\\C', -1, false, $Ice__t_Value, null);
}

namespace Test
{
    global $Test__t_CSeq;

    if(!isset($Test__t_CSeq))
    {
        global $Test__t_C;
        $Test__t_CSeq = IcePHP_defineSequence('::Test::CSeq', $Test__t_C);
    }
}

namespace Test
{
    global $Test__t_CList;

    if(!isset($Test__t_CList))
    {
        global $Test__t_C;
        $Test__t_CList = IcePHP_defineSequence('::Test::CList', $Test__t_C);
    }
}

namespace Test
{
    global $Test__t_CListList;

    if(!isset($Test__t_CListList))
    {
        global $Test__t_CList;
        $Test__t_CListList = IcePHP_defineSequence('::Test::CListList', $Test__t_CList);
    }
}

namespace Test
{
    global $Test__t_CListSeq;

    if(!isset($Test__t_CListSeq))
    {
        global $Test__t_CList;
        $Test__t_CListSeq = IcePHP_defineSequence('::Test::CListSeq', $Test__t_CList);
    }
}

namespace Test
{
    global $Test__t_CSeqList;

    if(!isset($Test__t_CSeqList))
    {
        global $Test__t_CSeq;
        $Test__t_CSeqList = IcePHP_defineSequence('::Test::CSeqList', $Test__t_CSeq);
    }
}

namespace Test
{
    global $Test__t_D;
    global $Test__t_DPrx;

    class DPrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::D', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::D', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::D';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_DPrx = IcePHP_defineProxy('::Test::D', $Ice__t_ObjectPrx, null);
}

namespace Test
{
    global $Test__t_DPrxSeq;

    if(!isset($Test__t_DPrxSeq))
    {
        global $Test__t_DPrx;
        $Test__t_DPrxSeq = IcePHP_defineSequence('::Test::DPrxSeq', $Test__t_DPrx);
    }
}

namespace Test
{
    global $Test__t_DPrxList;

    if(!isset($Test__t_DPrxList))
    {
        global $Test__t_DPrx;
        $Test__t_DPrxList = IcePHP_defineSequence('::Test::DPrxList', $Test__t_DPrx);
    }
}

namespace Test
{
    global $Test__t_DPrxListList;

    if(!isset($Test__t_DPrxListList))
    {
        global $Test__t_DPrxList;
        $Test__t_DPrxListList = IcePHP_defineSequence('::Test::DPrxListList', $Test__t_DPrxList);
    }
}

namespace Test
{
    global $Test__t_DPrxListSeq;

    if(!isset($Test__t_DPrxListSeq))
    {
        global $Test__t_DPrxList;
        $Test__t_DPrxListSeq = IcePHP_defineSequence('::Test::DPrxListSeq', $Test__t_DPrxList);
    }
}

namespace Test
{
    global $Test__t_DPrxSeqList;

    if(!isset($Test__t_DPrxSeqList))
    {
        global $Test__t_DPrxSeq;
        $Test__t_DPrxSeqList = IcePHP_defineSequence('::Test::DPrxSeqList', $Test__t_DPrxSeq);
    }
}

namespace Test
{
    global $Test__t_DoubleSeq;

    if(!isset($Test__t_DoubleSeq))
    {
        global $IcePHP__t_double;
        $Test__t_DoubleSeq = IcePHP_defineSequence('::Test::DoubleSeq', $IcePHP__t_double);
    }
}

namespace Test
{
    global $Test__t_ShortSeq;

    if(!isset($Test__t_ShortSeq))
    {
        global $IcePHP__t_short;
        $Test__t_ShortSeq = IcePHP_defineSequence('::Test::ShortSeq', $IcePHP__t_short);
    }
}

namespace Test
{
    global $Test__t_IntStringDict;

    if(!isset($Test__t_IntStringDict))
    {
        global $IcePHP__t_int;
        global $IcePHP__t_string;
        $Test__t_IntStringDict = IcePHP_defineDictionary('::Test::IntStringDict', $IcePHP__t_int, $IcePHP__t_string);
    }
}

namespace Test
{
    global $Test__t_LongLongDict;

    if(!isset($Test__t_LongLongDict))
    {
        global $IcePHP__t_long;
        global $IcePHP__t_long;
        $Test__t_LongLongDict = IcePHP_defineDictionary('::Test::LongLongDict', $IcePHP__t_long, $IcePHP__t_long);
    }
}

namespace Test
{
    global $Test__t_StringIntDict;

    if(!isset($Test__t_StringIntDict))
    {
        global $IcePHP__t_string;
        global $IcePHP__t_int;
        $Test__t_StringIntDict = IcePHP_defineDictionary('::Test::StringIntDict', $IcePHP__t_string, $IcePHP__t_int);
    }
}

namespace Test
{
    global $Test__t_DictClass;
    class DictClass extends \Ice\Value
    {
        public function __construct($isdict=null)
        {
            $this->isdict = $isdict;
        }

        public function ice_id()
        {
            return '::Test::DictClass';
        }

        public static function ice_staticId()
        {
            return '::Test::DictClass';
        }

        public function __toString(): string
        {
            global $Test__t_DictClass;
            return IcePHP_stringify($this, $Test__t_DictClass);
        }

        public $isdict;
    }

    global $Ice__t_Value;
    global $Test__t_IntStringDict;
    $Test__t_DictClass = IcePHP_defineClass('::Test::DictClass', '\\Test\\DictClass', -1, false, $Ice__t_Value, array(
        array('isdict', $Test__t_IntStringDict, false, 0)));
}

namespace Test
{
    global $Test__t_BoolBuffer;

    if(!isset($Test__t_BoolBuffer))
    {
        global $IcePHP__t_bool;
        $Test__t_BoolBuffer = IcePHP_defineSequence('::Test::BoolBuffer', $IcePHP__t_bool);
    }
}

namespace Test
{
    global $Test__t_ShortBuffer;

    if(!isset($Test__t_ShortBuffer))
    {
        global $IcePHP__t_short;
        $Test__t_ShortBuffer = IcePHP_defineSequence('::Test::ShortBuffer', $IcePHP__t_short);
    }
}

namespace Test
{
    global $Test__t_IntBuffer;

    if(!isset($Test__t_IntBuffer))
    {
        global $IcePHP__t_int;
        $Test__t_IntBuffer = IcePHP_defineSequence('::Test::IntBuffer', $IcePHP__t_int);
    }
}

namespace Test
{
    global $Test__t_LongBuffer;

    if(!isset($Test__t_LongBuffer))
    {
        global $IcePHP__t_long;
        $Test__t_LongBuffer = IcePHP_defineSequence('::Test::LongBuffer', $IcePHP__t_long);
    }
}

namespace Test
{
    global $Test__t_FloatBuffer;

    if(!isset($Test__t_FloatBuffer))
    {
        global $IcePHP__t_float;
        $Test__t_FloatBuffer = IcePHP_defineSequence('::Test::FloatBuffer', $IcePHP__t_float);
    }
}

namespace Test
{
    global $Test__t_DoubleBuffer;

    if(!isset($Test__t_DoubleBuffer))
    {
        global $IcePHP__t_double;
        $Test__t_DoubleBuffer = IcePHP_defineSequence('::Test::DoubleBuffer', $IcePHP__t_double);
    }
}

namespace Test
{
    global $Test__t_ByteBuffer;

    if(!isset($Test__t_ByteBuffer))
    {
        global $IcePHP__t_byte;
        $Test__t_ByteBuffer = IcePHP_defineSequence('::Test::ByteBuffer', $IcePHP__t_byte);
    }
}

namespace Test
{
    global $Test__t_BufferStruct;
    class BufferStruct
    {
        public function __construct($byteBuf=null, $boolBuf=null, $shortBuf=null, $intBuf=null, $longBuf=null, $floatBuf=null, $doubleBuf=null)
        {
            $this->byteBuf = $byteBuf;
            $this->boolBuf = $boolBuf;
            $this->shortBuf = $shortBuf;
            $this->intBuf = $intBuf;
            $this->longBuf = $longBuf;
            $this->floatBuf = $floatBuf;
            $this->doubleBuf = $doubleBuf;
        }

        public function __toString(): string
        {
            global $Test__t_BufferStruct;
            return IcePHP_stringify($this, $Test__t_BufferStruct);
        }

        public $byteBuf;
        public $boolBuf;
        public $shortBuf;
        public $intBuf;
        public $longBuf;
        public $floatBuf;
        public $doubleBuf;
    }

    global $Test__t_ByteBuffer;
    global $Test__t_BoolBuffer;
    global $Test__t_ShortBuffer;
    global $Test__t_IntBuffer;
    global $Test__t_LongBuffer;
    global $Test__t_FloatBuffer;
    global $Test__t_DoubleBuffer;
    $Test__t_BufferStruct = IcePHP_defineStruct('::Test::BufferStruct', '\\Test\\BufferStruct', array(
        array('byteBuf', $Test__t_ByteBuffer),
        array('boolBuf', $Test__t_BoolBuffer),
        array('shortBuf', $Test__t_ShortBuffer),
        array('intBuf', $Test__t_IntBuffer),
        array('longBuf', $Test__t_LongBuffer),
        array('floatBuf', $Test__t_FloatBuffer),
        array('doubleBuf', $Test__t_DoubleBuffer)));
}

namespace Test
{
    global $Test__t_TestIntf;
    global $Test__t_TestIntfPrx;

    class TestIntfPrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::TestIntf', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::TestIntf', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::TestIntf';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_TestIntfPrx = IcePHP_defineProxy('::Test::TestIntf', $Ice__t_ObjectPrx, null);

    global $Test__t_ShortSeq;
    global $IcePHP__t_bool;
    global $Test__t_DoubleSeq;
    global $Test__t_BoolSeq;
    global $Test__t_ByteList;
    global $Test__t_VariableList;
    global $Test__t_BoolList;
    global $Test__t_ByteSeq;
    global $Test__t_StringSeq;
    global $Test__t_StringList;
    global $Test__t_FixedSeq;
    global $Test__t_FixedList;
    global $Test__t_VariableSeq;
    global $Test__t_StringStringDictSeq;
    global $Test__t_StringStringDictList;
    global $Test__t_ESeq;
    global $Test__t_EList;
    global $Test__t_DPrxSeq;
    global $Test__t_DPrxList;
    global $Test__t_CSeq;
    global $Test__t_CList;
    global $Test__t_IntStringDict;
    global $Test__t_StringIntDict;
    global $Test__t_LongLongDict;
    global $Test__t_ShortBuffer;
    global $Test__t_BufferStruct;
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opShortArray', 0, 0, array(array($Test__t_ShortSeq)), array(array($Test__t_ShortSeq)), array($Test__t_ShortSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opDoubleArray', 0, 0, array(array($IcePHP__t_bool), array($Test__t_DoubleSeq)), array(array($Test__t_DoubleSeq)), array($Test__t_DoubleSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opBoolArray', 0, 0, array(array($Test__t_BoolSeq)), array(array($Test__t_BoolSeq)), array($Test__t_BoolSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opByteArray', 0, 0, array(array($Test__t_ByteList)), array(array($Test__t_ByteList)), array($Test__t_ByteList), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opVariableArray', 0, 0, array(array($Test__t_VariableList)), array(array($Test__t_VariableList)), array($Test__t_VariableList), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opBoolSeq', 0, 0, array(array($Test__t_BoolSeq)), array(array($Test__t_BoolSeq)), array($Test__t_BoolSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opBoolList', 0, 0, array(array($Test__t_BoolList)), array(array($Test__t_BoolList)), array($Test__t_BoolList), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opByteSeq', 0, 0, array(array($Test__t_ByteSeq)), array(array($Test__t_ByteSeq)), array($Test__t_ByteSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opByteList', 0, 0, array(array($Test__t_ByteList)), array(array($Test__t_ByteList)), array($Test__t_ByteList), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opMyByteSeq', 0, 0, array(array($Test__t_ByteSeq)), array(array($Test__t_ByteSeq)), array($Test__t_ByteSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opStringSeq', 0, 0, array(array($Test__t_StringSeq)), array(array($Test__t_StringSeq)), array($Test__t_StringSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opStringList', 0, 0, array(array($Test__t_StringList)), array(array($Test__t_StringList)), array($Test__t_StringList), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opFixedSeq', 0, 0, array(array($Test__t_FixedSeq)), array(array($Test__t_FixedSeq)), array($Test__t_FixedSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opFixedList', 0, 0, array(array($Test__t_FixedList)), array(array($Test__t_FixedList)), array($Test__t_FixedList), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opVariableSeq', 0, 0, array(array($Test__t_VariableSeq)), array(array($Test__t_VariableSeq)), array($Test__t_VariableSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opVariableList', 0, 0, array(array($Test__t_VariableList)), array(array($Test__t_VariableList)), array($Test__t_VariableList), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opStringStringDictSeq', 0, 0, array(array($Test__t_StringStringDictSeq)), array(array($Test__t_StringStringDictSeq)), array($Test__t_StringStringDictSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opStringStringDictList', 0, 0, array(array($Test__t_StringStringDictList)), array(array($Test__t_StringStringDictList)), array($Test__t_StringStringDictList), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opESeq', 0, 0, array(array($Test__t_ESeq)), array(array($Test__t_ESeq)), array($Test__t_ESeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opEList', 0, 0, array(array($Test__t_EList)), array(array($Test__t_EList)), array($Test__t_EList), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opDPrxSeq', 0, 0, array(array($Test__t_DPrxSeq)), array(array($Test__t_DPrxSeq)), array($Test__t_DPrxSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opDPrxList', 0, 0, array(array($Test__t_DPrxList)), array(array($Test__t_DPrxList)), array($Test__t_DPrxList), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opCSeq', 0, 0, array(array($Test__t_CSeq)), array(array($Test__t_CSeq)), array($Test__t_CSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opCList', 0, 0, array(array($Test__t_CList)), array(array($Test__t_CList)), array($Test__t_CList), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opOutArrayByteSeq', 0, 0, array(array($Test__t_ByteSeq)), array(array($Test__t_ByteSeq)), null, null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opIntStringDict', 0, 0, array(array($Test__t_IntStringDict)), array(array($Test__t_IntStringDict)), array($Test__t_IntStringDict), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opVarDict', 0, 0, array(array($Test__t_StringIntDict)), array(array($Test__t_StringIntDict)), array($Test__t_LongLongDict), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opShortBuffer', 0, 0, array(array($Test__t_ShortBuffer)), array(array($Test__t_ShortBuffer)), array($Test__t_ShortBuffer), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opBoolBuffer', 0, 0, array(array($Test__t_BoolSeq)), array(array($Test__t_BoolSeq)), array($Test__t_BoolSeq), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'opBufferStruct', 0, 0, array(array($Test__t_BufferStruct)), null, array($Test__t_BufferStruct), null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'shutdown', 0, 0, null, null, null, null);
}
?>
