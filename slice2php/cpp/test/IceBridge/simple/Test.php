<?php
// Copyright (c) ZeroC, Inc.
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file 'Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


namespace Test
{
    global $Test__t_Callback;
    global $Test__t_CallbackPrx;
    $Test__t_CallbackPrx = IcePHP_declareProxy('::Test::Callback');
}

namespace Test
{
    global $Test__t_Callback;
    global $Test__t_CallbackPrx;

    class CallbackPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::Callback');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::Callback', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::Callback', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::Callback';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_CallbackPrx = IcePHP_defineProxy('::Test::Callback', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_int;
    IcePHP_defineOperation($Test__t_CallbackPrx, 'ping', 0, -1, null, null, null, null);
    IcePHP_defineOperation($Test__t_CallbackPrx, 'getCount', 0, -1, null, null, array($IcePHP__t_int), null);
    IcePHP_defineOperation($Test__t_CallbackPrx, 'datagram', 0, -1, null, null, null, null);
    IcePHP_defineOperation($Test__t_CallbackPrx, 'getDatagramCount', 0, -1, null, null, array($IcePHP__t_int), null);
}

namespace Test
{
    global $Test__t_MyClass;
    global $Test__t_MyClassPrx;
    $Test__t_MyClassPrx = IcePHP_declareProxy('::Test::MyClass');
}

namespace Test
{
    global $Test__t_MyClass;
    global $Test__t_MyClassPrx;

    class MyClassPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::MyClass');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::MyClass', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::MyClass', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::MyClass';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_MyClassPrx = IcePHP_defineProxy('::Test::MyClass', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_int;
    global $IcePHP__t_string;
    global $IcePHP__t_bool;
    IcePHP_defineOperation($Test__t_MyClassPrx, 'callCallback', 0, -1, null, null, null, null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'getCallbackCount', 0, -1, null, null, array($IcePHP__t_int), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'incCounter', 0, -1, array(array($IcePHP__t_int)), null, null, null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'waitCounter', 0, -1, array(array($IcePHP__t_int)), null, null, null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'getConnectionCount', 0, -1, null, null, array($IcePHP__t_int), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'getConnectionInfo', 0, -1, null, null, array($IcePHP__t_string), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'closeConnection', 0, -1, array(array($IcePHP__t_bool)), null, null, null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'datagram', 0, -1, null, null, null, null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'getDatagramCount', 0, -1, null, null, array($IcePHP__t_int), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'callDatagramCallback', 0, -1, null, null, null, null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'getCallbackDatagramCount', 0, -1, null, null, array($IcePHP__t_int), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'shutdown', 0, -1, null, null, null, null);
}
?>
