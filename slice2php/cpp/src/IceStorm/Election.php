<?php
//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.9
//
// <auto-generated>
//
// Generated from file `Election.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


namespace
{
    require_once 'Ice/Identity.php';
    require_once 'Ice/BuiltinSequences.php';
    require_once 'SubscriberRecord.php';
    require_once 'LLURecord.php';
}

namespace IceStormElection
{
    global $IceStormElection__t_TopicContent;
    class TopicContent
    {
        public function __construct($id=null, $records=null)
        {
            $this->id = is_null($id) ? new \Ice\Identity : $id;
            $this->records = $records;
        }

        public function __toString(): string
        {
            global $IceStormElection__t_TopicContent;
            return IcePHP_stringify($this, $IceStormElection__t_TopicContent);
        }

        public $id;
        public $records;
    }

    global $Ice__t_Identity;
    global $IceStorm__t_SubscriberRecordSeq;
    $IceStormElection__t_TopicContent = IcePHP_defineStruct('::IceStormElection::TopicContent', '\\IceStormElection\\TopicContent', array(
        array('id', $Ice__t_Identity),
        array('records', $IceStorm__t_SubscriberRecordSeq)));
}

namespace IceStormElection
{
    global $IceStormElection__t_TopicContentSeq;

    if(!isset($IceStormElection__t_TopicContentSeq))
    {
        global $IceStormElection__t_TopicContent;
        $IceStormElection__t_TopicContentSeq = IcePHP_defineSequence('::IceStormElection::TopicContentSeq', $IceStormElection__t_TopicContent);
    }
}

namespace IceStormElection
{
    global $IceStormElection__t_ObserverInconsistencyException;
    class ObserverInconsistencyException extends \Ice\UserException
    {
        public function __construct($reason='')
        {
            $this->reason = $reason;
        }

        public function ice_id()
        {
            return '::IceStormElection::ObserverInconsistencyException';
        }

        public function __toString(): string
        {
            global $IceStormElection__t_ObserverInconsistencyException;
            return IcePHP_stringifyException($this, $IceStormElection__t_ObserverInconsistencyException);
        }

        public $reason;
    }
    global $IcePHP__t_string;

    $IceStormElection__t_ObserverInconsistencyException = IcePHP_defineException('::IceStormElection::ObserverInconsistencyException', '\\IceStormElection\\ObserverInconsistencyException', false, null, array(
        array('reason', $IcePHP__t_string, false, 0)));
}

namespace IceStormElection
{
    global $IceStormElection__t_ReplicaObserver;
    global $IceStormElection__t_ReplicaObserverPrx;

    class ReplicaObserverPrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::IceStormElection::ReplicaObserver', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::IceStormElection::ReplicaObserver', $facet);
        }

        public static function ice_staticId()
        {
            return '::IceStormElection::ReplicaObserver';
        }
    }
    $IceStormElection__t_ReplicaObserver = IcePHP_defineClass('::IceStormElection::ReplicaObserver', '\\IceStormElection\\ReplicaObserver', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $IceStormElection__t_ReplicaObserverPrx = IcePHP_defineProxy('::IceStormElection::ReplicaObserver', $Ice__t_ObjectPrx, null);

    global $IceStormElection__t_LogUpdate;
    global $IceStormElection__t_TopicContentSeq;
    global $IcePHP__t_string;
    global $IceStorm__t_SubscriberRecord;
    global $Ice__t_IdentitySeq;
    IcePHP_defineOperation($IceStormElection__t_ReplicaObserverPrx, 'init', 0, 0, 0, array(array($IceStormElection__t_LogUpdate), array($IceStormElection__t_TopicContentSeq)), null, null, array($IceStormElection__t_ObserverInconsistencyException));
    IcePHP_defineOperation($IceStormElection__t_ReplicaObserverPrx, 'createTopic', 0, 0, 0, array(array($IceStormElection__t_LogUpdate), array($IcePHP__t_string)), null, null, array($IceStormElection__t_ObserverInconsistencyException));
    IcePHP_defineOperation($IceStormElection__t_ReplicaObserverPrx, 'destroyTopic', 0, 0, 0, array(array($IceStormElection__t_LogUpdate), array($IcePHP__t_string)), null, null, array($IceStormElection__t_ObserverInconsistencyException));
    IcePHP_defineOperation($IceStormElection__t_ReplicaObserverPrx, 'addSubscriber', 0, 0, 0, array(array($IceStormElection__t_LogUpdate), array($IcePHP__t_string), array($IceStorm__t_SubscriberRecord)), null, null, array($IceStormElection__t_ObserverInconsistencyException));
    IcePHP_defineOperation($IceStormElection__t_ReplicaObserverPrx, 'removeSubscriber', 0, 0, 0, array(array($IceStormElection__t_LogUpdate), array($IcePHP__t_string), array($Ice__t_IdentitySeq)), null, null, array($IceStormElection__t_ObserverInconsistencyException));
}

namespace IceStormElection
{
    global $IceStormElection__t_TopicManagerSync;
    global $IceStormElection__t_TopicManagerSyncPrx;

    class TopicManagerSyncPrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::IceStormElection::TopicManagerSync', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::IceStormElection::TopicManagerSync', $facet);
        }

        public static function ice_staticId()
        {
            return '::IceStormElection::TopicManagerSync';
        }
    }
    $IceStormElection__t_TopicManagerSync = IcePHP_defineClass('::IceStormElection::TopicManagerSync', '\\IceStormElection\\TopicManagerSync', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $IceStormElection__t_TopicManagerSyncPrx = IcePHP_defineProxy('::IceStormElection::TopicManagerSync', $Ice__t_ObjectPrx, null);

    global $IceStormElection__t_LogUpdate;
    global $IceStormElection__t_TopicContentSeq;
    IcePHP_defineOperation($IceStormElection__t_TopicManagerSyncPrx, 'getContent', 0, 0, 0, null, array(array($IceStormElection__t_LogUpdate), array($IceStormElection__t_TopicContentSeq)), null, null);
}

namespace IceStormElection
{
    global $IceStormElection__t_NodeState;
    class NodeState
    {
        const NodeStateInactive = 0;
        const NodeStateElection = 1;
        const NodeStateReorganization = 2;
        const NodeStateNormal = 3;
    }

    $IceStormElection__t_NodeState = IcePHP_defineEnum('::IceStormElection::NodeState', array('NodeStateInactive', 0, 'NodeStateElection', 1, 'NodeStateReorganization', 2, 'NodeStateNormal', 3));
}

namespace IceStormElection
{
    global $IceStormElection__t_Node;
    global $IceStormElection__t_NodePrx;
    if(!isset($IceStormElection__t_Node))
    {
        $IceStormElection__t_Node = IcePHP_declareClass('::IceStormElection::Node');
        $IceStormElection__t_NodePrx = IcePHP_declareProxy('::IceStormElection::Node');
    }
}

namespace IceStormElection
{
    global $IceStormElection__t_NodeInfo;
    class NodeInfo
    {
        public function __construct($id=0, $n=null)
        {
            $this->id = $id;
            $this->n = $n;
        }

        public function __toString(): string
        {
            global $IceStormElection__t_NodeInfo;
            return IcePHP_stringify($this, $IceStormElection__t_NodeInfo);
        }

        public $id;
        public $n;
    }

    global $IcePHP__t_int;
    global $IceStormElection__t_NodePrx;
    $IceStormElection__t_NodeInfo = IcePHP_defineStruct('::IceStormElection::NodeInfo', '\\IceStormElection\\NodeInfo', array(
        array('id', $IcePHP__t_int),
        array('n', $IceStormElection__t_NodePrx)));
}

namespace IceStormElection
{
    global $IceStormElection__t_NodeInfoSeq;

    if(!isset($IceStormElection__t_NodeInfoSeq))
    {
        global $IceStormElection__t_NodeInfo;
        $IceStormElection__t_NodeInfoSeq = IcePHP_defineSequence('::IceStormElection::NodeInfoSeq', $IceStormElection__t_NodeInfo);
    }
}

namespace IceStormElection
{
    global $IceStormElection__t_GroupInfo;
    class GroupInfo
    {
        public function __construct($id=0, $llu=null)
        {
            $this->id = $id;
            $this->llu = is_null($llu) ? new \IceStormElection\LogUpdate : $llu;
        }

        public function __toString(): string
        {
            global $IceStormElection__t_GroupInfo;
            return IcePHP_stringify($this, $IceStormElection__t_GroupInfo);
        }

        public $id;
        public $llu;
    }

    global $IcePHP__t_int;
    global $IceStormElection__t_LogUpdate;
    $IceStormElection__t_GroupInfo = IcePHP_defineStruct('::IceStormElection::GroupInfo', '\\IceStormElection\\GroupInfo', array(
        array('id', $IcePHP__t_int),
        array('llu', $IceStormElection__t_LogUpdate)));
}

namespace IceStormElection
{
    global $IceStormElection__t_GroupInfoSeq;

    if(!isset($IceStormElection__t_GroupInfoSeq))
    {
        global $IceStormElection__t_GroupInfo;
        $IceStormElection__t_GroupInfoSeq = IcePHP_defineSequence('::IceStormElection::GroupInfoSeq', $IceStormElection__t_GroupInfo);
    }
}

namespace IceStormElection
{
    global $IceStormElection__t_QueryInfo;
    class QueryInfo
    {
        public function __construct($id=0, $coord=0, $group='', $replica=null, $state=\IceStormElection\NodeState::NodeStateInactive, $up=null, $max=0)
        {
            $this->id = $id;
            $this->coord = $coord;
            $this->group = $group;
            $this->replica = $replica;
            $this->state = $state;
            $this->up = $up;
            $this->max = $max;
        }

        public function __toString(): string
        {
            global $IceStormElection__t_QueryInfo;
            return IcePHP_stringify($this, $IceStormElection__t_QueryInfo);
        }

        public $id;
        public $coord;
        public $group;
        public $replica;
        public $state;
        public $up;
        public $max;
    }

    global $IcePHP__t_int;
    global $IcePHP__t_string;
    global $Ice__t_ObjectPrx;
    global $IceStormElection__t_NodeState;
    global $IceStormElection__t_GroupInfoSeq;
    $IceStormElection__t_QueryInfo = IcePHP_defineStruct('::IceStormElection::QueryInfo', '\\IceStormElection\\QueryInfo', array(
        array('id', $IcePHP__t_int),
        array('coord', $IcePHP__t_int),
        array('group', $IcePHP__t_string),
        array('replica', $Ice__t_ObjectPrx),
        array('state', $IceStormElection__t_NodeState),
        array('up', $IceStormElection__t_GroupInfoSeq),
        array('max', $IcePHP__t_int)));
}

namespace IceStormElection
{
    global $IceStormElection__t_Node;
    global $IceStormElection__t_NodePrx;

    class NodePrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::IceStormElection::Node', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::IceStormElection::Node', $facet);
        }

        public static function ice_staticId()
        {
            return '::IceStormElection::Node';
        }
    }
    $IceStormElection__t_Node = IcePHP_defineClass('::IceStormElection::Node', '\\IceStormElection\\Node', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $IceStormElection__t_NodePrx = IcePHP_defineProxy('::IceStormElection::Node', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_int;
    global $IcePHP__t_string;
    global $Ice__t_ObjectPrx;
    global $IcePHP__t_long;
    global $Ice__t_IntSeq;
    global $IceStormElection__t_LogUpdate;
    global $IcePHP__t_bool;
    global $IceStormElection__t_NodeInfoSeq;
    global $IceStormElection__t_QueryInfo;
    IcePHP_defineOperation($IceStormElection__t_NodePrx, 'invitation', 0, 0, 0, array(array($IcePHP__t_int), array($IcePHP__t_string)), null, null, null);
    IcePHP_defineOperation($IceStormElection__t_NodePrx, 'ready', 0, 0, 0, array(array($IcePHP__t_int), array($IcePHP__t_string), array($Ice__t_ObjectPrx), array($IcePHP__t_int), array($IcePHP__t_long)), null, null, null);
    IcePHP_defineOperation($IceStormElection__t_NodePrx, 'accept', 0, 0, 0, array(array($IcePHP__t_int), array($IcePHP__t_string), array($Ice__t_IntSeq), array($Ice__t_ObjectPrx), array($IceStormElection__t_LogUpdate), array($IcePHP__t_int)), null, null, null);
    IcePHP_defineOperation($IceStormElection__t_NodePrx, 'areYouCoordinator', 2, 2, 0, null, null, array($IcePHP__t_bool), null);
    IcePHP_defineOperation($IceStormElection__t_NodePrx, 'areYouThere', 2, 2, 0, array(array($IcePHP__t_string), array($IcePHP__t_int)), null, array($IcePHP__t_bool), null);
    IcePHP_defineOperation($IceStormElection__t_NodePrx, 'sync', 2, 2, 0, null, null, array($Ice__t_ObjectPrx), null);
    IcePHP_defineOperation($IceStormElection__t_NodePrx, 'nodes', 2, 2, 0, null, null, array($IceStormElection__t_NodeInfoSeq), null);
    IcePHP_defineOperation($IceStormElection__t_NodePrx, 'query', 2, 2, 0, null, null, array($IceStormElection__t_QueryInfo), null);
}
?>
