<?php
//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.9
//
// <auto-generated>
//
// Generated from file `TestAMD.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


namespace Test
{
    global $Test__t_SerialSmall;

    if(!isset($Test__t_SerialSmall))
    {
        global $IcePHP__t_byte;
        $Test__t_SerialSmall = IcePHP_defineSequence('::Test::SerialSmall', $IcePHP__t_byte);
    }
}

namespace Test
{
    global $Test__t_SerialLarge;

    if(!isset($Test__t_SerialLarge))
    {
        global $IcePHP__t_byte;
        $Test__t_SerialLarge = IcePHP_defineSequence('::Test::SerialLarge', $IcePHP__t_byte);
    }
}

namespace Test
{
    global $Test__t_SerialStruct;

    if(!isset($Test__t_SerialStruct))
    {
        global $IcePHP__t_byte;
        $Test__t_SerialStruct = IcePHP_defineSequence('::Test::SerialStruct', $IcePHP__t_byte);
    }
}

namespace Test
{
    global $Test__t_MyClass;
    global $Test__t_MyClassPrx;

    class MyClassPrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Test::MyClass', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::MyClass', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::MyClass';
        }
    }
    $Test__t_MyClass = IcePHP_defineClass('::Test::MyClass', '\\Test\\MyClass', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Test__t_MyClassPrx = IcePHP_defineProxy('::Test::MyClass', $Ice__t_ObjectPrx, null);

    global $Test__t_SerialSmall;
    global $Test__t_SerialLarge;
    global $Test__t_SerialStruct;
    IcePHP_defineOperation($Test__t_MyClassPrx, 'shutdown', 0, 0, 0, null, null, null, null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opSerialSmallJava', 0, 0, 0, array(array($Test__t_SerialSmall)), array(array($Test__t_SerialSmall)), array($Test__t_SerialSmall), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opSerialLargeJava', 0, 0, 0, array(array($Test__t_SerialLarge)), array(array($Test__t_SerialLarge)), array($Test__t_SerialLarge), null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'opSerialStructJava', 0, 0, 0, array(array($Test__t_SerialStruct)), array(array($Test__t_SerialStruct)), array($Test__t_SerialStruct), null);
}

namespace Test
{
    global $Test__t_SLS;

    if(!isset($Test__t_SLS))
    {
        global $Test__t_SerialLarge;
        $Test__t_SLS = IcePHP_defineSequence('::Test::SLS', $Test__t_SerialLarge);
    }
}

namespace Test
{
    global $Test__t_SLSS;

    if(!isset($Test__t_SLSS))
    {
        global $Test__t_SLS;
        $Test__t_SLSS = IcePHP_defineSequence('::Test::SLSS', $Test__t_SLS);
    }
}

namespace Test
{
    global $Test__t_SLD;

    if(!isset($Test__t_SLD))
    {
        global $IcePHP__t_int;
        global $Test__t_SerialLarge;
        $Test__t_SLD = IcePHP_defineDictionary('::Test::SLD', $IcePHP__t_int, $Test__t_SerialLarge);
    }
}

namespace Test
{
    global $Test__t_SLSD;

    if(!isset($Test__t_SLSD))
    {
        global $IcePHP__t_int;
        global $Test__t_SLS;
        $Test__t_SLSD = IcePHP_defineDictionary('::Test::SLSD', $IcePHP__t_int, $Test__t_SLS);
    }
}

namespace Test
{
    global $Test__t_Foo;
    class Foo
    {
        public function __construct($SLmem=null, $SLSmem=null)
        {
            $this->SLmem = $SLmem;
            $this->SLSmem = $SLSmem;
        }

        public function __toString(): string
        {
            global $Test__t_Foo;
            return IcePHP_stringify($this, $Test__t_Foo);
        }

        public $SLmem;
        public $SLSmem;
    }

    global $Test__t_SerialLarge;
    global $Test__t_SLS;
    $Test__t_Foo = IcePHP_defineStruct('::Test::Foo', '\\Test\\Foo', array(
        array('SLmem', $Test__t_SerialLarge),
        array('SLSmem', $Test__t_SLS)));
}

namespace Test
{
    global $Test__t_Bar;
    class Bar extends \Ice\UserException
    {
        public function __construct($SLmem=null, $SLSmem=null)
        {
            $this->SLmem = $SLmem;
            $this->SLSmem = $SLSmem;
        }

        public function ice_id()
        {
            return '::Test::Bar';
        }

        public function __toString(): string
        {
            global $Test__t_Bar;
            return IcePHP_stringifyException($this, $Test__t_Bar);
        }

        public $SLmem;
        public $SLSmem;
    }
    global $Test__t_SerialLarge;
    global $Test__t_SLS;

    $Test__t_Bar = IcePHP_defineException('::Test::Bar', '\\Test\\Bar', false, null, array(
        array('SLmem', $Test__t_SerialLarge, false, 0),
        array('SLSmem', $Test__t_SLS, false, 0)));
}

namespace Test
{
    global $Test__t_Baz;
    class Baz extends \Ice\Value
    {
        public function __construct($SLmem=null, $SLSmem=null)
        {
            $this->SLmem = $SLmem;
            $this->SLSmem = $SLSmem;
        }

        public function ice_id()
        {
            return '::Test::Baz';
        }

        public static function ice_staticId()
        {
            return '::Test::Baz';
        }

        public function __toString(): string
        {
            global $Test__t_Baz;
            return IcePHP_stringify($this, $Test__t_Baz);
        }

        public $SLmem;
        public $SLSmem;
    }

    global $Ice__t_Value;
    global $Test__t_SerialLarge;
    global $Test__t_SLS;
    $Test__t_Baz = IcePHP_defineClass('::Test::Baz', '\\Test\\Baz', -1, false, false, $Ice__t_Value, array(
        array('SLmem', $Test__t_SerialLarge, false, 0),
        array('SLSmem', $Test__t_SLS, false, 0)));
}
?>
