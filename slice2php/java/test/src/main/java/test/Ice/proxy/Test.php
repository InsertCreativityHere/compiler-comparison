<?php
// Copyright (c) ZeroC, Inc.
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file 'Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


namespace
{
    require_once 'Ice/Context.php';
}

namespace Test
{
    global $Test__t_MyClass;
    global $Test__t_MyClassPrx;
    $Test__t_MyClassPrx = IcePHP_declareProxy('::Test::MyClass');
}

namespace Test
{
    global $Test__t_MyClass;
    global $Test__t_MyClassPrx;

    class MyClassPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::MyClass');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::MyClass', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::MyClass', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::MyClass';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_MyClassPrx = IcePHP_defineProxy('::Test::MyClass', $Ice__t_ObjectPrx, null);

    global $Ice__t_Context;
    IcePHP_defineOperation($Test__t_MyClassPrx, 'shutdown', 0, -1, null, null, null, null);
    IcePHP_defineOperation($Test__t_MyClassPrx, 'getContext', 0, -1, null, null, array($Ice__t_Context), null);
}

namespace Test
{
    global $Test__t_MyDerivedClass;
    global $Test__t_MyDerivedClassPrx;
    $Test__t_MyDerivedClassPrx = IcePHP_declareProxy('::Test::MyDerivedClass');
}

namespace Test
{
    global $Test__t_MyDerivedClass;
    global $Test__t_MyDerivedClassPrx;

    class MyDerivedClassPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::MyDerivedClass');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::MyDerivedClass', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::MyDerivedClass', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::MyDerivedClass';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_MyDerivedClassPrx = IcePHP_defineProxy('::Test::MyDerivedClass', $Ice__t_ObjectPrx, array($Test__t_MyClassPrx));

    global $Ice__t_ObjectPrx;
    IcePHP_defineOperation($Test__t_MyDerivedClassPrx, 'echo', 0, -1, array(array($Ice__t_ObjectPrx)), null, array($Ice__t_ObjectPrx), null);
}

namespace Test
{
    global $Test__t_MyOtherDerivedClass;
    global $Test__t_MyOtherDerivedClassPrx;
    $Test__t_MyOtherDerivedClassPrx = IcePHP_declareProxy('::Test::MyOtherDerivedClass');
}

namespace Test
{
    global $Test__t_MyOtherDerivedClass;
    global $Test__t_MyOtherDerivedClassPrx;

    class MyOtherDerivedClassPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::MyOtherDerivedClass');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::MyOtherDerivedClass', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::MyOtherDerivedClass', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::MyOtherDerivedClass';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_MyOtherDerivedClassPrx = IcePHP_defineProxy('::Test::MyOtherDerivedClass', $Ice__t_ObjectPrx, array($Test__t_MyClassPrx));
}

namespace Test
{
    global $Test__t_DiamondClass;
    global $Test__t_DiamondClassPrx;
    $Test__t_DiamondClassPrx = IcePHP_declareProxy('::Test::DiamondClass');
}

namespace Test
{
    global $Test__t_DiamondClass;
    global $Test__t_DiamondClassPrx;

    class DiamondClassPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::DiamondClass');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::DiamondClass', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::DiamondClass', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::DiamondClass';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_DiamondClassPrx = IcePHP_defineProxy('::Test::DiamondClass', $Ice__t_ObjectPrx, array($Test__t_MyDerivedClassPrx, $Test__t_MyOtherDerivedClassPrx));
}
?>
