<?php
// Copyright (c) ZeroC, Inc.
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file 'Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


namespace Test\MA
{
    global $Test_MA__t_IA;
    global $Test_MA__t_IAPrx;
    $Test_MA__t_IAPrx = IcePHP_declareProxy('::Test::MA::IA');
}

namespace Test\MA
{
    global $Test_MA__t_IA;
    global $Test_MA__t_IAPrx;

    class IAPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::MA::IA');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::MA::IA', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::MA::IA', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::MA::IA';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test_MA__t_IAPrx = IcePHP_defineProxy('::Test::MA::IA', $Ice__t_ObjectPrx, null);

    global $Test_MA__t_IAPrx;
    IcePHP_defineOperation($Test_MA__t_IAPrx, 'iaop', 0, -1, array(array($Test_MA__t_IAPrx)), null, array($Test_MA__t_IAPrx), null);
}

namespace Test\MB
{
    global $Test_MB__t_IB1;
    global $Test_MB__t_IB1Prx;
    $Test_MB__t_IB1Prx = IcePHP_declareProxy('::Test::MB::IB1');
}

namespace Test\MB
{
    global $Test_MB__t_IB1;
    global $Test_MB__t_IB1Prx;

    class IB1PrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::MB::IB1');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::MB::IB1', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::MB::IB1', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::MB::IB1';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test_MB__t_IB1Prx = IcePHP_defineProxy('::Test::MB::IB1', $Ice__t_ObjectPrx, array($Test_MA__t_IAPrx));

    global $Test_MB__t_IB1Prx;
    IcePHP_defineOperation($Test_MB__t_IB1Prx, 'ib1op', 0, -1, array(array($Test_MB__t_IB1Prx)), null, array($Test_MB__t_IB1Prx), null);
}

namespace Test\MB
{
    global $Test_MB__t_IB2;
    global $Test_MB__t_IB2Prx;
    $Test_MB__t_IB2Prx = IcePHP_declareProxy('::Test::MB::IB2');
}

namespace Test\MB
{
    global $Test_MB__t_IB2;
    global $Test_MB__t_IB2Prx;

    class IB2PrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::MB::IB2');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::MB::IB2', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::MB::IB2', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::MB::IB2';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test_MB__t_IB2Prx = IcePHP_defineProxy('::Test::MB::IB2', $Ice__t_ObjectPrx, array($Test_MA__t_IAPrx));

    global $Test_MB__t_IB2Prx;
    IcePHP_defineOperation($Test_MB__t_IB2Prx, 'ib2op', 0, -1, array(array($Test_MB__t_IB2Prx)), null, array($Test_MB__t_IB2Prx), null);
}

namespace Test\MA
{
    global $Test_MA__t_IC;
    global $Test_MA__t_ICPrx;
    $Test_MA__t_ICPrx = IcePHP_declareProxy('::Test::MA::IC');
}

namespace Test\MA
{
    global $Test_MA__t_IC;
    global $Test_MA__t_ICPrx;

    class ICPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::MA::IC');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::MA::IC', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::MA::IC', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::MA::IC';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test_MA__t_ICPrx = IcePHP_defineProxy('::Test::MA::IC', $Ice__t_ObjectPrx, array($Test_MB__t_IB1Prx, $Test_MB__t_IB2Prx));

    global $Test_MA__t_ICPrx;
    IcePHP_defineOperation($Test_MA__t_ICPrx, 'icop', 0, -1, array(array($Test_MA__t_ICPrx)), null, array($Test_MA__t_ICPrx), null);
}

namespace Test
{
    global $Test__t_Initial;
    global $Test__t_InitialPrx;
    $Test__t_InitialPrx = IcePHP_declareProxy('::Test::Initial');
}

namespace Test
{
    global $Test__t_Initial;
    global $Test__t_InitialPrx;

    class InitialPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::Initial');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::Initial', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::Initial', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::Initial';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_InitialPrx = IcePHP_defineProxy('::Test::Initial', $Ice__t_ObjectPrx, null);

    global $Test_MA__t_IAPrx;
    global $Test_MB__t_IB1Prx;
    global $Test_MB__t_IB2Prx;
    global $Test_MA__t_ICPrx;
    IcePHP_defineOperation($Test__t_InitialPrx, 'shutdown', 0, -1, null, null, null, null);
    IcePHP_defineOperation($Test__t_InitialPrx, 'iaop', 0, -1, null, null, array($Test_MA__t_IAPrx), null);
    IcePHP_defineOperation($Test__t_InitialPrx, 'ib1op', 0, -1, null, null, array($Test_MB__t_IB1Prx), null);
    IcePHP_defineOperation($Test__t_InitialPrx, 'ib2op', 0, -1, null, null, array($Test_MB__t_IB2Prx), null);
    IcePHP_defineOperation($Test__t_InitialPrx, 'icop', 0, -1, null, null, array($Test_MA__t_ICPrx), null);
}

namespace Test\MC
{
    global $Test_MC__t_A;
    $Test_MC__t_A = IcePHP_declareClass('::Test::MC::A');
}

namespace Test\MC
{
    global $Test_MC__t_A;
    class A extends \Ice\Value
    {
        public function __construct($aA=0)
        {
            $this->aA = $aA;
        }

        public function ice_id()
        {
            return '::Test::MC::A';
        }

        public static function ice_staticId()
        {
            return '::Test::MC::A';
        }

        public function __toString(): string
        {
            global $Test_MC__t_A;
            return IcePHP_stringify($this, $Test_MC__t_A);
        }

        public $aA;
    }

    global $Ice__t_Value;
    global $IcePHP__t_int;
    $Test_MC__t_A = IcePHP_defineClass('::Test::MC::A', '\\Test\\MC\\A', -1, false, $Ice__t_Value, array(
        array('aA', $IcePHP__t_int, false, 0)));
}

namespace Test\MC
{
    global $Test_MC__t_B;
    $Test_MC__t_B = IcePHP_declareClass('::Test::MC::B');
}

namespace Test\MC
{
    global $Test_MC__t_B;
    class B extends \Test\MC\A
    {
        public function __construct($aA=0, $bB=0)
        {
            parent::__construct($aA);
            $this->bB = $bB;
        }

        public function ice_id()
        {
            return '::Test::MC::B';
        }

        public static function ice_staticId()
        {
            return '::Test::MC::B';
        }

        public function __toString(): string
        {
            global $Test_MC__t_B;
            return IcePHP_stringify($this, $Test_MC__t_B);
        }

        public $bB;
    }

    global $Test_MC__t_A;
    global $IcePHP__t_int;
    $Test_MC__t_B = IcePHP_defineClass('::Test::MC::B', '\\Test\\MC\\B', -1, false, $Test_MC__t_A, array(
        array('bB', $IcePHP__t_int, false, 0)));
}

namespace Test\MC
{
    global $Test_MC__t_C;
    $Test_MC__t_C = IcePHP_declareClass('::Test::MC::C');
}

namespace Test\MC
{
    global $Test_MC__t_C;
    class C extends \Test\MC\B
    {
        public function __construct($aA=0, $bB=0, $cC=0)
        {
            parent::__construct($aA, $bB);
            $this->cC = $cC;
        }

        public function ice_id()
        {
            return '::Test::MC::C';
        }

        public static function ice_staticId()
        {
            return '::Test::MC::C';
        }

        public function __toString(): string
        {
            global $Test_MC__t_C;
            return IcePHP_stringify($this, $Test_MC__t_C);
        }

        public $cC;
    }

    global $Test_MC__t_B;
    global $IcePHP__t_int;
    $Test_MC__t_C = IcePHP_defineClass('::Test::MC::C', '\\Test\\MC\\C', -1, false, $Test_MC__t_B, array(
        array('cC', $IcePHP__t_int, false, 0)));
}

namespace Test\MC
{
    global $Test_MC__t_D;
    $Test_MC__t_D = IcePHP_declareClass('::Test::MC::D');
}

namespace Test\MC
{
    global $Test_MC__t_D;
    class D extends \Test\MC\C
    {
        public function __construct($aA=0, $bB=0, $cC=0, $dD=0)
        {
            parent::__construct($aA, $bB, $cC);
            $this->dD = $dD;
        }

        public function ice_id()
        {
            return '::Test::MC::D';
        }

        public static function ice_staticId()
        {
            return '::Test::MC::D';
        }

        public function __toString(): string
        {
            global $Test_MC__t_D;
            return IcePHP_stringify($this, $Test_MC__t_D);
        }

        public $dD;
    }

    global $Test_MC__t_C;
    global $IcePHP__t_int;
    $Test_MC__t_D = IcePHP_defineClass('::Test::MC::D', '\\Test\\MC\\D', -1, false, $Test_MC__t_C, array(
        array('dD', $IcePHP__t_int, false, 0)));
}

namespace Test\MD
{
    global $Test_MD__t_A;
    $Test_MD__t_A = IcePHP_declareClass('::Test::MD::A');
}

namespace Test\MD
{
    global $Test_MD__t_A;
    class A extends \Ice\Value
    {
        public function __construct($aA=0)
        {
            $this->aA = $aA;
        }

        public function ice_id()
        {
            return '::Test::MD::A';
        }

        public static function ice_staticId()
        {
            return '::Test::MD::A';
        }

        public function __toString(): string
        {
            global $Test_MD__t_A;
            return IcePHP_stringify($this, $Test_MD__t_A);
        }

        public $aA;
    }

    global $Ice__t_Value;
    global $IcePHP__t_int;
    $Test_MD__t_A = IcePHP_defineClass('::Test::MD::A', '\\Test\\MD\\A', -1, false, $Ice__t_Value, array(
        array('aA', $IcePHP__t_int, false, 0)));
}

namespace Test\MD
{
    global $Test_MD__t_B;
    $Test_MD__t_B = IcePHP_declareClass('::Test::MD::B');
}

namespace Test\MD
{
    global $Test_MD__t_B;
    class B extends \Test\MD\A
    {
        public function __construct($aA=0, $bB=0)
        {
            parent::__construct($aA);
            $this->bB = $bB;
        }

        public function ice_id()
        {
            return '::Test::MD::B';
        }

        public static function ice_staticId()
        {
            return '::Test::MD::B';
        }

        public function __toString(): string
        {
            global $Test_MD__t_B;
            return IcePHP_stringify($this, $Test_MD__t_B);
        }

        public $bB;
    }

    global $Test_MD__t_A;
    global $IcePHP__t_int;
    $Test_MD__t_B = IcePHP_defineClass('::Test::MD::B', '\\Test\\MD\\B', -1, false, $Test_MD__t_A, array(
        array('bB', $IcePHP__t_int, false, 0)));
}

namespace Test\MD
{
    global $Test_MD__t_C;
    $Test_MD__t_C = IcePHP_declareClass('::Test::MD::C');
}

namespace Test\MD
{
    global $Test_MD__t_C;
    class C extends \Test\MD\B
    {
        public function __construct($aA=0, $bB=0, $cC=0)
        {
            parent::__construct($aA, $bB);
            $this->cC = $cC;
        }

        public function ice_id()
        {
            return '::Test::MD::C';
        }

        public static function ice_staticId()
        {
            return '::Test::MD::C';
        }

        public function __toString(): string
        {
            global $Test_MD__t_C;
            return IcePHP_stringify($this, $Test_MD__t_C);
        }

        public $cC;
    }

    global $Test_MD__t_B;
    global $IcePHP__t_int;
    $Test_MD__t_C = IcePHP_defineClass('::Test::MD::C', '\\Test\\MD\\C', -1, false, $Test_MD__t_B, array(
        array('cC', $IcePHP__t_int, false, 0)));
}

namespace Test\MD
{
    global $Test_MD__t_D;
    $Test_MD__t_D = IcePHP_declareClass('::Test::MD::D');
}

namespace Test\MD
{
    global $Test_MD__t_D;
    class D extends \Test\MD\C
    {
        public function __construct($aA=0, $bB=0, $cC=0, $dD=0)
        {
            parent::__construct($aA, $bB, $cC);
            $this->dD = $dD;
        }

        public function ice_id()
        {
            return '::Test::MD::D';
        }

        public static function ice_staticId()
        {
            return '::Test::MD::D';
        }

        public function __toString(): string
        {
            global $Test_MD__t_D;
            return IcePHP_stringify($this, $Test_MD__t_D);
        }

        public $dD;
    }

    global $Test_MD__t_C;
    global $IcePHP__t_int;
    $Test_MD__t_D = IcePHP_defineClass('::Test::MD::D', '\\Test\\MD\\D', -1, false, $Test_MD__t_C, array(
        array('dD', $IcePHP__t_int, false, 0)));
}

namespace Test\ME
{
    global $Test_ME__t_A;
    $Test_ME__t_A = IcePHP_declareClass('::Test::ME::A');
}

namespace Test\ME
{
    global $Test_ME__t_A;
    class A extends \Ice\Value
    {
        public function __construct($aA=0)
        {
            $this->aA = $aA;
        }

        public function ice_id()
        {
            return '::Test::ME::A';
        }

        public static function ice_staticId()
        {
            return '::Test::ME::A';
        }

        public function __toString(): string
        {
            global $Test_ME__t_A;
            return IcePHP_stringify($this, $Test_ME__t_A);
        }

        public $aA;
    }

    global $Ice__t_Value;
    global $IcePHP__t_int;
    $Test_ME__t_A = IcePHP_defineClass('::Test::ME::A', '\\Test\\ME\\A', -1, false, $Ice__t_Value, array(
        array('aA', $IcePHP__t_int, false, 0)));
}

namespace Test\ME
{
    global $Test_ME__t_B;
    $Test_ME__t_B = IcePHP_declareClass('::Test::ME::B');
}

namespace Test\ME
{
    global $Test_ME__t_B;
    class B extends \Test\ME\A
    {
        public function __construct($aA=0, $bB=0)
        {
            parent::__construct($aA);
            $this->bB = $bB;
        }

        public function ice_id()
        {
            return '::Test::ME::B';
        }

        public static function ice_staticId()
        {
            return '::Test::ME::B';
        }

        public function __toString(): string
        {
            global $Test_ME__t_B;
            return IcePHP_stringify($this, $Test_ME__t_B);
        }

        public $bB;
    }

    global $Test_ME__t_A;
    global $IcePHP__t_int;
    $Test_ME__t_B = IcePHP_defineClass('::Test::ME::B', '\\Test\\ME\\B', -1, false, $Test_ME__t_A, array(
        array('bB', $IcePHP__t_int, false, 0)));
}

namespace Test\ME
{
    global $Test_ME__t_C;
    $Test_ME__t_C = IcePHP_declareClass('::Test::ME::C');
}

namespace Test\ME
{
    global $Test_ME__t_C;
    class C extends \Test\ME\B
    {
        public function __construct($aA=0, $bB=0, $cC=0)
        {
            parent::__construct($aA, $bB);
            $this->cC = $cC;
        }

        public function ice_id()
        {
            return '::Test::ME::C';
        }

        public static function ice_staticId()
        {
            return '::Test::ME::C';
        }

        public function __toString(): string
        {
            global $Test_ME__t_C;
            return IcePHP_stringify($this, $Test_ME__t_C);
        }

        public $cC;
    }

    global $Test_ME__t_B;
    global $IcePHP__t_int;
    $Test_ME__t_C = IcePHP_defineClass('::Test::ME::C', '\\Test\\ME\\C', -1, false, $Test_ME__t_B, array(
        array('cC', $IcePHP__t_int, false, 0)));
}

namespace Test\ME
{
    global $Test_ME__t_D;
    $Test_ME__t_D = IcePHP_declareClass('::Test::ME::D');
}

namespace Test\ME
{
    global $Test_ME__t_D;
    class D extends \Test\ME\C
    {
        public function __construct($aA=0, $bB=0, $cC=0, $dD=0)
        {
            parent::__construct($aA, $bB, $cC);
            $this->dD = $dD;
        }

        public function ice_id()
        {
            return '::Test::ME::D';
        }

        public static function ice_staticId()
        {
            return '::Test::ME::D';
        }

        public function __toString(): string
        {
            global $Test_ME__t_D;
            return IcePHP_stringify($this, $Test_ME__t_D);
        }

        public $dD;
    }

    global $Test_ME__t_C;
    global $IcePHP__t_int;
    $Test_ME__t_D = IcePHP_defineClass('::Test::ME::D', '\\Test\\ME\\D', -1, false, $Test_ME__t_C, array(
        array('dD', $IcePHP__t_int, false, 0)));
}

namespace Test\MF
{
    global $Test_MF__t_A;
    $Test_MF__t_A = IcePHP_declareClass('::Test::MF::A');
}

namespace Test\MF
{
    global $Test_MF__t_A;
    class A extends \Ice\Value
    {
        public function __construct($aA=0)
        {
            $this->aA = $aA;
        }

        public function ice_id()
        {
            return '::Test::MF::A';
        }

        public static function ice_staticId()
        {
            return '::Test::MF::A';
        }

        public function __toString(): string
        {
            global $Test_MF__t_A;
            return IcePHP_stringify($this, $Test_MF__t_A);
        }

        public $aA;
    }

    global $Ice__t_Value;
    global $IcePHP__t_int;
    $Test_MF__t_A = IcePHP_defineClass('::Test::MF::A', '\\Test\\MF\\A', -1, false, $Ice__t_Value, array(
        array('aA', $IcePHP__t_int, false, 0)));
}

namespace Test\MF
{
    global $Test_MF__t_B;
    $Test_MF__t_B = IcePHP_declareClass('::Test::MF::B');
}

namespace Test\MF
{
    global $Test_MF__t_B;
    class B extends \Test\MF\A
    {
        public function __construct($aA=0, $bB=0)
        {
            parent::__construct($aA);
            $this->bB = $bB;
        }

        public function ice_id()
        {
            return '::Test::MF::B';
        }

        public static function ice_staticId()
        {
            return '::Test::MF::B';
        }

        public function __toString(): string
        {
            global $Test_MF__t_B;
            return IcePHP_stringify($this, $Test_MF__t_B);
        }

        public $bB;
    }

    global $Test_MF__t_A;
    global $IcePHP__t_int;
    $Test_MF__t_B = IcePHP_defineClass('::Test::MF::B', '\\Test\\MF\\B', -1, false, $Test_MF__t_A, array(
        array('bB', $IcePHP__t_int, false, 0)));
}

namespace Test\MF
{
    global $Test_MF__t_C;
    $Test_MF__t_C = IcePHP_declareClass('::Test::MF::C');
}

namespace Test\MF
{
    global $Test_MF__t_C;
    class C extends \Test\MF\B
    {
        public function __construct($aA=0, $bB=0, $cC=0)
        {
            parent::__construct($aA, $bB);
            $this->cC = $cC;
        }

        public function ice_id()
        {
            return '::Test::MF::C';
        }

        public static function ice_staticId()
        {
            return '::Test::MF::C';
        }

        public function __toString(): string
        {
            global $Test_MF__t_C;
            return IcePHP_stringify($this, $Test_MF__t_C);
        }

        public $cC;
    }

    global $Test_MF__t_B;
    global $IcePHP__t_int;
    $Test_MF__t_C = IcePHP_defineClass('::Test::MF::C', '\\Test\\MF\\C', -1, false, $Test_MF__t_B, array(
        array('cC', $IcePHP__t_int, false, 0)));
}

namespace Test\MF
{
    global $Test_MF__t_D;
    $Test_MF__t_D = IcePHP_declareClass('::Test::MF::D');
}

namespace Test\MF
{
    global $Test_MF__t_D;
    class D extends \Test\MF\C
    {
        public function __construct($aA=0, $bB=0, $cC=0, $dD=0)
        {
            parent::__construct($aA, $bB, $cC);
            $this->dD = $dD;
        }

        public function ice_id()
        {
            return '::Test::MF::D';
        }

        public static function ice_staticId()
        {
            return '::Test::MF::D';
        }

        public function __toString(): string
        {
            global $Test_MF__t_D;
            return IcePHP_stringify($this, $Test_MF__t_D);
        }

        public $dD;
    }

    global $Test_MF__t_C;
    global $IcePHP__t_int;
    $Test_MF__t_D = IcePHP_defineClass('::Test::MF::D', '\\Test\\MF\\D', -1, false, $Test_MF__t_C, array(
        array('dD', $IcePHP__t_int, false, 0)));
}

namespace Test\MG
{
    global $Test_MG__t_A;
    $Test_MG__t_A = IcePHP_declareClass('::Test::MG::A');
}

namespace Test\MG
{
    global $Test_MG__t_A;
    class A extends \Ice\Value
    {
        public function __construct($aA=0)
        {
            $this->aA = $aA;
        }

        public function ice_id()
        {
            return '::Test::MG::A';
        }

        public static function ice_staticId()
        {
            return '::Test::MG::A';
        }

        public function __toString(): string
        {
            global $Test_MG__t_A;
            return IcePHP_stringify($this, $Test_MG__t_A);
        }

        public $aA;
    }

    global $Ice__t_Value;
    global $IcePHP__t_int;
    $Test_MG__t_A = IcePHP_defineClass('::Test::MG::A', '\\Test\\MG\\A', -1, false, $Ice__t_Value, array(
        array('aA', $IcePHP__t_int, false, 0)));
}

namespace Test\MG
{
    global $Test_MG__t_B;
    $Test_MG__t_B = IcePHP_declareClass('::Test::MG::B');
}

namespace Test\MG
{
    global $Test_MG__t_B;
    class B extends \Test\MG\A
    {
        public function __construct($aA=0, $bB=0)
        {
            parent::__construct($aA);
            $this->bB = $bB;
        }

        public function ice_id()
        {
            return '::Test::MG::B';
        }

        public static function ice_staticId()
        {
            return '::Test::MG::B';
        }

        public function __toString(): string
        {
            global $Test_MG__t_B;
            return IcePHP_stringify($this, $Test_MG__t_B);
        }

        public $bB;
    }

    global $Test_MG__t_A;
    global $IcePHP__t_int;
    $Test_MG__t_B = IcePHP_defineClass('::Test::MG::B', '\\Test\\MG\\B', -1, false, $Test_MG__t_A, array(
        array('bB', $IcePHP__t_int, false, 0)));
}

namespace Test\MG
{
    global $Test_MG__t_C;
    $Test_MG__t_C = IcePHP_declareClass('::Test::MG::C');
}

namespace Test\MG
{
    global $Test_MG__t_C;
    class C extends \Test\MG\B
    {
        public function __construct($aA=0, $bB=0, $cC=0)
        {
            parent::__construct($aA, $bB);
            $this->cC = $cC;
        }

        public function ice_id()
        {
            return '::Test::MG::C';
        }

        public static function ice_staticId()
        {
            return '::Test::MG::C';
        }

        public function __toString(): string
        {
            global $Test_MG__t_C;
            return IcePHP_stringify($this, $Test_MG__t_C);
        }

        public $cC;
    }

    global $Test_MG__t_B;
    global $IcePHP__t_int;
    $Test_MG__t_C = IcePHP_defineClass('::Test::MG::C', '\\Test\\MG\\C', -1, false, $Test_MG__t_B, array(
        array('cC', $IcePHP__t_int, false, 0)));
}

namespace Test\MG
{
    global $Test_MG__t_D;
    $Test_MG__t_D = IcePHP_declareClass('::Test::MG::D');
}

namespace Test\MG
{
    global $Test_MG__t_D;
    class D extends \Test\MG\C
    {
        public function __construct($aA=0, $bB=0, $cC=0, $dD=0)
        {
            parent::__construct($aA, $bB, $cC);
            $this->dD = $dD;
        }

        public function ice_id()
        {
            return '::Test::MG::D';
        }

        public static function ice_staticId()
        {
            return '::Test::MG::D';
        }

        public function __toString(): string
        {
            global $Test_MG__t_D;
            return IcePHP_stringify($this, $Test_MG__t_D);
        }

        public $dD;
    }

    global $Test_MG__t_C;
    global $IcePHP__t_int;
    $Test_MG__t_D = IcePHP_defineClass('::Test::MG::D', '\\Test\\MG\\D', -1, false, $Test_MG__t_C, array(
        array('dD', $IcePHP__t_int, false, 0)));
}

namespace Test\MH
{
    global $Test_MH__t_A;
    $Test_MH__t_A = IcePHP_declareClass('::Test::MH::A');
}

namespace Test\MH
{
    global $Test_MH__t_A;
    class A extends \Ice\Value
    {
        public function __construct($aA=0)
        {
            $this->aA = $aA;
        }

        public function ice_id()
        {
            return '::Test::MH::A';
        }

        public static function ice_staticId()
        {
            return '::Test::MH::A';
        }

        public function __toString(): string
        {
            global $Test_MH__t_A;
            return IcePHP_stringify($this, $Test_MH__t_A);
        }

        public $aA;
    }

    global $Ice__t_Value;
    global $IcePHP__t_int;
    $Test_MH__t_A = IcePHP_defineClass('::Test::MH::A', '\\Test\\MH\\A', -1, false, $Ice__t_Value, array(
        array('aA', $IcePHP__t_int, false, 0)));
}

namespace Test\MH
{
    global $Test_MH__t_B;
    $Test_MH__t_B = IcePHP_declareClass('::Test::MH::B');
}

namespace Test\MH
{
    global $Test_MH__t_B;
    class B extends \Test\MH\A
    {
        public function __construct($aA=0, $bB=0)
        {
            parent::__construct($aA);
            $this->bB = $bB;
        }

        public function ice_id()
        {
            return '::Test::MH::B';
        }

        public static function ice_staticId()
        {
            return '::Test::MH::B';
        }

        public function __toString(): string
        {
            global $Test_MH__t_B;
            return IcePHP_stringify($this, $Test_MH__t_B);
        }

        public $bB;
    }

    global $Test_MH__t_A;
    global $IcePHP__t_int;
    $Test_MH__t_B = IcePHP_defineClass('::Test::MH::B', '\\Test\\MH\\B', -1, false, $Test_MH__t_A, array(
        array('bB', $IcePHP__t_int, false, 0)));
}

namespace Test\MH
{
    global $Test_MH__t_C;
    $Test_MH__t_C = IcePHP_declareClass('::Test::MH::C');
}

namespace Test\MH
{
    global $Test_MH__t_C;
    class C extends \Test\MH\B
    {
        public function __construct($aA=0, $bB=0, $cC=0)
        {
            parent::__construct($aA, $bB);
            $this->cC = $cC;
        }

        public function ice_id()
        {
            return '::Test::MH::C';
        }

        public static function ice_staticId()
        {
            return '::Test::MH::C';
        }

        public function __toString(): string
        {
            global $Test_MH__t_C;
            return IcePHP_stringify($this, $Test_MH__t_C);
        }

        public $cC;
    }

    global $Test_MH__t_B;
    global $IcePHP__t_int;
    $Test_MH__t_C = IcePHP_defineClass('::Test::MH::C', '\\Test\\MH\\C', -1, false, $Test_MH__t_B, array(
        array('cC', $IcePHP__t_int, false, 0)));
}

namespace Test\MH
{
    global $Test_MH__t_D;
    $Test_MH__t_D = IcePHP_declareClass('::Test::MH::D');
}

namespace Test\MH
{
    global $Test_MH__t_D;
    class D extends \Test\MH\C
    {
        public function __construct($aA=0, $bB=0, $cC=0, $dD=0)
        {
            parent::__construct($aA, $bB, $cC);
            $this->dD = $dD;
        }

        public function ice_id()
        {
            return '::Test::MH::D';
        }

        public static function ice_staticId()
        {
            return '::Test::MH::D';
        }

        public function __toString(): string
        {
            global $Test_MH__t_D;
            return IcePHP_stringify($this, $Test_MH__t_D);
        }

        public $dD;
    }

    global $Test_MH__t_C;
    global $IcePHP__t_int;
    $Test_MH__t_D = IcePHP_defineClass('::Test::MH::D', '\\Test\\MH\\D', -1, false, $Test_MH__t_C, array(
        array('dD', $IcePHP__t_int, false, 0)));
}

namespace Test
{
    global $Test__t_Echo;
    global $Test__t_EchoPrx;
    $Test__t_EchoPrx = IcePHP_declareProxy('::Test::Echo');
}

namespace Test
{
    global $Test__t_Echo;
    global $Test__t_EchoPrx;

    class EchoPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::Echo');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::Echo', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::Echo', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::Echo';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_EchoPrx = IcePHP_defineProxy('::Test::Echo', $Ice__t_ObjectPrx, null);

    IcePHP_defineOperation($Test__t_EchoPrx, 'setConnection', 0, -1, null, null, null, null);
    IcePHP_defineOperation($Test__t_EchoPrx, 'startBatch', 0, -1, null, null, null, null);
    IcePHP_defineOperation($Test__t_EchoPrx, 'flushBatch', 0, -1, null, null, null, null);
    IcePHP_defineOperation($Test__t_EchoPrx, 'shutdown', 0, -1, null, null, null, null);
}
?>
