<?php
// Copyright (c) ZeroC, Inc.
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file 'Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


namespace
{
    require_once 'Ice/Identity.php';
}

namespace Test
{
    global $Test__t_PingReply;
    global $Test__t_PingReplyPrx;
    $Test__t_PingReplyPrx = IcePHP_declareProxy('::Test::PingReply');
}

namespace Test
{
    global $Test__t_PingReply;
    global $Test__t_PingReplyPrx;

    class PingReplyPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::PingReply');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::PingReply', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::PingReply', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::PingReply';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_PingReplyPrx = IcePHP_defineProxy('::Test::PingReply', $Ice__t_ObjectPrx, null);

    IcePHP_defineOperation($Test__t_PingReplyPrx, 'reply', 0, -1, null, null, null, null);
}

namespace Test
{
    global $Test__t_ByteSeq;

    if(!isset($Test__t_ByteSeq))
    {
        global $IcePHP__t_byte;
        $Test__t_ByteSeq = IcePHP_defineSequence('::Test::ByteSeq', $IcePHP__t_byte);
    }
}

namespace Test
{
    global $Test__t_TestIntf;
    global $Test__t_TestIntfPrx;
    $Test__t_TestIntfPrx = IcePHP_declareProxy('::Test::TestIntf');
}

namespace Test
{
    global $Test__t_TestIntf;
    global $Test__t_TestIntfPrx;

    class TestIntfPrxHelper
    {
        public static function createProxy($communicator, $proxyString)
        {
            return  $communicator->stringToProxy($proxyString, '::Test::TestIntf');
        }

        public static function checkedCast($proxy, ...$args)
        {
            return $proxy->ice_checkedCast('::Test::TestIntf', ...$args);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Test::TestIntf', $facet);
        }

        public static function ice_staticId()
        {
            return '::Test::TestIntf';
        }
    }

    global $Ice__t_ObjectPrx;
    $Test__t_TestIntfPrx = IcePHP_defineProxy('::Test::TestIntf', $Ice__t_ObjectPrx, null);

    global $Test__t_PingReplyPrx;
    global $Test__t_ByteSeq;
    global $Ice__t_Identity;
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'ping', 0, -1, array(array($Test__t_PingReplyPrx)), null, null, null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'sendByteSeq', 0, -1, array(array($Test__t_ByteSeq), array($Test__t_PingReplyPrx)), null, null, null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'pingBiDir', 0, -1, array(array($Ice__t_Identity)), null, null, null);
    IcePHP_defineOperation($Test__t_TestIntfPrx, 'shutdown', 0, -1, null, null, null, null);
}
?>
