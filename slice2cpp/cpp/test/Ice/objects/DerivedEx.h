// Copyright (c) ZeroC, Inc.
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file 'DerivedEx.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>

// clang-format off

#ifndef DerivedEx_h_
#define DerivedEx_h_

#include <Ice/PushDisableWarnings.h>
#include <Ice/Ice.h>
#include "Test.h"
#include "Forward.h"

#ifndef ICE_IGNORE_VERSION
#   if ICE_INT_VERSION  != 30850
#       error Ice version mismatch: an exact match is required for beta generated code
#   endif
#endif

// NOLINTBEGIN(modernize-concat-nested-namespaces)

namespace Test
{
}

namespace Test
{
    class DerivedEx : public BaseEx
    {
    public:
        using BaseEx::BaseEx;

        /// Obtains the Slice type ID of this exception.
        /// @return The fully-scoped type ID.
        static const char* ice_staticId() noexcept;

        [[nodiscard]] const char* ice_id() const noexcept override;

        void ice_throw() const override;

    protected:
        void _writeImpl(Ice::OutputStream*) const override;

        void _readImpl(Ice::InputStream*) override;
    };
}

// NOLINTEND(modernize-concat-nested-namespaces)

#include <Ice/PopDisableWarnings.h>
#endif
