//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `Context.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

#ifndef __Context_h__
#define __Context_h__

#include <IceUtil/PushDisableWarnings.h>
#include <IceUtil/UndefSysMacros.h>
#include <Ice/Config.h>

#ifndef ICE_IGNORE_VERSION
#   if ICE_INT_VERSION / 100 != 307
#       error Ice version mismatch!
#   endif
#   if ICE_INT_VERSION % 100 >= 50
#       error Beta header file detected
#   endif
#   if ICE_INT_VERSION % 100 < 10
#       error Ice patch level mismatch!
#   endif
#endif

#ifndef ICE_API
#   if defined(ICE_STATIC_LIBS)
#       define ICE_API /**/
#   elif defined(ICE_API_EXPORTS)
#       define ICE_API ICE_DECLSPEC_EXPORT
#   else
#       define ICE_API ICE_DECLSPEC_IMPORT
#   endif
#endif

#ifdef ICE_CPP11_MAPPING // C++11 mapping

namespace Ice
{

/**
 * A request context. <code>Context</code> is used to transmit metadata about a request from the server to the client,
 * such as Quality-of-Service (QoS) parameters. Each operation on the client has a <code>Context</code> as its
 * implicit final parameter.
 */
using Context = ::std::map<::std::string, ::std::string>;

}

#else // C++98 mapping

namespace Ice
{

/**
 * A request context. <code>Context</code> is used to transmit metadata about a request from the server to the client,
 * such as Quality-of-Service (QoS) parameters. Each operation on the client has a <code>Context</code> as its
 * implicit final parameter.
 */
typedef ::std::map< ::std::string, ::std::string> Context;

}

#endif

#include <IceUtil/PopDisableWarnings.h>
#endif
