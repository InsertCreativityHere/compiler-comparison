# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.10
#
# <auto-generated>
#
# Generated from file `ConnectionInfo.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy
import Ice.Connection_ice

# Included module Ice
_M_Ice = Ice.openModule('Ice')

# Start of module IceSSL
_M_IceSSL = Ice.openModule('IceSSL')
__name__ = 'IceSSL'

if 'ConnectionInfo' not in _M_IceSSL.__dict__:
    _M_IceSSL.ConnectionInfo = Ice.createTempClass()
    class ConnectionInfo(_M_Ice.ConnectionInfo):
        """
        Provides access to the connection details of an SSL connection
        Members:
        cipher -- The negotiated cipher suite.
        certs -- The certificate chain.
        verified -- The certificate chain verification status.
        """
        def __init__(self, underlying=None, incoming=False, adapterName='', connectionId='', cipher='', certs=None, verified=False):
            _M_Ice.ConnectionInfo.__init__(self, underlying, incoming, adapterName, connectionId)
            self.cipher = cipher
            self.certs = certs
            self.verified = verified

        def __str__(self):
            return IcePy.stringify(self, _M_IceSSL._t_ConnectionInfo)

        __repr__ = __str__

    _M_IceSSL._t_ConnectionInfo = IcePy.declareValue('::IceSSL::ConnectionInfo')

    _M_IceSSL._t_ConnectionInfo = IcePy.defineValue('::IceSSL::ConnectionInfo', ConnectionInfo, -1, (), False, False, _M_Ice._t_ConnectionInfo, (
        ('cipher', (), IcePy._t_string, False, 0),
        ('certs', (), _M_Ice._t_StringSeq, False, 0),
        ('verified', (), IcePy._t_bool, False, 0)
    ))
    ConnectionInfo._ice_type = _M_IceSSL._t_ConnectionInfo

    _M_IceSSL.ConnectionInfo = ConnectionInfo
    del ConnectionInfo

# End of module IceSSL
