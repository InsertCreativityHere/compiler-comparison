# -*- coding: utf-8 -*-
# Copyright (c) ZeroC, Inc.
#
# Ice version 3.8.0-alpha.0
#
# <auto-generated>
#
# Generated from file 'Metrics.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>

import Ice
import IcePy
import builtins as _builtins
import Ice.Metrics_ice

# Included module Ice
_M_Ice = Ice.openModule('Ice')

# Included module IceMX
_M_IceMX = Ice.openModule('IceMX')

# Start of module IceMX
__name__ = 'IceMX'

if 'SessionMetrics' not in _M_IceMX.__dict__:
    _M_IceMX._t_SessionMetrics = IcePy.declareValue('::IceMX::SessionMetrics')

if 'SessionMetrics' not in _M_IceMX.__dict__:
    _M_IceMX.SessionMetrics = None
    class SessionMetrics(_M_IceMX.Metrics):
        """
        Provides information on Glacier2 sessions.
        
        Attributes
        ----------
        forwardedClient : int
            Number of client requests forwarded.
        forwardedServer : int
            Number of server requests forwarded.
        routingTableSize : int
            The size of the routing table.
        queuedClient : int
            Number of client requests queued.
        queuedServer : int
            Number of server requests queued.
        overriddenClient : int
            Number of client requests overridden.
        overriddenServer : int
            Number of server requests overridden.
        """
        def __init__(self, id='', total=0, current=0, totalLifetime=0, failures=0, forwardedClient=0, forwardedServer=0, routingTableSize=0, queuedClient=0, queuedServer=0, overriddenClient=0, overriddenServer=0):
            _M_IceMX.Metrics.__init__(self, id, total, current, totalLifetime, failures)
            self.forwardedClient = forwardedClient
            self.forwardedServer = forwardedServer
            self.routingTableSize = routingTableSize
            self.queuedClient = queuedClient
            self.queuedServer = queuedServer
            self.overriddenClient = overriddenClient
            self.overriddenServer = overriddenServer

        def ice_id(self):
            return '::IceMX::SessionMetrics'

        @staticmethod
        def ice_staticId():
            return '::IceMX::SessionMetrics'

        def __str__(self):
            return IcePy.stringify(self, _M_IceMX._t_SessionMetrics)

        __repr__ = __str__

    _M_IceMX._t_SessionMetrics = IcePy.defineValue('::IceMX::SessionMetrics', SessionMetrics, -1, (), False, _M_IceMX._t_Metrics, (
        ('forwardedClient', (), IcePy._t_int, False, 0),
        ('forwardedServer', (), IcePy._t_int, False, 0),
        ('routingTableSize', (), IcePy._t_int, False, 0),
        ('queuedClient', (), IcePy._t_int, False, 0),
        ('queuedServer', (), IcePy._t_int, False, 0),
        ('overriddenClient', (), IcePy._t_int, False, 0),
        ('overriddenServer', (), IcePy._t_int, False, 0)
    ))
    SessionMetrics._ice_type = _M_IceMX._t_SessionMetrics

    _M_IceMX.SessionMetrics = SessionMetrics
    del SessionMetrics

# End of module IceMX
