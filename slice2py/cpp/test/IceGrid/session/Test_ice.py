# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.8.0-alpha.0
#
# <auto-generated>
#
# Generated from file `Test.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

import Ice, IcePy
import Glacier2.PermissionsVerifier_ice

# Included module Ice
_M_Ice = Ice.openModule('Ice')

# Included module Glacier2
_M_Glacier2 = Ice.openModule('Glacier2')

# Start of module Test
_M_Test = Ice.openModule('Test')
__name__ = 'Test'

if 'ExtendedPermissionDeniedException' not in _M_Test.__dict__:
    _M_Test.ExtendedPermissionDeniedException = Ice.createTempClass()
    class ExtendedPermissionDeniedException(_M_Glacier2.PermissionDeniedException):
        def __init__(self, reason=''):
            _M_Glacier2.PermissionDeniedException.__init__(self, reason)

        def __str__(self):
            return IcePy.stringifyException(self)

        __repr__ = __str__

        _ice_id = '::Test::ExtendedPermissionDeniedException'

    _M_Test._t_ExtendedPermissionDeniedException = IcePy.defineException('::Test::ExtendedPermissionDeniedException', ExtendedPermissionDeniedException, (), True, _M_Glacier2._t_PermissionDeniedException, ())
    ExtendedPermissionDeniedException._ice_type = _M_Test._t_ExtendedPermissionDeniedException

    _M_Test.ExtendedPermissionDeniedException = ExtendedPermissionDeniedException
    del ExtendedPermissionDeniedException

# End of module Test
