# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.8.0-alpha.0
#
# <auto-generated>
#
# Generated from file `DBTypes.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

import Ice
import IcePy
import builtins as _builtins
import IceGrid.Admin_ice

# Included module Ice
_M_Ice = Ice.openModule('Ice')

# Included module Glacier2
_M_Glacier2 = Ice.openModule('Glacier2')

# Included module IceGrid
_M_IceGrid = Ice.openModule('IceGrid')

# Start of module IceGrid
__name__ = 'IceGrid'

if '_t_StringLongDict' not in _M_IceGrid.__dict__:
    _M_IceGrid._t_StringLongDict = IcePy.defineDictionary('::IceGrid::StringLongDict', (), IcePy._t_string, IcePy._t_long)

if 'AllData' not in _M_IceGrid.__dict__:
    _M_IceGrid.AllData = None
    class AllData(object):
        def __init__(self, applications=None, adapters=None, objects=None, internalObjects=None, serials=None):
            self.applications = applications
            self.adapters = adapters
            self.objects = objects
            self.internalObjects = internalObjects
            self.serials = serials

        def __eq__(self, other):
            if other is None:
                return False
            elif not isinstance(other, _M_IceGrid.AllData):
                return NotImplemented
            else:
                if self.applications != other.applications:
                    return False
                if self.adapters != other.adapters:
                    return False
                if self.objects != other.objects:
                    return False
                if self.internalObjects != other.internalObjects:
                    return False
                if self.serials != other.serials:
                    return False
                return True

        def __ne__(self, other):
            return not self.__eq__(other)

        def __str__(self):
            return IcePy.stringify(self, _M_IceGrid._t_AllData)

        __repr__ = __str__

    _M_IceGrid._t_AllData = IcePy.defineStruct('::IceGrid::AllData', AllData, (), (
        ('applications', (), _M_IceGrid._t_ApplicationInfoSeq),
        ('adapters', (), _M_IceGrid._t_AdapterInfoSeq),
        ('objects', (), _M_IceGrid._t_ObjectInfoSeq),
        ('internalObjects', (), _M_IceGrid._t_ObjectInfoSeq),
        ('serials', (), _M_IceGrid._t_StringLongDict)
    ))

    _M_IceGrid.AllData = AllData
    del AllData

# End of module IceGrid
