# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.9
#
# <auto-generated>
#
# Generated from file `ClientPrivate.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy
import Test_ice

# Included module Test
_M_Test = Ice.openModule('Test')

# Start of module Test
__name__ = 'Test'

if 'PreservedClass' not in _M_Test.__dict__:
    _M_Test.PreservedClass = Ice.createTempClass()
    class PreservedClass(_M_Test.BaseClass):
        def __init__(self, bc='', pc=''):
            _M_Test.BaseClass.__init__(self, bc)
            self.pc = pc

        def ice_id(self):
            return '::Test::PreservedClass'

        @staticmethod
        def ice_staticId():
            return '::Test::PreservedClass'

        def __str__(self):
            return IcePy.stringify(self, _M_Test._t_PreservedClass)

        __repr__ = __str__

    _M_Test._t_PreservedClass = IcePy.defineValue('::Test::PreservedClass', PreservedClass, -1, (), True, False, _M_Test._t_BaseClass, (('pc', (), IcePy._t_string, False, 0),))
    PreservedClass._ice_type = _M_Test._t_PreservedClass

    _M_Test.PreservedClass = PreservedClass
    del PreservedClass

if 'Preserved1' not in _M_Test.__dict__:
    _M_Test.Preserved1 = Ice.createTempClass()
    class Preserved1(_M_Test.KnownPreservedDerived):
        def __init__(self, b='', kp='', kpd='', p1=None):
            _M_Test.KnownPreservedDerived.__init__(self, b, kp, kpd)
            self.p1 = p1

        def __str__(self):
            return IcePy.stringifyException(self)

        __repr__ = __str__

        _ice_id = '::Test::Preserved1'

    _M_Test._t_Preserved1 = IcePy.defineException('::Test::Preserved1', Preserved1, (), True, _M_Test._t_KnownPreservedDerived, (('p1', (), _M_Test._t_BaseClass, False, 0),))
    Preserved1._ice_type = _M_Test._t_Preserved1

    _M_Test.Preserved1 = Preserved1
    del Preserved1

if 'Preserved2' not in _M_Test.__dict__:
    _M_Test.Preserved2 = Ice.createTempClass()
    class Preserved2(_M_Test.Preserved1):
        def __init__(self, b='', kp='', kpd='', p1=None, p2=None):
            _M_Test.Preserved1.__init__(self, b, kp, kpd, p1)
            self.p2 = p2

        def __str__(self):
            return IcePy.stringifyException(self)

        __repr__ = __str__

        _ice_id = '::Test::Preserved2'

    _M_Test._t_Preserved2 = IcePy.defineException('::Test::Preserved2', Preserved2, (), True, _M_Test._t_Preserved1, (('p2', (), _M_Test._t_BaseClass, False, 0),))
    Preserved2._ice_type = _M_Test._t_Preserved2

    _M_Test.Preserved2 = Preserved2
    del Preserved2

# End of module Test
