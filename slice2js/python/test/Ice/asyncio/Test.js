//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

import { Ice } from "ice";


export const Test = {};

Test.TestException = class extends Ice.UserException
{
    constructor(_cause = "")
    {
        super(_cause);
    }

    static get _parent()
    {
        return Ice.UserException;
    }

    static get _id()
    {
        return "::Test::TestException";
    }

    _mostDerivedType()
    {
        return Test.TestException;
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "Test.TestException",
    Test.TestException);

const iceC_Test_TestIntf_ids = [
    "::Ice::Object",
    "::Test::TestIntf"
];

Test.TestIntf = class extends Ice.Object
{
};

Test.TestIntfPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Test.TestIntfPrx", Test.TestIntfPrx);

Ice.defineOperations(
    Test.TestIntf,
    Test.TestIntfPrx,
    iceC_Test_TestIntf_ids,
    "::Test::TestIntf",
    {
        "op": [, , , [3], , , , , ],
        "callOpOn": [, , , [3], [["Test.TestIntfPrx"]], , , , ],
        "throwUserException1": [, , , , , ,
        [
            Test.TestException
        ], , ],
        "throwUserException2": [, , , , , ,
        [
            Test.TestException
        ], , ],
        "throwUnhandledException1": [, , , , , , , , ],
        "throwUnhandledException2": [, , , , , , , , ],
        "sleep": [, , , , [[3]], , , , ],
        "shutdown": [, , , , , , , , ]
    });
