//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `NoPackage.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

import { Ice } from "ice";


export const Test1 = {};

Test1.C1 = class extends Ice.Value
{
    constructor(i = 0)
    {
        super();
        this.i = i;
    }

    _iceWriteMemberImpl(ostr)
    {
        ostr.writeInt(this.i);
    }

    _iceReadMemberImpl(istr)
    {
        this.i = istr.readInt();
    }
};

Ice.defineValue(Test1.C1, "::Test1::C1");
Ice.TypeRegistry.declareValueType("Test1.C1", Test1.C1);

Test1.C2 = class extends Test1.C1
{
    constructor(i, l = new Ice.Long(0, 0))
    {
        super(i);
        this.l = l;
    }

    _iceWriteMemberImpl(ostr)
    {
        ostr.writeLong(this.l);
    }

    _iceReadMemberImpl(istr)
    {
        this.l = istr.readLong();
    }
};

Ice.defineValue(Test1.C2, "::Test1::C2");
Ice.TypeRegistry.declareValueType("Test1.C2", Test1.C2);

Test1.E1 = class extends Ice.UserException
{
    constructor(i = 0, _cause = "")
    {
        super(_cause);
        this.i = i;
    }

    static get _parent()
    {
        return Ice.UserException;
    }

    static get _id()
    {
        return "::Test1::E1";
    }

    _mostDerivedType()
    {
        return Test1.E1;
    }

    _writeMemberImpl(ostr)
    {
        ostr.writeInt(this.i);
    }

    _readMemberImpl(istr)
    {
        this.i = istr.readInt();
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "Test1.E1",
    Test1.E1);

Test1.E2 = class extends Test1.E1
{
    constructor(i, l = new Ice.Long(0, 0), _cause = "")
    {
        super(i, _cause);
        this.l = l;
    }

    static get _parent()
    {
        return Test1.E1;
    }

    static get _id()
    {
        return "::Test1::E2";
    }

    _mostDerivedType()
    {
        return Test1.E2;
    }

    _writeMemberImpl(ostr)
    {
        ostr.writeLong(this.l);
    }

    _readMemberImpl(istr)
    {
        this.l = istr.readLong();
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "Test1.E2",
    Test1.E2);

/**
 * Test keyword escape.
 **/
Test1.def = class extends Ice.UserException
{
    constructor(i = 0, _cause = "")
    {
        super(_cause);
        this.i = i;
    }

    static get _parent()
    {
        return Ice.UserException;
    }

    static get _id()
    {
        return "::Test1::def";
    }

    _mostDerivedType()
    {
        return Test1.def;
    }

    _writeMemberImpl(ostr)
    {
        ostr.writeInt(this.i);
    }

    _readMemberImpl(istr)
    {
        this.i = istr.readInt();
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "Test1.def",
    Test1.def);
