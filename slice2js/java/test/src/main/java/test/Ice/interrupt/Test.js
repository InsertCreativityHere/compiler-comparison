//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

import { Ice } from "ice";


export const Test = {};

Test.InterruptedException = class extends Ice.UserException
{
    constructor(_cause = "")
    {
        super(_cause);
    }

    static get _parent()
    {
        return Ice.UserException;
    }

    static get _ice_id()
    {
        return "::Test::InterruptedException";
    }

    _mostDerivedType()
    {
        return Test.InterruptedException;
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "Test.InterruptedException",
    Test.InterruptedException);

const iceC_Test_TestIntf_ids = [
    "::Ice::Object",
    "::Test::TestIntf"
];

Test.TestIntf = class extends Ice.Object
{
};

Test.TestIntfPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Test.TestIntfPrx", Test.TestIntfPrx);

Ice.defineOperations(
    Test.TestIntf,
    Test.TestIntfPrx,
    iceC_Test_TestIntf_ids,
    "::Test::TestIntf",
    {
        "op": [, , , , , , , , ],
        "opIdempotent": [, 2, , , , , , , ],
        "sleep": [, , , , [[3]], ,
        [
            Test.InterruptedException
        ], , ],
        "opWithPayload": [, , , , [[Ice.ByteSeqHelper]], , , , ],
        "shutdown": [, , , , , , , , ]
    });

Test.CannotInterruptException = class extends Ice.UserException
{
    constructor(_cause = "")
    {
        super(_cause);
    }

    static get _parent()
    {
        return Ice.UserException;
    }

    static get _ice_id()
    {
        return "::Test::CannotInterruptException";
    }

    _mostDerivedType()
    {
        return Test.CannotInterruptException;
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "Test.CannotInterruptException",
    Test.CannotInterruptException);

const iceC_Test_TestIntfController_ids = [
    "::Ice::Object",
    "::Test::TestIntfController"
];

Test.TestIntfController = class extends Ice.Object
{
};

Test.TestIntfControllerPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Test.TestIntfControllerPrx", Test.TestIntfControllerPrx);

Ice.defineOperations(
    Test.TestIntfController,
    Test.TestIntfControllerPrx,
    iceC_Test_TestIntfController_ids,
    "::Test::TestIntfController",
    {
        "holdAdapter": [, , , , , , , , ],
        "resumeAdapter": [, , , , , , , , ],
        "interrupt": [, , , , , ,
        [
            Test.CannotInterruptException
        ], , ]
    });
