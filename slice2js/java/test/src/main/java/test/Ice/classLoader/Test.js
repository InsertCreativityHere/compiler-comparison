// Copyright (c) ZeroC, Inc.
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file 'Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>

/* eslint-disable */
/* jshint ignore: start */

import { Ice } from "ice";


export const Test = {};

Test.ConcreteClass = class extends Ice.Value
{
    constructor(i = 0)
    {
        super();
        this.i = i;
    }

    _iceWriteMemberImpl(ostr)
    {
        ostr.writeInt(this.i);
    }

    _iceReadMemberImpl(istr)
    {
        this.i = istr.readInt();
    }
};

Ice.defineValue(Test.ConcreteClass, "::Test::ConcreteClass");
Ice.TypeRegistry.declareValueType("Test.ConcreteClass", Test.ConcreteClass);

Test.E = class extends Ice.UserException
{
    constructor(_cause = "")
    {
        super(_cause);
    }

    static get _parent()
    {
        return Ice.UserException;
    }

    static get _ice_id()
    {
        return "::Test::E";
    }

    _mostDerivedType()
    {
        return Test.E;
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "Test.E",
    Test.E);

const iceC_Test_Initial_ids = [
    "::Ice::Object",
    "::Test::Initial"
];

Test.Initial = class extends Ice.Object
{
};

Test.InitialPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Test.InitialPrx", Test.InitialPrx);

Ice.defineOperations(
    Test.Initial,
    Test.InitialPrx,
    iceC_Test_Initial_ids,
    "::Test::Initial",
    {
        "getConcreteClass": [, , , ["Test.ConcreteClass", true], , , , , true],
        "throwException": [, , , , , ,
        [
            Test.E
        ], , ],
        "shutdown": [, , , , , , , , ]
    });
