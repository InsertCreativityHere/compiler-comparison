// Copyright (c) ZeroC, Inc.
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file 'Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>

/* eslint-disable */
/* jshint ignore: start */

import { Ice } from "ice";


export const Test = {};

const iceC_Test_MyClass_ids = [
    "::Ice::Object",
    "::Test::MyClass"
];

Test.MyClass = class extends Ice.Object
{
};

Test.MyClassPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Test.MyClassPrx", Test.MyClassPrx);

Ice.defineOperations(
    Test.MyClass,
    Test.MyClassPrx,
    iceC_Test_MyClass_ids,
    "::Test::MyClass",
    {
        "shutdown": [, , , , , , , , ],
        "getContext": [, , , [Ice.ContextHelper], , , , , ]
    });

const iceC_Test_MyDerivedClass_ids = [
    "::Ice::Object",
    "::Test::MyClass",
    "::Test::MyDerivedClass"
];

Test.MyDerivedClass = class extends Ice.Object
{
    static get _iceImplements()
    {
        return [
            Test.MyClass
        ];
    }
};

Test.MyDerivedClassPrx = class extends Ice.ObjectPrx
{
    static get _implements()
    {
        return [
            Test.MyClassPrx];
    }
};
Ice.TypeRegistry.declareProxyType("Test.MyDerivedClassPrx", Test.MyDerivedClassPrx);

Ice.defineOperations(
    Test.MyDerivedClass,
    Test.MyDerivedClassPrx,
    iceC_Test_MyDerivedClass_ids,
    "::Test::MyDerivedClass",
    {
        "echo": [, , , [9], [[9]], , , , ]
    });

const iceC_Test_MyOtherDerivedClass_ids = [
    "::Ice::Object",
    "::Test::MyClass",
    "::Test::MyOtherDerivedClass"
];

Test.MyOtherDerivedClass = class extends Ice.Object
{
    static get _iceImplements()
    {
        return [
            Test.MyClass
        ];
    }
};

Test.MyOtherDerivedClassPrx = class extends Ice.ObjectPrx
{
    static get _implements()
    {
        return [
            Test.MyClassPrx];
    }
};
Ice.TypeRegistry.declareProxyType("Test.MyOtherDerivedClassPrx", Test.MyOtherDerivedClassPrx);

Ice.defineOperations(
    Test.MyOtherDerivedClass,
    Test.MyOtherDerivedClassPrx,
    iceC_Test_MyOtherDerivedClass_ids,
    "::Test::MyOtherDerivedClass");

const iceC_Test_DiamondClass_ids = [
    "::Ice::Object",
    "::Test::DiamondClass",
    "::Test::MyClass",
    "::Test::MyDerivedClass",
    "::Test::MyOtherDerivedClass"
];

Test.DiamondClass = class extends Ice.Object
{
    static get _iceImplements()
    {
        return [
            Test.MyDerivedClass,
            Test.MyOtherDerivedClass
        ];
    }
};

Test.DiamondClassPrx = class extends Ice.ObjectPrx
{
    static get _implements()
    {
        return [
            Test.MyDerivedClassPrx,
            Test.MyOtherDerivedClassPrx];
    }
};
Ice.TypeRegistry.declareProxyType("Test.DiamondClassPrx", Test.DiamondClassPrx);

Ice.defineOperations(
    Test.DiamondClass,
    Test.DiamondClassPrx,
    iceC_Test_DiamondClass_ids,
    "::Test::DiamondClass");
