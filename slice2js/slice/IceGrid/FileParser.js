//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `FileParser.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

import * as Ice_Long from "../Ice/Long.js";
import * as Ice_Object from "../Ice/Object.js";
import * as Ice_ObjectPrx from "../Ice/ObjectPrx.js";
import * as Ice_Operation from "../Ice/Operation.js";
import * as Ice_StreamHelpers from "../Ice/StreamHelpers.js";
import * as Ice_TypeRegistry from "../Ice/TypeRegistry.js";
import * as Ice_UserException from "../Ice/UserException.js";
import * as Ice_Value from "../Ice/Value.js";

const Ice = {
    ...Ice_Long,
    ...Ice_Object,
    ...Ice_ObjectPrx,
    ...Ice_Operation,
    ...Ice_StreamHelpers,
    ...Ice_TypeRegistry,
    ...Ice_UserException,
    ...Ice_Value,
};

import { 
    IceGrid as IceGrid_Admin, } from "./Admin.js"

const IceGrid = {
    ...IceGrid_Admin,
};

export { IceGrid };

/**
 *  This exception is raised if an error occurs during parsing.
 **/
IceGrid.ParseException = class extends Ice.UserException
{
    constructor(reason = "", _cause = "")
    {
        super(_cause);
        this.reason = reason;
    }

    static get _parent()
    {
        return Ice.UserException;
    }

    static get _ice_id()
    {
        return "::IceGrid::ParseException";
    }

    _mostDerivedType()
    {
        return IceGrid.ParseException;
    }

    _writeMemberImpl(ostr)
    {
        ostr.writeString(this.reason);
    }

    _readMemberImpl(istr)
    {
        this.reason = istr.readString();
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "IceGrid.ParseException",
    IceGrid.ParseException);

const iceC_IceGrid_FileParser_ids = [
    "::Ice::Object",
    "::IceGrid::FileParser"
];

/**
 *  <code>icegridadmin</code> provides a {@link FileParser} object to transform XML files into
 *  {@link ApplicationDescriptor} objects.
 **/
IceGrid.FileParser = class extends Ice.Object
{
};

IceGrid.FileParserPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("IceGrid.FileParserPrx", IceGrid.FileParserPrx);

Ice.defineOperations(
    IceGrid.FileParser,
    IceGrid.FileParserPrx,
    iceC_IceGrid_FileParser_ids,
    "::IceGrid::FileParser",
    {
        "parse": [, 2, , [IceGrid.ApplicationDescriptor], [[7], ["IceGrid.AdminPrx"]], ,
        [
            IceGrid.ParseException
        ], , true]
    });
