//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Process.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

import * as Ice_Long from "../Ice/Long.js";
import * as Ice_Object from "../Ice/Object.js";
import * as Ice_ObjectPrx from "../Ice/ObjectPrx.js";
import * as Ice_Operation from "../Ice/Operation.js";
import * as Ice_StreamHelpers from "../Ice/StreamHelpers.js";
import * as Ice_TypeRegistry from "../Ice/TypeRegistry.js";
import * as Ice_Value from "../Ice/Value.js";

const Ice = {
    ...Ice_Long,
    ...Ice_Object,
    ...Ice_ObjectPrx,
    ...Ice_Operation,
    ...Ice_StreamHelpers,
    ...Ice_TypeRegistry,
    ...Ice_Value,
};


export { Ice };

const iceC_Ice_Process_ids = [
    "::Ice::Object",
    "::Ice::Process"
];

/**
 * An administrative interface for process management. Managed servers must implement this interface.
 * <p class="Note">A servant implementing this interface is a potential target for denial-of-service attacks,
 * therefore proper security precautions should be taken. For example, the servant can use a UUID to make its
 * identity harder to guess, and be registered in an object adapter with a secured endpoint.
 **/
Ice.Process = class extends Ice.Object
{
};

Ice.ProcessPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Ice.ProcessPrx", Ice.ProcessPrx);

Ice.defineOperations(
    Ice.Process,
    Ice.ProcessPrx,
    iceC_Ice_Process_ids,
    "::Ice::Process",
    {
        "shutdown": [, , , , , , , , ],
        "writeMessage": [, , , , [[7], [3]], , , , ]
    });
