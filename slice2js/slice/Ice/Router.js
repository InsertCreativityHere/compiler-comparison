//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file 'Router.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

import * as Ice_Long from "../Ice/Long.js";
import * as Ice_Object from "../Ice/Object.js";
import * as Ice_ObjectPrx from "../Ice/ObjectPrx.js";
import * as Ice_Operation from "../Ice/Operation.js";
import * as Ice_StreamHelpers from "../Ice/StreamHelpers.js";
import * as Ice_TypeRegistry from "../Ice/TypeRegistry.js";
import * as Ice_Value from "../Ice/Value.js";
import { Ice as Ice_BuiltinSequences } from "./BuiltinSequences.js"

const Ice = {
    ...Ice_Long,
    ...Ice_Object,
    ...Ice_ObjectPrx,
    ...Ice_Operation,
    ...Ice_StreamHelpers,
    ...Ice_TypeRegistry,
    ...Ice_Value,
    ...Ice_BuiltinSequences,
};


export { Ice };

const iceC_Ice_Router_ids = [
    "::Ice::Object",
    "::Ice::Router"
];

/**
 * The Ice router interface. Routers can be set either globally though the <code>Communicator</code>, or with
 * <code>ice_router</code> on specific proxies.
 **/
Ice.Router = class extends Ice.Object
{
};

/**
 * The Ice router interface. Routers can be set either globally though the <code>Communicator</code>, or with
 * <code>ice_router</code> on specific proxies.
 **/
Ice.RouterPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Ice.RouterPrx", Ice.RouterPrx);

Ice.defineOperations(
    Ice.Router,
    Ice.RouterPrx,
    iceC_Ice_Router_ids,
    "::Ice::Router",
    {
        "getClientProxy": [, 2, , [9], , [[1, , 1]], , , ],
        "getServerProxy": [, 2, , [9], , , , , ],
        "addProxies": [, 2, , [Ice.ObjectProxySeqHelper], [[Ice.ObjectProxySeqHelper]], , , , ]
    });

const iceC_Ice_RouterFinder_ids = [
    "::Ice::Object",
    "::Ice::RouterFinder"
];

/**
 * This interface should be implemented by services implementing the Ice::Router interface. It should be advertised
 * through an Ice object with the identity 'Ice/RouterFinder'. This allows clients to retrieve the router proxy
 * with just the endpoint information of the service.
 **/
Ice.RouterFinder = class extends Ice.Object
{
};

/**
 * This interface should be implemented by services implementing the Ice::Router interface. It should be advertised
 * through an Ice object with the identity 'Ice/RouterFinder'. This allows clients to retrieve the router proxy
 * with just the endpoint information of the service.
 **/
Ice.RouterFinderPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Ice.RouterFinderPrx", Ice.RouterFinderPrx);

Ice.defineOperations(
    Ice.RouterFinder,
    Ice.RouterFinderPrx,
    iceC_Ice_RouterFinder_ids,
    "::Ice::RouterFinder",
    {
        "getRouter": [, , , ["Ice.RouterPrx"], , , , , ]
    });
