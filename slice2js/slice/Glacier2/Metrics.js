//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Metrics.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

import * as Ice_Long from "../Ice/Long.js";
import * as Ice_Object from "../Ice/Object.js";
import * as Ice_StreamHelpers from "../Ice/StreamHelpers.js";
import * as Ice_TypeRegistry from "../Ice/TypeRegistry.js";
import * as Ice_Value from "../Ice/Value.js";

const Ice = {
    ...Ice_Long,
    ...Ice_Object,
    ...Ice_StreamHelpers,
    ...Ice_TypeRegistry,
    ...Ice_Value,
};

import { 
    IceMX as IceMX_Ice_Metrics, } from "../Ice/Metrics.js"

const IceMX = {
    ...IceMX_Ice_Metrics,
};

export { IceMX };

/**
 * Provides information on Glacier2 sessions.
 **/
IceMX.SessionMetrics = class extends IceMX.Metrics
{
    constructor(id, total, current, totalLifetime, failures, forwardedClient = 0, forwardedServer = 0, routingTableSize = 0, queuedClient = 0, queuedServer = 0, overriddenClient = 0, overriddenServer = 0)
    {
        super(id, total, current, totalLifetime, failures);
        this.forwardedClient = forwardedClient;
        this.forwardedServer = forwardedServer;
        this.routingTableSize = routingTableSize;
        this.queuedClient = queuedClient;
        this.queuedServer = queuedServer;
        this.overriddenClient = overriddenClient;
        this.overriddenServer = overriddenServer;
    }

    _iceWriteMemberImpl(ostr)
    {
        ostr.writeInt(this.forwardedClient);
        ostr.writeInt(this.forwardedServer);
        ostr.writeInt(this.routingTableSize);
        ostr.writeInt(this.queuedClient);
        ostr.writeInt(this.queuedServer);
        ostr.writeInt(this.overriddenClient);
        ostr.writeInt(this.overriddenServer);
    }

    _iceReadMemberImpl(istr)
    {
        this.forwardedClient = istr.readInt();
        this.forwardedServer = istr.readInt();
        this.routingTableSize = istr.readInt();
        this.queuedClient = istr.readInt();
        this.queuedServer = istr.readInt();
        this.overriddenClient = istr.readInt();
        this.overriddenServer = istr.readInt();
    }
};

Ice.defineValue(IceMX.SessionMetrics, "::IceMX::SessionMetrics");
Ice.TypeRegistry.declareValueType("IceMX.SessionMetrics", IceMX.SessionMetrics);
