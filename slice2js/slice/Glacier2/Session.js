//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Session.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

import * as Ice_Long from "../Ice/Long.js";
import * as Ice_Object from "../Ice/Object.js";
import * as Ice_ObjectPrx from "../Ice/ObjectPrx.js";
import * as Ice_Operation from "../Ice/Operation.js";
import * as Ice_StreamHelpers from "../Ice/StreamHelpers.js";
import * as Ice_TypeRegistry from "../Ice/TypeRegistry.js";
import * as Ice_UserException from "../Ice/UserException.js";
import * as Ice_Value from "../Ice/Value.js";
import { Ice as Ice_Ice_BuiltinSequences } from "../Ice/BuiltinSequences.js"
import { Ice as Ice_Ice_Identity } from "../Ice/Identity.js"

const Ice = {
    ...Ice_Long,
    ...Ice_Object,
    ...Ice_ObjectPrx,
    ...Ice_Operation,
    ...Ice_StreamHelpers,
    ...Ice_TypeRegistry,
    ...Ice_UserException,
    ...Ice_Value,
    ...Ice_Ice_BuiltinSequences,
    ...Ice_Ice_Identity,
};

import { 
    Glacier2 as Glacier2_SSLInfo, } from "./SSLInfo.js"

const Glacier2 = {
    ...Glacier2_SSLInfo,
};

export { Glacier2 };

/**
 *  This exception is raised if an attempt to create a new session failed.
 **/
Glacier2.CannotCreateSessionException = class extends Ice.UserException
{
    constructor(reason = "", _cause = "")
    {
        super(_cause);
        this.reason = reason;
    }

    static get _parent()
    {
        return Ice.UserException;
    }

    static get _ice_id()
    {
        return "::Glacier2::CannotCreateSessionException";
    }

    _mostDerivedType()
    {
        return Glacier2.CannotCreateSessionException;
    }

    _writeMemberImpl(ostr)
    {
        ostr.writeString(this.reason);
    }

    _readMemberImpl(istr)
    {
        this.reason = istr.readString();
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "Glacier2.CannotCreateSessionException",
    Glacier2.CannotCreateSessionException);

const iceC_Glacier2_Session_ids = [
    "::Glacier2::Session",
    "::Ice::Object"
];

/**
 *  A client-visible session object, which is tied to the lifecycle of a {@link Router}.
 *  @see Router
 *  @see SessionManager
 **/
Glacier2.Session = class extends Ice.Object
{
};

Glacier2.SessionPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Glacier2.SessionPrx", Glacier2.SessionPrx);

Ice.defineOperations(
    Glacier2.Session,
    Glacier2.SessionPrx,
    iceC_Glacier2_Session_ids,
    "::Glacier2::Session",
    {
        "destroy": [, , , , , , , , ]
    });

const iceC_Glacier2_StringSet_ids = [
    "::Glacier2::StringSet",
    "::Ice::Object"
];

/**
 *  An object for managing the set of identity constraints for specific parts of object identity on a
 *  {@link Session}.
 *  @see Session
 *  @see SessionControl
 **/
Glacier2.StringSet = class extends Ice.Object
{
};

Glacier2.StringSetPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Glacier2.StringSetPrx", Glacier2.StringSetPrx);

Ice.defineOperations(
    Glacier2.StringSet,
    Glacier2.StringSetPrx,
    iceC_Glacier2_StringSet_ids,
    "::Glacier2::StringSet",
    {
        "add": [, 2, , , [[Ice.StringSeqHelper]], , , , ],
        "remove": [, 2, , , [[Ice.StringSeqHelper]], , , , ],
        "get": [, 2, , [Ice.StringSeqHelper], , , , , ]
    });

const iceC_Glacier2_IdentitySet_ids = [
    "::Glacier2::IdentitySet",
    "::Ice::Object"
];

/**
 *  An object for managing the set of object identity constraints on a {@link Session}.
 *  @see Session
 *  @see SessionControl
 **/
Glacier2.IdentitySet = class extends Ice.Object
{
};

Glacier2.IdentitySetPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Glacier2.IdentitySetPrx", Glacier2.IdentitySetPrx);

Ice.defineOperations(
    Glacier2.IdentitySet,
    Glacier2.IdentitySetPrx,
    iceC_Glacier2_IdentitySet_ids,
    "::Glacier2::IdentitySet",
    {
        "add": [, 2, , , [[Ice.IdentitySeqHelper]], , , , ],
        "remove": [, 2, , , [[Ice.IdentitySeqHelper]], , , , ],
        "get": [, 2, , [Ice.IdentitySeqHelper], , , , , ]
    });

const iceC_Glacier2_SessionControl_ids = [
    "::Glacier2::SessionControl",
    "::Ice::Object"
];

/**
 *  An administrative session control object, which is tied to the lifecycle of a {@link Session}.
 *  @see Session
 **/
Glacier2.SessionControl = class extends Ice.Object
{
};

Glacier2.SessionControlPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Glacier2.SessionControlPrx", Glacier2.SessionControlPrx);

Ice.defineOperations(
    Glacier2.SessionControl,
    Glacier2.SessionControlPrx,
    iceC_Glacier2_SessionControl_ids,
    "::Glacier2::SessionControl",
    {
        "categories": [, , , ["Glacier2.StringSetPrx"], , , , , ],
        "adapterIds": [, , , ["Glacier2.StringSetPrx"], , , , , ],
        "identities": [, , , ["Glacier2.IdentitySetPrx"], , , , , ],
        "getSessionTimeout": [, 2, , [3], , , , , ],
        "destroy": [, , , , , , , , ]
    });

const iceC_Glacier2_SessionManager_ids = [
    "::Glacier2::SessionManager",
    "::Ice::Object"
];

/**
 *  The session manager for username/password authenticated users that is responsible for managing {@link Session}
 *  objects. New session objects are created by the {@link Router} object calling on an application-provided
 *  session manager. If no session manager is provided by the application, no client-visible sessions are passed to
 *  the client.
 *  @see Router
 *  @see Session
 **/
Glacier2.SessionManager = class extends Ice.Object
{
};

Glacier2.SessionManagerPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Glacier2.SessionManagerPrx", Glacier2.SessionManagerPrx);

Ice.defineOperations(
    Glacier2.SessionManager,
    Glacier2.SessionManagerPrx,
    iceC_Glacier2_SessionManager_ids,
    "::Glacier2::SessionManager",
    {
        "create": [, , , ["Glacier2.SessionPrx"], [[7], ["Glacier2.SessionControlPrx"]], ,
        [
            Glacier2.CannotCreateSessionException
        ], , ]
    });

const iceC_Glacier2_SSLSessionManager_ids = [
    "::Glacier2::SSLSessionManager",
    "::Ice::Object"
];

/**
 *  The session manager for SSL authenticated users that is responsible for managing {@link Session} objects. New
 *  session objects are created by the {@link Router} object calling on an application-provided session manager. If
 *  no session manager is provided by the application, no client-visible sessions are passed to the client.
 *  @see Router
 *  @see Session
 **/
Glacier2.SSLSessionManager = class extends Ice.Object
{
};

Glacier2.SSLSessionManagerPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Glacier2.SSLSessionManagerPrx", Glacier2.SSLSessionManagerPrx);

Ice.defineOperations(
    Glacier2.SSLSessionManager,
    Glacier2.SSLSessionManagerPrx,
    iceC_Glacier2_SSLSessionManager_ids,
    "::Glacier2::SSLSessionManager",
    {
        "create": [, , , ["Glacier2.SessionPrx"], [[Glacier2.SSLInfo], ["Glacier2.SessionControlPrx"]], ,
        [
            Glacier2.CannotCreateSessionException
        ], , ]
    });
