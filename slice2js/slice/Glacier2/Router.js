//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Router.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

import * as Ice_Exception from "../Ice/Exception.js";
import * as Ice_Long from "../Ice/Long.js";
import * as Ice_Object from "../Ice/Object.js";
import * as Ice_ObjectPrx from "../Ice/ObjectPrx.js";
import * as Ice_Operation from "../Ice/Operation.js";
import * as Ice_Stream from "../Ice/Stream.js";
import * as Ice_StreamHelpers from "../Ice/StreamHelpers.js";
import * as Ice_TypeRegistry from "../Ice/TypeRegistry.js";
import * as Ice_Value from "../Ice/Value.js";
import { Ice as Ice_Ice_Router } from "../Ice/Router.js"

const Ice = {
    ...Ice_Exception,
    ...Ice_Long,
    ...Ice_Object,
    ...Ice_ObjectPrx,
    ...Ice_Operation,
    ...Ice_Stream,
    ...Ice_StreamHelpers,
    ...Ice_TypeRegistry,
    ...Ice_Value,
    ...Ice_Ice_Router,
};

import { 
    Glacier2 as Glacier2_PermissionsVerifier, } from "./PermissionsVerifier.js"
import { 
    Glacier2 as Glacier2_Session, } from "./Session.js"

const Glacier2 = {
    ...Glacier2_PermissionsVerifier,
    ...Glacier2_Session,
};

export { Glacier2 };

/**
 *  This exception is raised if a client tries to destroy a session with a router, but no session exists for the
 *  client.
 *  @see Router#destroySession
 **/
Glacier2.SessionNotExistException = class extends Ice.UserException
{
    constructor(_cause = "")
    {
        super(_cause);
    }

    static get _parent()
    {
        return Ice.UserException;
    }

    static get _id()
    {
        return "::Glacier2::SessionNotExistException";
    }

    _mostDerivedType()
    {
        return Glacier2.SessionNotExistException;
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "Glacier2.SessionNotExistException",
    Glacier2.SessionNotExistException);

const iceC_Glacier2_Router_ids = [
    "::Glacier2::Router",
    "::Ice::Object",
    "::Ice::Router"
];

/**
 *  The Glacier2 specialization of the <code>Ice::Router</code> interface.
 **/
Glacier2.Router = class extends Ice.Object
{
    static get _iceImplements()
    {
        return [
            Ice.Router
        ];
    }
};

Glacier2.RouterPrx = class extends Ice.ObjectPrx
{
    static get _implements()
    {
        return [
            Ice.RouterPrx];
    }
};
Ice.TypeRegistry.declareProxyType("Glacier2.RouterPrx", Glacier2.RouterPrx);

Ice.defineOperations(
    Glacier2.Router,
    Glacier2.RouterPrx,
    iceC_Glacier2_Router_ids,
    "::Glacier2::Router",
    {
        "getCategoryForClient": [, 2, , [7], , , , , ],
        "createSession": [, , , ["Glacier2.SessionPrx"], [[7], [7]], ,
        [
            Glacier2.PermissionDeniedException,
            Glacier2.CannotCreateSessionException
        ], , ],
        "createSessionFromSecureConnection": [, , , ["Glacier2.SessionPrx"], , ,
        [
            Glacier2.PermissionDeniedException,
            Glacier2.CannotCreateSessionException
        ], , ],
        "refreshSession": [, , , , , ,
        [
            Glacier2.SessionNotExistException
        ], , ],
        "destroySession": [, , , , , ,
        [
            Glacier2.SessionNotExistException
        ], , ],
        "getSessionTimeout": [, 2, , [4], , , , , ],
        "getACMTimeout": [, 2, , [3], , , , , ]
    });
