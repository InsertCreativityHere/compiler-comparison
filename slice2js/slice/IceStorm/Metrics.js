//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Metrics.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

import * as Ice_Long from "../Ice/Long.js";
import * as Ice_Object from "../Ice/Object.js";
import * as Ice_ObjectPrx from "../Ice/ObjectPrx.js";
import * as Ice_StreamHelpers from "../Ice/StreamHelpers.js";
import * as Ice_TypeRegistry from "../Ice/TypeRegistry.js";
import * as Ice_Value from "../Ice/Value.js";

const Ice = {
    ...Ice_Long,
    ...Ice_Object,
    ...Ice_ObjectPrx,
    ...Ice_StreamHelpers,
    ...Ice_TypeRegistry,
    ...Ice_Value,
};

import { 
    IceMX as IceMX_Ice_Metrics, } from "../Ice/Metrics.js"

const IceMX = {
    ...IceMX_Ice_Metrics,
};

export { IceMX };

/**
 * Provides information on IceStorm topics.
 **/
IceMX.TopicMetrics = class extends IceMX.Metrics
{
    constructor(id, total, current, totalLifetime, failures, published = new Ice.Long(0, 0), forwarded = new Ice.Long(0, 0))
    {
        super(id, total, current, totalLifetime, failures);
        this.published = published;
        this.forwarded = forwarded;
    }

    _iceWriteMemberImpl(ostr)
    {
        ostr.writeLong(this.published);
        ostr.writeLong(this.forwarded);
    }

    _iceReadMemberImpl(istr)
    {
        this.published = istr.readLong();
        this.forwarded = istr.readLong();
    }
};

Ice.defineValue(IceMX.TopicMetrics, "::IceMX::TopicMetrics");
Ice.TypeRegistry.declareValueType("IceMX.TopicMetrics", IceMX.TopicMetrics);

/**
 * Provides information on IceStorm subscribers.
 **/
IceMX.SubscriberMetrics = class extends IceMX.Metrics
{
    constructor(id, total, current, totalLifetime, failures, queued = 0, outstanding = 0, delivered = new Ice.Long(0, 0))
    {
        super(id, total, current, totalLifetime, failures);
        this.queued = queued;
        this.outstanding = outstanding;
        this.delivered = delivered;
    }

    _iceWriteMemberImpl(ostr)
    {
        ostr.writeInt(this.queued);
        ostr.writeInt(this.outstanding);
        ostr.writeLong(this.delivered);
    }

    _iceReadMemberImpl(istr)
    {
        this.queued = istr.readInt();
        this.outstanding = istr.readInt();
        this.delivered = istr.readLong();
    }
};

Ice.defineValue(IceMX.SubscriberMetrics, "::IceMX::SubscriberMetrics");
Ice.TypeRegistry.declareValueType("IceMX.SubscriberMetrics", IceMX.SubscriberMetrics);
