//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `FileInfo.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

/* slice2js browser-bundle-skip */
const _ModuleRegistry = require("../Ice/ModuleRegistry").Ice._ModuleRegistry;
require("../Ice/Struct");
require("../Ice/Long");
require("../Ice/HashMap");
require("../Ice/HashUtil");
require("../Ice/ArrayUtil");
require("../Ice/StreamHelpers");
require("../Ice/BuiltinSequences");
const Ice = _ModuleRegistry.module("Ice");

const Slice = Ice.Slice;
/* slice2js browser-bundle-skip-end */
/* slice2js browser-bundle-skip */

let IcePatch2 = _ModuleRegistry.module("IcePatch2");
/* slice2js browser-bundle-skip-end */

/**
 * Basic information about a single file.
 *
 **/
IcePatch2.FileInfo = class
{
    constructor(path = "", checksum = null, size = 0, executable = false)
    {
        this.path = path;
        this.checksum = checksum;
        this.size = size;
        this.executable = executable;
    }

    _write(ostr)
    {
        ostr.writeString(this.path);
        Ice.ByteSeqHelper.write(ostr, this.checksum);
        ostr.writeInt(this.size);
        ostr.writeBool(this.executable);
    }

    _read(istr)
    {
        this.path = istr.readString();
        this.checksum = Ice.ByteSeqHelper.read(istr);
        this.size = istr.readInt();
        this.executable = istr.readBool();
    }

    static get minWireSize()
    {
        return  7;
    }
};

Slice.defineStruct(IcePatch2.FileInfo, true, true);

Slice.defineSequence(IcePatch2, "FileInfoSeqHelper", "IcePatch2.FileInfo", false);

/**
 * Basic information about a single file.
 *
 **/
IcePatch2.LargeFileInfo = class
{
    constructor(path = "", checksum = null, size = new Ice.Long(0, 0), executable = false)
    {
        this.path = path;
        this.checksum = checksum;
        this.size = size;
        this.executable = executable;
    }

    _write(ostr)
    {
        ostr.writeString(this.path);
        Ice.ByteSeqHelper.write(ostr, this.checksum);
        ostr.writeLong(this.size);
        ostr.writeBool(this.executable);
    }

    _read(istr)
    {
        this.path = istr.readString();
        this.checksum = Ice.ByteSeqHelper.read(istr);
        this.size = istr.readLong();
        this.executable = istr.readBool();
    }

    static get minWireSize()
    {
        return  11;
    }
};

Slice.defineStruct(IcePatch2.LargeFileInfo, true, true);

Slice.defineSequence(IcePatch2, "LargeFileInfoSeqHelper", "IcePatch2.LargeFileInfo", false);
/* slice2js browser-bundle-skip */
exports.IcePatch2 = IcePatch2;
/* slice2js browser-bundle-skip-end */
