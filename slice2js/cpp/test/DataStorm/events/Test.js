//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

import { Ice } from "ice";


export const Test = {};

Test.StructValue = class
{
    constructor(firstName = "", lastName = "", age = 0)
    {
        this.firstName = firstName;
        this.lastName = lastName;
        this.age = age;
    }

    _write(ostr)
    {
        ostr.writeString(this.firstName);
        ostr.writeString(this.lastName);
        ostr.writeInt(this.age);
    }

    _read(istr)
    {
        this.firstName = istr.readString();
        this.lastName = istr.readString();
        this.age = istr.readInt();
    }

    static get minWireSize()
    {
        return  6;
    }
};

Ice.defineStruct(Test.StructValue, true, true);

Test.Base = class extends Ice.Value
{
    constructor(b = "")
    {
        super();
        this.b = b;
    }

    _iceWriteMemberImpl(ostr)
    {
        ostr.writeString(this.b);
    }

    _iceReadMemberImpl(istr)
    {
        this.b = istr.readString();
    }
};

Ice.defineValue(Test.Base, "::Test::Base");
Ice.TypeRegistry.declareValueType("Test.Base", Test.Base);

Test.Extended = class extends Test.Base
{
    constructor(b, e = 0)
    {
        super(b);
        this.e = e;
    }

    _iceWriteMemberImpl(ostr)
    {
        ostr.writeInt(this.e);
    }

    _iceReadMemberImpl(istr)
    {
        this.e = istr.readInt();
    }
};

Ice.defineValue(Test.Extended, "::Test::Extended");
Ice.TypeRegistry.declareValueType("Test.Extended", Test.Extended);
