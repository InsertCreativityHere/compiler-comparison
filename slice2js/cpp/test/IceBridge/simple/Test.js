//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

import { Ice } from "ice";


export const Test = {};

const iceC_Test_Callback_ids = [
    "::Ice::Object",
    "::Test::Callback"
];

Test.Callback = class extends Ice.Object
{
};

Test.CallbackPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Test.CallbackPrx", Test.CallbackPrx);

Ice.defineOperations(
    Test.Callback,
    Test.CallbackPrx,
    iceC_Test_Callback_ids,
    "::Test::Callback",
    {
        "ping": [, , , , , , , , ],
        "getCount": [, , , [3], , , , , ],
        "datagram": [, , , , , , , , ],
        "getDatagramCount": [, , , [3], , , , , ]
    });

const iceC_Test_MyClass_ids = [
    "::Ice::Object",
    "::Test::MyClass"
];

Test.MyClass = class extends Ice.Object
{
};

Test.MyClassPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Test.MyClassPrx", Test.MyClassPrx);

Ice.defineOperations(
    Test.MyClass,
    Test.MyClassPrx,
    iceC_Test_MyClass_ids,
    "::Test::MyClass",
    {
        "callCallback": [, , , , , , , , ],
        "getCallbackCount": [, , , [3], , , , , ],
        "incCounter": [, , , , [[3]], , , , ],
        "waitCounter": [, , , , [[3]], , , , ],
        "getConnectionCount": [, , , [3], , , , , ],
        "getConnectionInfo": [, , , [7], , , , , ],
        "closeConnection": [, , , , [[1]], , , , ],
        "datagram": [, , , , , , , , ],
        "getDatagramCount": [, , , [3], , , , , ],
        "callDatagramCallback": [, , , , , , , , ],
        "getCallbackDatagramCount": [, , , [3], , , , , ],
        "shutdown": [, , , , , , , , ]
    });
