//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

(function(module, require, exports)
{
    const Ice = require("ice").Ice;
    const _ModuleRegistry = Ice._ModuleRegistry;
    const Slice = Ice.Slice;

    let Test = _ModuleRegistry.module("Test");

    const iceC_Test_Callback_ids = [
        "::Ice::Object",
        "::Test::Callback"
    ];

    Test.Callback = class extends Ice.Object
    {
    };

    Test.CallbackPrx = class extends Ice.ObjectPrx
    {
    };

    Slice.defineOperations(Test.Callback, Test.CallbackPrx, iceC_Test_Callback_ids, "::Test::Callback",
    {
        "ping": [, , , , , , , , , ],
        "getCount": [, , , , [3], , , , , ],
        "datagram": [, , , , , , , , , ],
        "getDatagramCount": [, , , , [3], , , , , ]
    });

    const iceC_Test_MyClass_ids = [
        "::Ice::Object",
        "::Test::MyClass"
    ];

    Test.MyClass = class extends Ice.Object
    {
    };

    Test.MyClassPrx = class extends Ice.ObjectPrx
    {
    };

    Slice.defineOperations(Test.MyClass, Test.MyClassPrx, iceC_Test_MyClass_ids, "::Test::MyClass",
    {
        "callCallback": [, , , , , , , , , ],
        "getCallbackCount": [, , , , [3], , , , , ],
        "incCounter": [, , , , , [[3]], , , , ],
        "waitCounter": [, , , , , [[3]], , , , ],
        "getConnectionCount": [, , , , [3], , , , , ],
        "getConnectionInfo": [, , , , [7], , , , , ],
        "closeConnection": [, , , , , [[1]], , , , ],
        "datagram": [, , , , , , , , , ],
        "getDatagramCount": [, , , , [3], , , , , ],
        "callDatagramCallback": [, , , , , , , , , ],
        "getCallbackDatagramCount": [, , , , [3], , , , , ],
        "getHeartbeatCount": [, , , , [3], , , , , ],
        "enableHeartbeats": [, , , , , , , , , ],
        "shutdown": [, , , , , , , , , ]
    });
    exports.Test = Test;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require :
 (typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope) ? self.Ice._require : window.Ice._require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports :
 (typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope) ? self : window));
