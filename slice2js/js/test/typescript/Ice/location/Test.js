//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

import { Ice } from "ice";
const _ModuleRegistry = Ice._ModuleRegistry;
const Slice = Ice.Slice;

let Test = _ModuleRegistry.module("Test");

const iceC_Test_TestLocatorRegistry_ids = [
    "::Ice::LocatorRegistry",
    "::Ice::Object",
    "::Test::TestLocatorRegistry"
];

Test.TestLocatorRegistry = class extends Ice.Object
{
    static get _iceImplements()
    {
        return [
            Ice.LocatorRegistry
        ];
    }
};

Test.TestLocatorRegistryPrx = class extends Ice.ObjectPrx
{
    static get _implements()
    {
        return [
            Ice.LocatorRegistryPrx];
    }
};

Slice.defineOperations(Test.TestLocatorRegistry, Test.TestLocatorRegistryPrx, iceC_Test_TestLocatorRegistry_ids, "::Test::TestLocatorRegistry",
{
    "addObject": [, , , , , [[9]], , , , ]
});

const iceC_Test_TestLocator_ids = [
    "::Ice::Locator",
    "::Ice::Object",
    "::Test::TestLocator"
];

Test.TestLocator = class extends Ice.Object
{
    static get _iceImplements()
    {
        return [
            Ice.Locator
        ];
    }
};

Test.TestLocatorPrx = class extends Ice.ObjectPrx
{
    static get _implements()
    {
        return [
            Ice.LocatorPrx];
    }
};

Slice.defineOperations(Test.TestLocator, Test.TestLocatorPrx, iceC_Test_TestLocator_ids, "::Test::TestLocator",
{
    "getRequestCount": [, 2, 2, , [3], , , , , ]
});

const iceC_Test_ServerManager_ids = [
    "::Ice::Object",
    "::Test::ServerManager"
];

Test.ServerManager = class extends Ice.Object
{
};

Test.ServerManagerPrx = class extends Ice.ObjectPrx
{
};

Slice.defineOperations(Test.ServerManager, Test.ServerManagerPrx, iceC_Test_ServerManager_ids, "::Test::ServerManager",
{
    "startServer": [, , , , , , , , , ],
    "shutdown": [, , , , , , , , , ]
});

const iceC_Test_Hello_ids = [
    "::Ice::Object",
    "::Test::Hello"
];

Test.Hello = class extends Ice.Object
{
};

Test.HelloPrx = class extends Ice.ObjectPrx
{
};

Slice.defineOperations(Test.Hello, Test.HelloPrx, iceC_Test_Hello_ids, "::Test::Hello",
{
    "sayHello": [, , , , , , , , , ]
});

const iceC_Test_TestIntf_ids = [
    "::Ice::Object",
    "::Test::TestIntf"
];

Test.TestIntf = class extends Ice.Object
{
};

Test.TestIntfPrx = class extends Ice.ObjectPrx
{
};

Slice.defineOperations(Test.TestIntf, Test.TestIntfPrx, iceC_Test_TestIntf_ids, "::Test::TestIntf",
{
    "shutdown": [, , , , , , , , , ],
    "getHello": [, , , , ["Test.HelloPrx"], , , , , ],
    "getReplicatedHello": [, , , , ["Test.HelloPrx"], , , , , ],
    "migrateHello": [, , , , , , , , , ]
});
export { Test };
