//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

import { Ice } from "ice";


export const Test = {};

Test.Base = class extends Ice.UserException
{
    constructor(b = "", _cause = "")
    {
        super(_cause);
        this.b = b;
    }

    static get _parent()
    {
        return Ice.UserException;
    }

    static get _id()
    {
        return "::Test::Base";
    }

    _mostDerivedType()
    {
        return Test.Base;
    }

    _writeMemberImpl(ostr)
    {
        ostr.writeString(this.b);
    }

    _readMemberImpl(istr)
    {
        this.b = istr.readString();
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "Test.Base",
    Test.Base);

Test.KnownDerived = class extends Test.Base
{
    constructor(b, kd = "", _cause = "")
    {
        super(b, _cause);
        this.kd = kd;
    }

    static get _parent()
    {
        return Test.Base;
    }

    static get _id()
    {
        return "::Test::KnownDerived";
    }

    _mostDerivedType()
    {
        return Test.KnownDerived;
    }

    _writeMemberImpl(ostr)
    {
        ostr.writeString(this.kd);
    }

    _readMemberImpl(istr)
    {
        this.kd = istr.readString();
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "Test.KnownDerived",
    Test.KnownDerived);

Test.KnownIntermediate = class extends Test.Base
{
    constructor(b, ki = "", _cause = "")
    {
        super(b, _cause);
        this.ki = ki;
    }

    static get _parent()
    {
        return Test.Base;
    }

    static get _id()
    {
        return "::Test::KnownIntermediate";
    }

    _mostDerivedType()
    {
        return Test.KnownIntermediate;
    }

    _writeMemberImpl(ostr)
    {
        ostr.writeString(this.ki);
    }

    _readMemberImpl(istr)
    {
        this.ki = istr.readString();
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "Test.KnownIntermediate",
    Test.KnownIntermediate);

Test.KnownMostDerived = class extends Test.KnownIntermediate
{
    constructor(b, ki, kmd = "", _cause = "")
    {
        super(b, ki, _cause);
        this.kmd = kmd;
    }

    static get _parent()
    {
        return Test.KnownIntermediate;
    }

    static get _id()
    {
        return "::Test::KnownMostDerived";
    }

    _mostDerivedType()
    {
        return Test.KnownMostDerived;
    }

    _writeMemberImpl(ostr)
    {
        ostr.writeString(this.kmd);
    }

    _readMemberImpl(istr)
    {
        this.kmd = istr.readString();
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "Test.KnownMostDerived",
    Test.KnownMostDerived);

Test.KnownPreserved = class extends Test.Base
{
    constructor(b, kp = "", _cause = "")
    {
        super(b, _cause);
        this.kp = kp;
    }

    static get _parent()
    {
        return Test.Base;
    }

    static get _id()
    {
        return "::Test::KnownPreserved";
    }

    _mostDerivedType()
    {
        return Test.KnownPreserved;
    }

    _writeMemberImpl(ostr)
    {
        ostr.writeString(this.kp);
    }

    _readMemberImpl(istr)
    {
        this.kp = istr.readString();
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "Test.KnownPreserved",
    Test.KnownPreserved);

Test.KnownPreservedDerived = class extends Test.KnownPreserved
{
    constructor(b, kp, kpd = "", _cause = "")
    {
        super(b, kp, _cause);
        this.kpd = kpd;
    }

    static get _parent()
    {
        return Test.KnownPreserved;
    }

    static get _id()
    {
        return "::Test::KnownPreservedDerived";
    }

    _mostDerivedType()
    {
        return Test.KnownPreservedDerived;
    }

    _writeMemberImpl(ostr)
    {
        ostr.writeString(this.kpd);
    }

    _readMemberImpl(istr)
    {
        this.kpd = istr.readString();
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "Test.KnownPreservedDerived",
    Test.KnownPreservedDerived);

const iceC_Test_TestIntf_ids = [
    "::Ice::Object",
    "::Test::TestIntf"
];

Test.TestIntf = class extends Ice.Object
{
};

Test.TestIntfPrx = class extends Ice.ObjectPrx
{
};
Ice.TypeRegistry.declareProxyType("Test.TestIntfPrx", Test.TestIntfPrx);

Ice.defineOperations(
    Test.TestIntf,
    Test.TestIntfPrx,
    iceC_Test_TestIntf_ids,
    "::Test::TestIntf",
    {
        "baseAsBase": [, , 2, , , ,
        [
            Test.Base
        ], , ],
        "unknownDerivedAsBase": [, , 1, , , ,
        [
            Test.Base
        ], , ],
        "knownDerivedAsBase": [, , 2, , , ,
        [
            Test.Base
        ], , ],
        "knownDerivedAsKnownDerived": [, , 2, , , ,
        [
            Test.KnownDerived
        ], , ],
        "unknownIntermediateAsBase": [, , 2, , , ,
        [
            Test.Base
        ], , ],
        "knownIntermediateAsBase": [, , 2, , , ,
        [
            Test.Base
        ], , ],
        "knownMostDerivedAsBase": [, , 2, , , ,
        [
            Test.Base
        ], , ],
        "knownIntermediateAsKnownIntermediate": [, , 2, , , ,
        [
            Test.KnownIntermediate
        ], , ],
        "knownMostDerivedAsKnownIntermediate": [, , 2, , , ,
        [
            Test.KnownIntermediate
        ], , ],
        "knownMostDerivedAsKnownMostDerived": [, , 2, , , ,
        [
            Test.KnownMostDerived
        ], , ],
        "unknownMostDerived1AsBase": [, , 2, , , ,
        [
            Test.Base
        ], , ],
        "unknownMostDerived1AsKnownIntermediate": [, , 2, , , ,
        [
            Test.KnownIntermediate
        ], , ],
        "unknownMostDerived2AsBase": [, , 2, , , ,
        [
            Test.Base
        ], , ],
        "shutdown": [, , 2, , , , , , ]
    });
