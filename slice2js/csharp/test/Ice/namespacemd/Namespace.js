//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file 'Namespace.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

import { Ice } from "ice";


export const WithNamespace = {};

WithNamespace.C1 = class extends Ice.Value
{
    constructor(i = 0)
    {
        super();
        this.i = i;
    }

    _iceWriteMemberImpl(ostr)
    {
        ostr.writeInt(this.i);
    }

    _iceReadMemberImpl(istr)
    {
        this.i = istr.readInt();
    }
};

Ice.defineValue(WithNamespace.C1, "::WithNamespace::C1");
Ice.TypeRegistry.declareValueType("WithNamespace.C1", WithNamespace.C1);

WithNamespace.C2 = class extends WithNamespace.C1
{
    constructor(i, l = new Ice.Long(0, 0))
    {
        super(i);
        this.l = l;
    }

    _iceWriteMemberImpl(ostr)
    {
        ostr.writeLong(this.l);
    }

    _iceReadMemberImpl(istr)
    {
        this.l = istr.readLong();
    }
};

Ice.defineValue(WithNamespace.C2, "::WithNamespace::C2");
Ice.TypeRegistry.declareValueType("WithNamespace.C2", WithNamespace.C2);

WithNamespace.E1 = class extends Ice.UserException
{
    constructor(i = 0, _cause = "")
    {
        super(_cause);
        this.i = i;
    }

    static get _parent()
    {
        return Ice.UserException;
    }

    static get _ice_id()
    {
        return "::WithNamespace::E1";
    }

    _mostDerivedType()
    {
        return WithNamespace.E1;
    }

    _writeMemberImpl(ostr)
    {
        ostr.writeInt(this.i);
    }

    _readMemberImpl(istr)
    {
        this.i = istr.readInt();
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "WithNamespace.E1",
    WithNamespace.E1);

WithNamespace.E2 = class extends WithNamespace.E1
{
    constructor(i, l = new Ice.Long(0, 0), _cause = "")
    {
        super(i, _cause);
        this.l = l;
    }

    static get _parent()
    {
        return WithNamespace.E1;
    }

    static get _ice_id()
    {
        return "::WithNamespace::E2";
    }

    _mostDerivedType()
    {
        return WithNamespace.E2;
    }

    _writeMemberImpl(ostr)
    {
        ostr.writeLong(this.l);
    }

    _readMemberImpl(istr)
    {
        this.l = istr.readLong();
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "WithNamespace.E2",
    WithNamespace.E2);
