//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `NoNamespace.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

import { Ice } from "ice";


export const NoNamespace = {};

NoNamespace.C1 = class extends Ice.Value
{
    constructor(i = 0)
    {
        super();
        this.i = i;
    }

    _iceWriteMemberImpl(ostr)
    {
        ostr.writeInt(this.i);
    }

    _iceReadMemberImpl(istr)
    {
        this.i = istr.readInt();
    }
};

Ice.defineValue(NoNamespace.C1, "::NoNamespace::C1");
Ice.TypeRegistry.declareValueType("NoNamespace.C1", NoNamespace.C1);

NoNamespace.C2 = class extends NoNamespace.C1
{
    constructor(i, l = new Ice.Long(0, 0))
    {
        super(i);
        this.l = l;
    }

    _iceWriteMemberImpl(ostr)
    {
        ostr.writeLong(this.l);
    }

    _iceReadMemberImpl(istr)
    {
        this.l = istr.readLong();
    }
};

Ice.defineValue(NoNamespace.C2, "::NoNamespace::C2");
Ice.TypeRegistry.declareValueType("NoNamespace.C2", NoNamespace.C2);

NoNamespace.E1 = class extends Ice.UserException
{
    constructor(i = 0, _cause = "")
    {
        super(_cause);
        this.i = i;
    }

    static get _parent()
    {
        return Ice.UserException;
    }

    static get _ice_id()
    {
        return "::NoNamespace::E1";
    }

    _mostDerivedType()
    {
        return NoNamespace.E1;
    }

    _writeMemberImpl(ostr)
    {
        ostr.writeInt(this.i);
    }

    _readMemberImpl(istr)
    {
        this.i = istr.readInt();
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "NoNamespace.E1",
    NoNamespace.E1);

NoNamespace.E2 = class extends NoNamespace.E1
{
    constructor(i, l = new Ice.Long(0, 0), _cause = "")
    {
        super(i, _cause);
        this.l = l;
    }

    static get _parent()
    {
        return NoNamespace.E1;
    }

    static get _ice_id()
    {
        return "::NoNamespace::E2";
    }

    _mostDerivedType()
    {
        return NoNamespace.E2;
    }

    _writeMemberImpl(ostr)
    {
        ostr.writeLong(this.l);
    }

    _readMemberImpl(istr)
    {
        this.l = istr.readLong();
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "NoNamespace.E2",
    NoNamespace.E2);

NoNamespace.notify = class extends Ice.UserException
{
    constructor(i = 0, _cause = "")
    {
        super(_cause);
        this.i = i;
    }

    static get _parent()
    {
        return Ice.UserException;
    }

    static get _ice_id()
    {
        return "::NoNamespace::notify";
    }

    _mostDerivedType()
    {
        return NoNamespace.notify;
    }

    _writeMemberImpl(ostr)
    {
        ostr.writeInt(this.i);
    }

    _readMemberImpl(istr)
    {
        this.i = istr.readInt();
    }
};
Ice.TypeRegistry.declareUserExceptionType(
    "NoNamespace.notify",
    NoNamespace.notify);
