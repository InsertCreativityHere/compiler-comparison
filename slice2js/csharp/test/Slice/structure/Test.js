//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

(function(module, require, exports)
{
    const Ice = require("ice").Ice;
    const _ModuleRegistry = Ice._ModuleRegistry;
    const Slice = Ice.Slice;

    let Test = _ModuleRegistry.module("Test");

    Slice.defineSequence(Test, "StringSeqHelper", "Ice.StringHelper", false);

    Slice.defineSequence(Test, "IntListHelper", "Ice.IntHelper", true);

    Slice.defineDictionary(Test, "StringDict", "StringDictHelper", "Ice.StringHelper", "Ice.StringHelper", false, undefined, undefined);

    Test.C = class extends Ice.Value
    {
        constructor(i = 0)
        {
            super();
            this.i = i;
        }

        _iceWriteMemberImpl(ostr)
        {
            ostr.writeInt(this.i);
        }

        _iceReadMemberImpl(istr)
        {
            this.i = istr.readInt();
        }
    };

    Slice.defineValue(Test.C, "::Test::C");

    Test.S1 = class
    {
        constructor(name = "")
        {
            this.name = name;
        }

        _write(ostr)
        {
            ostr.writeString(this.name);
        }

        _read(istr)
        {
            this.name = istr.readString();
        }

        static get minWireSize()
        {
            return  1;
        }
    };

    Slice.defineStruct(Test.S1, true, true);

    Test.S2 = class
    {
        constructor(bo = false, by = 0, sh = 0, i = 0, l = new Ice.Long(0, 0), f = 0.0, d = 0.0, str = "", ss = null, il = null, sd = null, s = new Test.S1(), cls = null, prx = null)
        {
            this.bo = bo;
            this.by = by;
            this.sh = sh;
            this.i = i;
            this.l = l;
            this.f = f;
            this.d = d;
            this.str = str;
            this.ss = ss;
            this.il = il;
            this.sd = sd;
            this.s = s;
            this.cls = cls;
            this.prx = prx;
        }

        _write(ostr)
        {
            ostr.writeBool(this.bo);
            ostr.writeByte(this.by);
            ostr.writeShort(this.sh);
            ostr.writeInt(this.i);
            ostr.writeLong(this.l);
            ostr.writeFloat(this.f);
            ostr.writeDouble(this.d);
            ostr.writeString(this.str);
            Test.StringSeqHelper.write(ostr, this.ss);
            Test.IntListHelper.write(ostr, this.il);
            Test.StringDictHelper.write(ostr, this.sd);
            Test.S1.write(ostr, this.s);
            ostr.writeValue(this.cls);
            ostr.writeProxy(this.prx);
        }

        _read(istr)
        {
            this.bo = istr.readBool();
            this.by = istr.readByte();
            this.sh = istr.readShort();
            this.i = istr.readInt();
            this.l = istr.readLong();
            this.f = istr.readFloat();
            this.d = istr.readDouble();
            this.str = istr.readString();
            this.ss = Test.StringSeqHelper.read(istr);
            this.il = Test.IntListHelper.read(istr);
            this.sd = Test.StringDictHelper.read(istr);
            this.s = Test.S1.read(istr, this.s);
            istr.readValue(obj => this.cls = obj, Test.C);
            this.prx = istr.readProxy();
        }

        static get minWireSize()
        {
            return  36;
        }
    };

    Slice.defineStruct(Test.S2, false, true);
    exports.Test = Test;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require :
 (typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope) ? self.Ice._require : window.Ice._require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports :
 (typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope) ? self : window));
