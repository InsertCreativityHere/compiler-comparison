//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.9
//
// <auto-generated>
//
// Generated from file `ClientPrivate.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

(function(module, require, exports)
{
    const Ice = require("ice").Ice;
    const _ModuleRegistry = Ice._ModuleRegistry;
    const Test = require("Test").Test;
    const Slice = Ice.Slice;

    const iceC_Test_D_ids = [
        "::Ice::Object",
        "::Test::A",
        "::Test::B",
        "::Test::D"
    ];

    Test.D = class extends Test.B
    {
        constructor(requiredA, ma, mb, mc, requiredB, md, ds = "", seq = undefined, ao = undefined)
        {
            super(requiredA, ma, mb, mc, requiredB, md);
            this.ds = ds;
            this.seq = seq;
            this.ao = ao;
        }

        _iceWriteMemberImpl(ostr)
        {
            ostr.writeString(this.ds);
            Test.StringSeqHelper.writeOptional(ostr, 990, this.seq);
            ostr.writeOptionalValue(1000, this.ao);
        }

        _iceReadMemberImpl(istr)
        {
            this.ds = istr.readString();
            this.seq = Test.StringSeqHelper.readOptional(istr, 990);
            istr.readOptionalValue(1000, obj => this.ao = obj, Test.A);
        }
    };

    Slice.defineValue(Test.D, iceC_Test_D_ids[3], false);

    const iceC_Test_Initial2_ids = [
        "::Ice::Object",
        "::Test::Initial2"
    ];

    Test.Initial2 = class extends Ice.Object
    {
    };

    Test.Initial2Prx = class extends Ice.ObjectPrx
    {
    };

    Slice.defineOperations(Test.Initial2, Test.Initial2Prx, iceC_Test_Initial2_ids, 1,
    {
        "opClassAndUnknownOptional": [, , , , , [["Test.A", true], [8, true, 1]], , , true, ],
        "opVoid": [, , , , , [[3, , 1], [7, , 2]], , , , ]
    });
    exports.Test = Test;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require :
 (typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope) ? self.Ice._require : window.Ice._require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports :
 (typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope) ? self : window));
