//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Version.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

#nullable enable

[assembly:Ice.Slice("Version.ice")]

#pragma warning disable CS1591 // Missing XML Comment
#pragma warning disable CS1573 // Parameter has no matching param tag in the XML comment
#pragma warning disable CS0612 // Type or member is obsolete
#pragma warning disable CS0618 // Type or member is obsolete
#pragma warning disable CS0619 // Type or member is obsolete

namespace Ice
{
    public partial record struct ProtocolVersion
    {
        public byte major;

        public byte minor;

        partial void ice_initialize();

        public ProtocolVersion(byte major, byte minor)
        {
            this.major = major;
            this.minor = minor;
            ice_initialize();
        }

        public ProtocolVersion(Ice.InputStream istr)
        {
            this.major = istr.readByte();
            this.minor = istr.readByte();
            ice_initialize();
        }

        public void ice_writeMembers(Ice.OutputStream ostr)
        {
            ostr.writeByte(this.major);
            ostr.writeByte(this.minor);
        }

        public static void ice_write(Ice.OutputStream ostr, ProtocolVersion v)
        {
            v.ice_writeMembers(ostr);
        }

        public static ProtocolVersion ice_read(Ice.InputStream istr) => new(istr);
    }

    public partial record struct EncodingVersion
    {
        public byte major;

        public byte minor;

        partial void ice_initialize();

        public EncodingVersion(byte major, byte minor)
        {
            this.major = major;
            this.minor = minor;
            ice_initialize();
        }

        public EncodingVersion(Ice.InputStream istr)
        {
            this.major = istr.readByte();
            this.minor = istr.readByte();
            ice_initialize();
        }

        public void ice_writeMembers(Ice.OutputStream ostr)
        {
            ostr.writeByte(this.major);
            ostr.writeByte(this.minor);
        }

        public static void ice_write(Ice.OutputStream ostr, EncodingVersion v)
        {
            v.ice_writeMembers(ostr);
        }

        public static EncodingVersion ice_read(Ice.InputStream istr) => new(istr);
    }
}
