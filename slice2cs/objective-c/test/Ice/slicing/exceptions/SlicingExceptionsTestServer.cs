//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `SlicingExceptionsTestServer.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;

#pragma warning disable 1591

namespace Test
{
    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [global::System.Serializable]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class @Base : global::Ice.UserException
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public string b;

        #endregion

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM()
        {
            this.b = "";
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public @Base()
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public @Base(global::System.Exception ex) : base(ex)
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public @Base(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
            this.b = info.GetString("b");
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM(string b)
        {
            this.b = b;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public @Base(string b)
        {
            _initDM(b);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public @Base(string b, global::System.Exception ex) : base(ex)
        {
            _initDM(b);
        }

        #endregion

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override string ice_id()
        {
            return "::Test::Base";
        }

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override int GetHashCode()
        {
            int h_ = 5381;
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Test::Base");
            global::IceInternal.HashUtil.hashAdd(ref h_, b);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override bool Equals(object other)
        {
            if(other == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            @Base o = other as @Base;
            if(o == null)
            {
                return false;
            }
            if(this.b == null)
            {
                if(o.b != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.b.Equals(o.b))
                {
                    return false;
                }
            }
            return true;
        }

        #if !NET8_0_OR_GREATER
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override void GetObjectData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
        {
            info.AddValue("b", this.b == null ? "" : this.b);

            base.GetObjectData(info, context);
        }
        #endif

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator==(@Base lhs, @Base rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator!=(@Base lhs, @Base rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice("::Test::Base", -1, true);
            ostr_.writeString(b);
            ostr_.endSlice();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            b = istr_.readString();
            istr_.endSlice();
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [global::System.Serializable]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class KnownDerived : @Base
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public string kd;

        #endregion

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM()
        {
            this.kd = "";
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownDerived()
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownDerived(global::System.Exception ex) : base(ex)
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownDerived(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
            this.kd = info.GetString("kd");
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM(string kd)
        {
            this.kd = kd;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownDerived(string b, string kd) : base(b)
        {
            _initDM(kd);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownDerived(string b, string kd, global::System.Exception ex) : base(b, ex)
        {
            _initDM(kd);
        }

        #endregion

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override string ice_id()
        {
            return "::Test::KnownDerived";
        }

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override int GetHashCode()
        {
            int h_ = base.GetHashCode();
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Test::KnownDerived");
            global::IceInternal.HashUtil.hashAdd(ref h_, kd);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override bool Equals(object other)
        {
            if(other == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            KnownDerived o = other as KnownDerived;
            if(o == null)
            {
                return false;
            }
            if(!base.Equals(other))
            {
                return false;
            }
            if(this.kd == null)
            {
                if(o.kd != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.kd.Equals(o.kd))
                {
                    return false;
                }
            }
            return true;
        }

        #if !NET8_0_OR_GREATER
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override void GetObjectData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
        {
            info.AddValue("kd", this.kd == null ? "" : this.kd);

            base.GetObjectData(info, context);
        }
        #endif

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator==(KnownDerived lhs, KnownDerived rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator!=(KnownDerived lhs, KnownDerived rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice("::Test::KnownDerived", -1, false);
            ostr_.writeString(kd);
            ostr_.endSlice();
            base.iceWriteImpl(ostr_);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            kd = istr_.readString();
            istr_.endSlice();
            base.iceReadImpl(istr_);
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [global::System.Serializable]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class KnownIntermediate : @Base
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public string ki;

        #endregion

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM()
        {
            this.ki = "";
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownIntermediate()
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownIntermediate(global::System.Exception ex) : base(ex)
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownIntermediate(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
            this.ki = info.GetString("ki");
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM(string ki)
        {
            this.ki = ki;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownIntermediate(string b, string ki) : base(b)
        {
            _initDM(ki);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownIntermediate(string b, string ki, global::System.Exception ex) : base(b, ex)
        {
            _initDM(ki);
        }

        #endregion

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override string ice_id()
        {
            return "::Test::KnownIntermediate";
        }

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override int GetHashCode()
        {
            int h_ = base.GetHashCode();
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Test::KnownIntermediate");
            global::IceInternal.HashUtil.hashAdd(ref h_, ki);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override bool Equals(object other)
        {
            if(other == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            KnownIntermediate o = other as KnownIntermediate;
            if(o == null)
            {
                return false;
            }
            if(!base.Equals(other))
            {
                return false;
            }
            if(this.ki == null)
            {
                if(o.ki != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.ki.Equals(o.ki))
                {
                    return false;
                }
            }
            return true;
        }

        #if !NET8_0_OR_GREATER
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override void GetObjectData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
        {
            info.AddValue("ki", this.ki == null ? "" : this.ki);

            base.GetObjectData(info, context);
        }
        #endif

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator==(KnownIntermediate lhs, KnownIntermediate rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator!=(KnownIntermediate lhs, KnownIntermediate rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice("::Test::KnownIntermediate", -1, false);
            ostr_.writeString(ki);
            ostr_.endSlice();
            base.iceWriteImpl(ostr_);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            ki = istr_.readString();
            istr_.endSlice();
            base.iceReadImpl(istr_);
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [global::System.Serializable]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class KnownMostDerived : KnownIntermediate
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public string kmd;

        #endregion

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM()
        {
            this.kmd = "";
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownMostDerived()
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownMostDerived(global::System.Exception ex) : base(ex)
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownMostDerived(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
            this.kmd = info.GetString("kmd");
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM(string kmd)
        {
            this.kmd = kmd;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownMostDerived(string b, string ki, string kmd) : base(b, ki)
        {
            _initDM(kmd);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownMostDerived(string b, string ki, string kmd, global::System.Exception ex) : base(b, ki, ex)
        {
            _initDM(kmd);
        }

        #endregion

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override string ice_id()
        {
            return "::Test::KnownMostDerived";
        }

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override int GetHashCode()
        {
            int h_ = base.GetHashCode();
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Test::KnownMostDerived");
            global::IceInternal.HashUtil.hashAdd(ref h_, kmd);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override bool Equals(object other)
        {
            if(other == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            KnownMostDerived o = other as KnownMostDerived;
            if(o == null)
            {
                return false;
            }
            if(!base.Equals(other))
            {
                return false;
            }
            if(this.kmd == null)
            {
                if(o.kmd != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.kmd.Equals(o.kmd))
                {
                    return false;
                }
            }
            return true;
        }

        #if !NET8_0_OR_GREATER
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override void GetObjectData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
        {
            info.AddValue("kmd", this.kmd == null ? "" : this.kmd);

            base.GetObjectData(info, context);
        }
        #endif

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator==(KnownMostDerived lhs, KnownMostDerived rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator!=(KnownMostDerived lhs, KnownMostDerived rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice("::Test::KnownMostDerived", -1, false);
            ostr_.writeString(kmd);
            ostr_.endSlice();
            base.iceWriteImpl(ostr_);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            kmd = istr_.readString();
            istr_.endSlice();
            base.iceReadImpl(istr_);
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [global::System.Serializable]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class KnownPreserved : @Base
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public string kp;

        #endregion

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM()
        {
            this.kp = "";
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownPreserved()
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownPreserved(global::System.Exception ex) : base(ex)
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownPreserved(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
            this.kp = info.GetString("kp");
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM(string kp)
        {
            this.kp = kp;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownPreserved(string b, string kp) : base(b)
        {
            _initDM(kp);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownPreserved(string b, string kp, global::System.Exception ex) : base(b, ex)
        {
            _initDM(kp);
        }

        #endregion

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override string ice_id()
        {
            return "::Test::KnownPreserved";
        }

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override int GetHashCode()
        {
            int h_ = base.GetHashCode();
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Test::KnownPreserved");
            global::IceInternal.HashUtil.hashAdd(ref h_, kp);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override bool Equals(object other)
        {
            if(other == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            KnownPreserved o = other as KnownPreserved;
            if(o == null)
            {
                return false;
            }
            if(!base.Equals(other))
            {
                return false;
            }
            if(this.kp == null)
            {
                if(o.kp != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.kp.Equals(o.kp))
                {
                    return false;
                }
            }
            return true;
        }

        #if !NET8_0_OR_GREATER
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override void GetObjectData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
        {
            info.AddValue("kp", this.kp == null ? "" : this.kp);

            base.GetObjectData(info, context);
        }
        #endif

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator==(KnownPreserved lhs, KnownPreserved rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator!=(KnownPreserved lhs, KnownPreserved rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override global::Ice.SlicedData ice_getSlicedData()
        {
            return slicedData_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override void iceWrite(global::Ice.OutputStream ostr_)
        {
            ostr_.startException(slicedData_);
            iceWriteImpl(ostr_);
            ostr_.endException();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override void iceRead(global::Ice.InputStream istr_)
        {
            istr_.startException();
            iceReadImpl(istr_);
            slicedData_ = istr_.endException(true);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice("::Test::KnownPreserved", -1, false);
            ostr_.writeString(kp);
            ostr_.endSlice();
            base.iceWriteImpl(ostr_);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            kp = istr_.readString();
            istr_.endSlice();
            base.iceReadImpl(istr_);
        }

        protected global::Ice.SlicedData slicedData_;

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [global::System.Serializable]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class KnownPreservedDerived : KnownPreserved
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public string kpd;

        #endregion

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM()
        {
            this.kpd = "";
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownPreservedDerived()
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownPreservedDerived(global::System.Exception ex) : base(ex)
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownPreservedDerived(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
            this.kpd = info.GetString("kpd");
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM(string kpd)
        {
            this.kpd = kpd;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownPreservedDerived(string b, string kp, string kpd) : base(b, kp)
        {
            _initDM(kpd);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public KnownPreservedDerived(string b, string kp, string kpd, global::System.Exception ex) : base(b, kp, ex)
        {
            _initDM(kpd);
        }

        #endregion

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override string ice_id()
        {
            return "::Test::KnownPreservedDerived";
        }

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override int GetHashCode()
        {
            int h_ = base.GetHashCode();
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Test::KnownPreservedDerived");
            global::IceInternal.HashUtil.hashAdd(ref h_, kpd);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override bool Equals(object other)
        {
            if(other == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            KnownPreservedDerived o = other as KnownPreservedDerived;
            if(o == null)
            {
                return false;
            }
            if(!base.Equals(other))
            {
                return false;
            }
            if(this.kpd == null)
            {
                if(o.kpd != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.kpd.Equals(o.kpd))
                {
                    return false;
                }
            }
            return true;
        }

        #if !NET8_0_OR_GREATER
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override void GetObjectData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
        {
            info.AddValue("kpd", this.kpd == null ? "" : this.kpd);

            base.GetObjectData(info, context);
        }
        #endif

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator==(KnownPreservedDerived lhs, KnownPreservedDerived rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator!=(KnownPreservedDerived lhs, KnownPreservedDerived rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice("::Test::KnownPreservedDerived", -1, false);
            ostr_.writeString(kpd);
            ostr_.endSlice();
            base.iceWriteImpl(ostr_);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            kpd = istr_.readString();
            istr_.endSlice();
            base.iceReadImpl(istr_);
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    [global::System.Serializable]
    public partial class BaseClass : global::Ice.Value
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public string bc;

        #endregion

        partial void ice_initialize();

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public BaseClass()
        {
            this.bc = "";
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public BaseClass(string bc)
        {
            this.bc = bc;
            ice_initialize();
        }

        #endregion

        private const string _id = "::Test::BaseClass";

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static new string ice_staticId()
        {
            return _id;
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override string ice_id()
        {
            return _id;
        }

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override global::Ice.SlicedData ice_getSlicedData()
        {
            return iceSlicedData_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override void iceWrite(global::Ice.OutputStream ostr_)
        {
            ostr_.startValue(iceSlicedData_);
            iceWriteImpl(ostr_);
            ostr_.endValue();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override void iceRead(global::Ice.InputStream istr_)
        {
            istr_.startValue();
            iceReadImpl(istr_);
            iceSlicedData_ = istr_.endValue(true);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice(ice_staticId(), -1, true);
            ostr_.writeString(bc);
            ostr_.endSlice();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            bc = istr_.readString();
            istr_.endSlice();
        }

        protected global::Ice.SlicedData iceSlicedData_;

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface Relay : global::Ice.Object, RelayOperations_
    {
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface TestIntf : global::Ice.Object, TestIntfOperations_
    {
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [global::System.Serializable]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class UnknownDerived : @Base
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public string ud;

        #endregion

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM()
        {
            this.ud = "";
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownDerived()
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownDerived(global::System.Exception ex) : base(ex)
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownDerived(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
            this.ud = info.GetString("ud");
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM(string ud)
        {
            this.ud = ud;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownDerived(string b, string ud) : base(b)
        {
            _initDM(ud);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownDerived(string b, string ud, global::System.Exception ex) : base(b, ex)
        {
            _initDM(ud);
        }

        #endregion

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override string ice_id()
        {
            return "::Test::UnknownDerived";
        }

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override int GetHashCode()
        {
            int h_ = base.GetHashCode();
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Test::UnknownDerived");
            global::IceInternal.HashUtil.hashAdd(ref h_, ud);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override bool Equals(object other)
        {
            if(other == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            UnknownDerived o = other as UnknownDerived;
            if(o == null)
            {
                return false;
            }
            if(!base.Equals(other))
            {
                return false;
            }
            if(this.ud == null)
            {
                if(o.ud != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.ud.Equals(o.ud))
                {
                    return false;
                }
            }
            return true;
        }

        #if !NET8_0_OR_GREATER
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override void GetObjectData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
        {
            info.AddValue("ud", this.ud == null ? "" : this.ud);

            base.GetObjectData(info, context);
        }
        #endif

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator==(UnknownDerived lhs, UnknownDerived rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator!=(UnknownDerived lhs, UnknownDerived rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice("::Test::UnknownDerived", -1, false);
            ostr_.writeString(ud);
            ostr_.endSlice();
            base.iceWriteImpl(ostr_);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            ud = istr_.readString();
            istr_.endSlice();
            base.iceReadImpl(istr_);
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [global::System.Serializable]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class UnknownIntermediate : @Base
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public string ui;

        #endregion

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM()
        {
            this.ui = "";
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownIntermediate()
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownIntermediate(global::System.Exception ex) : base(ex)
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownIntermediate(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
            this.ui = info.GetString("ui");
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM(string ui)
        {
            this.ui = ui;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownIntermediate(string b, string ui) : base(b)
        {
            _initDM(ui);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownIntermediate(string b, string ui, global::System.Exception ex) : base(b, ex)
        {
            _initDM(ui);
        }

        #endregion

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override string ice_id()
        {
            return "::Test::UnknownIntermediate";
        }

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override int GetHashCode()
        {
            int h_ = base.GetHashCode();
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Test::UnknownIntermediate");
            global::IceInternal.HashUtil.hashAdd(ref h_, ui);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override bool Equals(object other)
        {
            if(other == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            UnknownIntermediate o = other as UnknownIntermediate;
            if(o == null)
            {
                return false;
            }
            if(!base.Equals(other))
            {
                return false;
            }
            if(this.ui == null)
            {
                if(o.ui != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.ui.Equals(o.ui))
                {
                    return false;
                }
            }
            return true;
        }

        #if !NET8_0_OR_GREATER
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override void GetObjectData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
        {
            info.AddValue("ui", this.ui == null ? "" : this.ui);

            base.GetObjectData(info, context);
        }
        #endif

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator==(UnknownIntermediate lhs, UnknownIntermediate rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator!=(UnknownIntermediate lhs, UnknownIntermediate rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice("::Test::UnknownIntermediate", -1, false);
            ostr_.writeString(ui);
            ostr_.endSlice();
            base.iceWriteImpl(ostr_);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            ui = istr_.readString();
            istr_.endSlice();
            base.iceReadImpl(istr_);
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [global::System.Serializable]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class UnknownMostDerived1 : KnownIntermediate
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public string umd1;

        #endregion

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM()
        {
            this.umd1 = "";
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownMostDerived1()
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownMostDerived1(global::System.Exception ex) : base(ex)
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownMostDerived1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
            this.umd1 = info.GetString("umd1");
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM(string umd1)
        {
            this.umd1 = umd1;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownMostDerived1(string b, string ki, string umd1) : base(b, ki)
        {
            _initDM(umd1);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownMostDerived1(string b, string ki, string umd1, global::System.Exception ex) : base(b, ki, ex)
        {
            _initDM(umd1);
        }

        #endregion

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override string ice_id()
        {
            return "::Test::UnknownMostDerived1";
        }

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override int GetHashCode()
        {
            int h_ = base.GetHashCode();
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Test::UnknownMostDerived1");
            global::IceInternal.HashUtil.hashAdd(ref h_, umd1);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override bool Equals(object other)
        {
            if(other == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            UnknownMostDerived1 o = other as UnknownMostDerived1;
            if(o == null)
            {
                return false;
            }
            if(!base.Equals(other))
            {
                return false;
            }
            if(this.umd1 == null)
            {
                if(o.umd1 != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.umd1.Equals(o.umd1))
                {
                    return false;
                }
            }
            return true;
        }

        #if !NET8_0_OR_GREATER
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override void GetObjectData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
        {
            info.AddValue("umd1", this.umd1 == null ? "" : this.umd1);

            base.GetObjectData(info, context);
        }
        #endif

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator==(UnknownMostDerived1 lhs, UnknownMostDerived1 rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator!=(UnknownMostDerived1 lhs, UnknownMostDerived1 rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice("::Test::UnknownMostDerived1", -1, false);
            ostr_.writeString(umd1);
            ostr_.endSlice();
            base.iceWriteImpl(ostr_);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            umd1 = istr_.readString();
            istr_.endSlice();
            base.iceReadImpl(istr_);
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [global::System.Serializable]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class UnknownMostDerived2 : UnknownIntermediate
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public string umd2;

        #endregion

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM()
        {
            this.umd2 = "";
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownMostDerived2()
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownMostDerived2(global::System.Exception ex) : base(ex)
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownMostDerived2(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
            this.umd2 = info.GetString("umd2");
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM(string umd2)
        {
            this.umd2 = umd2;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownMostDerived2(string b, string ui, string umd2) : base(b, ui)
        {
            _initDM(umd2);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public UnknownMostDerived2(string b, string ui, string umd2, global::System.Exception ex) : base(b, ui, ex)
        {
            _initDM(umd2);
        }

        #endregion

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override string ice_id()
        {
            return "::Test::UnknownMostDerived2";
        }

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override int GetHashCode()
        {
            int h_ = base.GetHashCode();
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Test::UnknownMostDerived2");
            global::IceInternal.HashUtil.hashAdd(ref h_, umd2);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override bool Equals(object other)
        {
            if(other == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            UnknownMostDerived2 o = other as UnknownMostDerived2;
            if(o == null)
            {
                return false;
            }
            if(!base.Equals(other))
            {
                return false;
            }
            if(this.umd2 == null)
            {
                if(o.umd2 != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.umd2.Equals(o.umd2))
                {
                    return false;
                }
            }
            return true;
        }

        #if !NET8_0_OR_GREATER
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override void GetObjectData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
        {
            info.AddValue("umd2", this.umd2 == null ? "" : this.umd2);

            base.GetObjectData(info, context);
        }
        #endif

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator==(UnknownMostDerived2 lhs, UnknownMostDerived2 rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator!=(UnknownMostDerived2 lhs, UnknownMostDerived2 rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice("::Test::UnknownMostDerived2", -1, false);
            ostr_.writeString(umd2);
            ostr_.endSlice();
            base.iceWriteImpl(ostr_);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            umd2 = istr_.readString();
            istr_.endSlice();
            base.iceReadImpl(istr_);
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    [global::System.Serializable]
    public partial class SPreservedClass : BaseClass
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public string spc;

        #endregion

        partial void ice_initialize();

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public SPreservedClass() : base()
        {
            this.spc = "";
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public SPreservedClass(string bc, string spc) : base(bc)
        {
            this.spc = spc;
            ice_initialize();
        }

        #endregion

        private const string _id = "::Test::SPreservedClass";

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static new string ice_staticId()
        {
            return _id;
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override string ice_id()
        {
            return _id;
        }

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice(ice_staticId(), -1, false);
            ostr_.writeString(spc);
            ostr_.endSlice();
            base.iceWriteImpl(ostr_);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            spc = istr_.readString();
            istr_.endSlice();
            base.iceReadImpl(istr_);
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [global::System.Serializable]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class SPreserved1 : KnownPreservedDerived
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public BaseClass p1;

        #endregion

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public SPreserved1()
        {
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public SPreserved1(global::System.Exception ex) : base(ex)
        {
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public SPreserved1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
            this.p1 = (BaseClass)info.GetValue("p1", typeof(BaseClass));
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM(BaseClass p1)
        {
            this.p1 = p1;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public SPreserved1(string b, string kp, string kpd, BaseClass p1) : base(b, kp, kpd)
        {
            _initDM(p1);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public SPreserved1(string b, string kp, string kpd, BaseClass p1, global::System.Exception ex) : base(b, kp, kpd, ex)
        {
            _initDM(p1);
        }

        #endregion

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override string ice_id()
        {
            return "::Test::SPreserved1";
        }

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override int GetHashCode()
        {
            int h_ = base.GetHashCode();
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Test::SPreserved1");
            global::IceInternal.HashUtil.hashAdd(ref h_, p1);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override bool Equals(object other)
        {
            if(other == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            SPreserved1 o = other as SPreserved1;
            if(o == null)
            {
                return false;
            }
            if(!base.Equals(other))
            {
                return false;
            }
            if(this.p1 == null)
            {
                if(o.p1 != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.p1.Equals(o.p1))
                {
                    return false;
                }
            }
            return true;
        }

        #if !NET8_0_OR_GREATER
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override void GetObjectData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
        {
            info.AddValue("p1", this.p1, typeof(BaseClass));

            base.GetObjectData(info, context);
        }
        #endif

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator==(SPreserved1 lhs, SPreserved1 rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator!=(SPreserved1 lhs, SPreserved1 rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice("::Test::SPreserved1", -1, false);
            ostr_.writeValue(p1);
            ostr_.endSlice();
            base.iceWriteImpl(ostr_);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            istr_.readValue((BaseClass v) => { this.p1 = v; });
            istr_.endSlice();
            base.iceReadImpl(istr_);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override bool iceUsesClasses()
        {
            return true;
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [global::System.Serializable]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class SPreserved2 : SPreserved1
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public BaseClass p2;

        #endregion

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public SPreserved2()
        {
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public SPreserved2(global::System.Exception ex) : base(ex)
        {
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public SPreserved2(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
            this.p2 = (BaseClass)info.GetValue("p2", typeof(BaseClass));
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        private void _initDM(BaseClass p2)
        {
            this.p2 = p2;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public SPreserved2(string b, string kp, string kpd, BaseClass p1, BaseClass p2) : base(b, kp, kpd, p1)
        {
            _initDM(p2);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public SPreserved2(string b, string kp, string kpd, BaseClass p1, BaseClass p2, global::System.Exception ex) : base(b, kp, kpd, p1, ex)
        {
            _initDM(p2);
        }

        #endregion

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override string ice_id()
        {
            return "::Test::SPreserved2";
        }

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override int GetHashCode()
        {
            int h_ = base.GetHashCode();
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Test::SPreserved2");
            global::IceInternal.HashUtil.hashAdd(ref h_, p2);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override bool Equals(object other)
        {
            if(other == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            SPreserved2 o = other as SPreserved2;
            if(o == null)
            {
                return false;
            }
            if(!base.Equals(other))
            {
                return false;
            }
            if(this.p2 == null)
            {
                if(o.p2 != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.p2.Equals(o.p2))
                {
                    return false;
                }
            }
            return true;
        }

        #if !NET8_0_OR_GREATER
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public override void GetObjectData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
        {
            info.AddValue("p2", this.p2, typeof(BaseClass));

            base.GetObjectData(info, context);
        }
        #endif

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator==(SPreserved2 lhs, SPreserved2 rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        public static bool operator!=(SPreserved2 lhs, SPreserved2 rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice("::Test::SPreserved2", -1, false);
            ostr_.writeValue(p2);
            ostr_.endSlice();
            base.iceWriteImpl(ostr_);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            istr_.readValue((BaseClass v) => { this.p2 = v; });
            istr_.endSlice();
            base.iceReadImpl(istr_);
        }

        #endregion
    }
}

namespace Test
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_Relay_knownPreservedAsBase();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_Relay_knownPreservedAsKnownPreserved();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_Relay_unknownPreservedAsBase();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_Relay_unknownPreservedAsKnownPreserved();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_baseAsBase();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_unknownDerivedAsBase();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_knownDerivedAsBase();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_knownDerivedAsKnownDerived();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_unknownIntermediateAsBase();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_knownIntermediateAsBase();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_knownMostDerivedAsBase();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_knownIntermediateAsKnownIntermediate();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_knownMostDerivedAsKnownIntermediate();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_knownMostDerivedAsKnownMostDerived();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_unknownMostDerived1AsBase();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_unknownMostDerived1AsKnownIntermediate();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_unknownMostDerived2AsBase();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_unknownMostDerived2AsBaseCompact();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_knownPreservedAsBase();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_knownPreservedAsKnownPreserved();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_relayKnownPreservedAsBase();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_relayKnownPreservedAsKnownPreserved();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_unknownPreservedAsBase();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_unknownPreservedAsKnownPreserved();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_relayUnknownPreservedAsBase();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_relayUnknownPreservedAsKnownPreserved();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public delegate void Callback_TestIntf_shutdown();
}

namespace Test
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public interface RelayPrx : global::Ice.ObjectPrx
    {
        void knownPreservedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task knownPreservedAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_Relay_knownPreservedAsBase> begin_knownPreservedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_knownPreservedAsBase(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_knownPreservedAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_knownPreservedAsBase(global::Ice.AsyncResult asyncResult);

        void knownPreservedAsKnownPreserved(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task knownPreservedAsKnownPreservedAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_Relay_knownPreservedAsKnownPreserved> begin_knownPreservedAsKnownPreserved(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_knownPreservedAsKnownPreserved(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_knownPreservedAsKnownPreserved(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_knownPreservedAsKnownPreserved(global::Ice.AsyncResult asyncResult);

        void unknownPreservedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task unknownPreservedAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_Relay_unknownPreservedAsBase> begin_unknownPreservedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_unknownPreservedAsBase(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_unknownPreservedAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_unknownPreservedAsBase(global::Ice.AsyncResult asyncResult);

        void unknownPreservedAsKnownPreserved(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task unknownPreservedAsKnownPreservedAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_Relay_unknownPreservedAsKnownPreserved> begin_unknownPreservedAsKnownPreserved(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_unknownPreservedAsKnownPreserved(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_unknownPreservedAsKnownPreserved(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_unknownPreservedAsKnownPreserved(global::Ice.AsyncResult asyncResult);
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public interface TestIntfPrx : global::Ice.ObjectPrx
    {
        void baseAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task baseAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_baseAsBase> begin_baseAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_baseAsBase(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_baseAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_baseAsBase(global::Ice.AsyncResult asyncResult);

        void unknownDerivedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task unknownDerivedAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_unknownDerivedAsBase> begin_unknownDerivedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_unknownDerivedAsBase(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_unknownDerivedAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_unknownDerivedAsBase(global::Ice.AsyncResult asyncResult);

        void knownDerivedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task knownDerivedAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_knownDerivedAsBase> begin_knownDerivedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_knownDerivedAsBase(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_knownDerivedAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_knownDerivedAsBase(global::Ice.AsyncResult asyncResult);

        void knownDerivedAsKnownDerived(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task knownDerivedAsKnownDerivedAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_knownDerivedAsKnownDerived> begin_knownDerivedAsKnownDerived(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_knownDerivedAsKnownDerived(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_knownDerivedAsKnownDerived(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_knownDerivedAsKnownDerived(global::Ice.AsyncResult asyncResult);

        void unknownIntermediateAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task unknownIntermediateAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_unknownIntermediateAsBase> begin_unknownIntermediateAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_unknownIntermediateAsBase(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_unknownIntermediateAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_unknownIntermediateAsBase(global::Ice.AsyncResult asyncResult);

        void knownIntermediateAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task knownIntermediateAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_knownIntermediateAsBase> begin_knownIntermediateAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_knownIntermediateAsBase(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_knownIntermediateAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_knownIntermediateAsBase(global::Ice.AsyncResult asyncResult);

        void knownMostDerivedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task knownMostDerivedAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_knownMostDerivedAsBase> begin_knownMostDerivedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_knownMostDerivedAsBase(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_knownMostDerivedAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_knownMostDerivedAsBase(global::Ice.AsyncResult asyncResult);

        void knownIntermediateAsKnownIntermediate(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task knownIntermediateAsKnownIntermediateAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_knownIntermediateAsKnownIntermediate> begin_knownIntermediateAsKnownIntermediate(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_knownIntermediateAsKnownIntermediate(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_knownIntermediateAsKnownIntermediate(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_knownIntermediateAsKnownIntermediate(global::Ice.AsyncResult asyncResult);

        void knownMostDerivedAsKnownIntermediate(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task knownMostDerivedAsKnownIntermediateAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_knownMostDerivedAsKnownIntermediate> begin_knownMostDerivedAsKnownIntermediate(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_knownMostDerivedAsKnownIntermediate(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_knownMostDerivedAsKnownIntermediate(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_knownMostDerivedAsKnownIntermediate(global::Ice.AsyncResult asyncResult);

        void knownMostDerivedAsKnownMostDerived(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task knownMostDerivedAsKnownMostDerivedAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_knownMostDerivedAsKnownMostDerived> begin_knownMostDerivedAsKnownMostDerived(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_knownMostDerivedAsKnownMostDerived(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_knownMostDerivedAsKnownMostDerived(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_knownMostDerivedAsKnownMostDerived(global::Ice.AsyncResult asyncResult);

        void unknownMostDerived1AsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task unknownMostDerived1AsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_unknownMostDerived1AsBase> begin_unknownMostDerived1AsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_unknownMostDerived1AsBase(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_unknownMostDerived1AsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_unknownMostDerived1AsBase(global::Ice.AsyncResult asyncResult);

        void unknownMostDerived1AsKnownIntermediate(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task unknownMostDerived1AsKnownIntermediateAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_unknownMostDerived1AsKnownIntermediate> begin_unknownMostDerived1AsKnownIntermediate(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_unknownMostDerived1AsKnownIntermediate(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_unknownMostDerived1AsKnownIntermediate(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_unknownMostDerived1AsKnownIntermediate(global::Ice.AsyncResult asyncResult);

        void unknownMostDerived2AsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task unknownMostDerived2AsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_unknownMostDerived2AsBase> begin_unknownMostDerived2AsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_unknownMostDerived2AsBase(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_unknownMostDerived2AsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_unknownMostDerived2AsBase(global::Ice.AsyncResult asyncResult);

        void unknownMostDerived2AsBaseCompact(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task unknownMostDerived2AsBaseCompactAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_unknownMostDerived2AsBaseCompact> begin_unknownMostDerived2AsBaseCompact(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_unknownMostDerived2AsBaseCompact(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_unknownMostDerived2AsBaseCompact(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_unknownMostDerived2AsBaseCompact(global::Ice.AsyncResult asyncResult);

        void knownPreservedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task knownPreservedAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_knownPreservedAsBase> begin_knownPreservedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_knownPreservedAsBase(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_knownPreservedAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_knownPreservedAsBase(global::Ice.AsyncResult asyncResult);

        void knownPreservedAsKnownPreserved(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task knownPreservedAsKnownPreservedAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_knownPreservedAsKnownPreserved> begin_knownPreservedAsKnownPreserved(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_knownPreservedAsKnownPreserved(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_knownPreservedAsKnownPreserved(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_knownPreservedAsKnownPreserved(global::Ice.AsyncResult asyncResult);

        void relayKnownPreservedAsBase(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task relayKnownPreservedAsBaseAsync(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_relayKnownPreservedAsBase> begin_relayKnownPreservedAsBase(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_relayKnownPreservedAsBase(RelayPrx r, global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_relayKnownPreservedAsBase(RelayPrx r, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_relayKnownPreservedAsBase(global::Ice.AsyncResult asyncResult);

        void relayKnownPreservedAsKnownPreserved(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task relayKnownPreservedAsKnownPreservedAsync(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_relayKnownPreservedAsKnownPreserved> begin_relayKnownPreservedAsKnownPreserved(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_relayKnownPreservedAsKnownPreserved(RelayPrx r, global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_relayKnownPreservedAsKnownPreserved(RelayPrx r, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_relayKnownPreservedAsKnownPreserved(global::Ice.AsyncResult asyncResult);

        void unknownPreservedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task unknownPreservedAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_unknownPreservedAsBase> begin_unknownPreservedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_unknownPreservedAsBase(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_unknownPreservedAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_unknownPreservedAsBase(global::Ice.AsyncResult asyncResult);

        void unknownPreservedAsKnownPreserved(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task unknownPreservedAsKnownPreservedAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_unknownPreservedAsKnownPreserved> begin_unknownPreservedAsKnownPreserved(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_unknownPreservedAsKnownPreserved(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_unknownPreservedAsKnownPreserved(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_unknownPreservedAsKnownPreserved(global::Ice.AsyncResult asyncResult);

        void relayUnknownPreservedAsBase(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task relayUnknownPreservedAsBaseAsync(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_relayUnknownPreservedAsBase> begin_relayUnknownPreservedAsBase(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_relayUnknownPreservedAsBase(RelayPrx r, global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_relayUnknownPreservedAsBase(RelayPrx r, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_relayUnknownPreservedAsBase(global::Ice.AsyncResult asyncResult);

        void relayUnknownPreservedAsKnownPreserved(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task relayUnknownPreservedAsKnownPreservedAsync(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_relayUnknownPreservedAsKnownPreserved> begin_relayUnknownPreservedAsKnownPreserved(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_relayUnknownPreservedAsKnownPreserved(RelayPrx r, global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_relayUnknownPreservedAsKnownPreserved(RelayPrx r, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_relayUnknownPreservedAsKnownPreserved(global::Ice.AsyncResult asyncResult);

        void shutdown(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task shutdownAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_TestIntf_shutdown> begin_shutdown(global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_shutdown(global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_shutdown(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_shutdown(global::Ice.AsyncResult asyncResult);
    }
}

namespace Test
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public interface RelayOperations_
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void knownPreservedAsBase(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void knownPreservedAsKnownPreserved(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void unknownPreservedAsBase(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void unknownPreservedAsKnownPreserved(global::Ice.Current current = null);
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public interface TestIntfOperations_
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void baseAsBase(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void unknownDerivedAsBase(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void knownDerivedAsBase(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void knownDerivedAsKnownDerived(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void unknownIntermediateAsBase(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void knownIntermediateAsBase(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void knownMostDerivedAsBase(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void knownIntermediateAsKnownIntermediate(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void knownMostDerivedAsKnownIntermediate(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void knownMostDerivedAsKnownMostDerived(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void unknownMostDerived1AsBase(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void unknownMostDerived1AsKnownIntermediate(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void unknownMostDerived2AsBase(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void unknownMostDerived2AsBaseCompact(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void knownPreservedAsBase(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void knownPreservedAsKnownPreserved(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void relayKnownPreservedAsBase(RelayPrx r, global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void relayKnownPreservedAsKnownPreserved(RelayPrx r, global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void unknownPreservedAsBase(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void unknownPreservedAsKnownPreserved(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void relayUnknownPreservedAsBase(RelayPrx r, global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void relayUnknownPreservedAsKnownPreserved(RelayPrx r, global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
        void shutdown(global::Ice.Current current = null);
    }
}

namespace Test
{
    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    [global::System.Serializable]
    public sealed class RelayPrxHelper : global::Ice.ObjectPrxHelperBase, RelayPrx
    {
        public RelayPrxHelper()
        {
        }

        public RelayPrxHelper(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        #region Synchronous operations

        public void knownPreservedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_knownPreservedAsBaseAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void knownPreservedAsKnownPreserved(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_knownPreservedAsKnownPreservedAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void unknownPreservedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_unknownPreservedAsBaseAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void unknownPreservedAsKnownPreserved(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_unknownPreservedAsKnownPreservedAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        #endregion

        #region Async Task operations

        public global::System.Threading.Tasks.Task knownPreservedAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_knownPreservedAsBaseAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_knownPreservedAsBaseAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_knownPreservedAsBase_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_knownPreservedAsBase(context, synchronous, completed);
            return completed.Task;
        }

        private const string _knownPreservedAsBase_name = "knownPreservedAsBase";

        private void _iceI_knownPreservedAsBase(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _knownPreservedAsBase_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(@Base)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task knownPreservedAsKnownPreservedAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_knownPreservedAsKnownPreservedAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_knownPreservedAsKnownPreservedAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_knownPreservedAsKnownPreserved_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_knownPreservedAsKnownPreserved(context, synchronous, completed);
            return completed.Task;
        }

        private const string _knownPreservedAsKnownPreserved_name = "knownPreservedAsKnownPreserved";

        private void _iceI_knownPreservedAsKnownPreserved(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _knownPreservedAsKnownPreserved_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(KnownPreserved)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task unknownPreservedAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_unknownPreservedAsBaseAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_unknownPreservedAsBaseAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_unknownPreservedAsBase_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_unknownPreservedAsBase(context, synchronous, completed);
            return completed.Task;
        }

        private const string _unknownPreservedAsBase_name = "unknownPreservedAsBase";

        private void _iceI_unknownPreservedAsBase(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _unknownPreservedAsBase_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(@Base)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task unknownPreservedAsKnownPreservedAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_unknownPreservedAsKnownPreservedAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_unknownPreservedAsKnownPreservedAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_unknownPreservedAsKnownPreserved_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_unknownPreservedAsKnownPreserved(context, synchronous, completed);
            return completed.Task;
        }

        private const string _unknownPreservedAsKnownPreserved_name = "unknownPreservedAsKnownPreserved";

        private void _iceI_unknownPreservedAsKnownPreserved(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _unknownPreservedAsKnownPreserved_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(KnownPreserved)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        #endregion

        #region Asynchronous operations

        public global::Ice.AsyncResult<Callback_Relay_knownPreservedAsBase> begin_knownPreservedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_knownPreservedAsBase(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_knownPreservedAsBase(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownPreservedAsBase(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_knownPreservedAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownPreservedAsBase(context, callback, cookie, false);
        }

        public void end_knownPreservedAsBase(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _knownPreservedAsBase_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_Relay_knownPreservedAsBase> begin_knownPreservedAsBase(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_knownPreservedAsBase_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_Relay_knownPreservedAsBase, object>(
                (Callback_Relay_knownPreservedAsBase cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _knownPreservedAsBase_name, cookie, completedCallback);
            _iceI_knownPreservedAsBase(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_Relay_knownPreservedAsKnownPreserved> begin_knownPreservedAsKnownPreserved(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_knownPreservedAsKnownPreserved(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_knownPreservedAsKnownPreserved(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownPreservedAsKnownPreserved(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_knownPreservedAsKnownPreserved(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownPreservedAsKnownPreserved(context, callback, cookie, false);
        }

        public void end_knownPreservedAsKnownPreserved(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _knownPreservedAsKnownPreserved_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_Relay_knownPreservedAsKnownPreserved> begin_knownPreservedAsKnownPreserved(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_knownPreservedAsKnownPreserved_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_Relay_knownPreservedAsKnownPreserved, object>(
                (Callback_Relay_knownPreservedAsKnownPreserved cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _knownPreservedAsKnownPreserved_name, cookie, completedCallback);
            _iceI_knownPreservedAsKnownPreserved(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_Relay_unknownPreservedAsBase> begin_unknownPreservedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_unknownPreservedAsBase(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_unknownPreservedAsBase(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownPreservedAsBase(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_unknownPreservedAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownPreservedAsBase(context, callback, cookie, false);
        }

        public void end_unknownPreservedAsBase(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _unknownPreservedAsBase_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_Relay_unknownPreservedAsBase> begin_unknownPreservedAsBase(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_unknownPreservedAsBase_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_Relay_unknownPreservedAsBase, object>(
                (Callback_Relay_unknownPreservedAsBase cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _unknownPreservedAsBase_name, cookie, completedCallback);
            _iceI_unknownPreservedAsBase(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_Relay_unknownPreservedAsKnownPreserved> begin_unknownPreservedAsKnownPreserved(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_unknownPreservedAsKnownPreserved(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_unknownPreservedAsKnownPreserved(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownPreservedAsKnownPreserved(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_unknownPreservedAsKnownPreserved(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownPreservedAsKnownPreserved(context, callback, cookie, false);
        }

        public void end_unknownPreservedAsKnownPreserved(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _unknownPreservedAsKnownPreserved_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_Relay_unknownPreservedAsKnownPreserved> begin_unknownPreservedAsKnownPreserved(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_unknownPreservedAsKnownPreserved_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_Relay_unknownPreservedAsKnownPreserved, object>(
                (Callback_Relay_unknownPreservedAsKnownPreserved cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _unknownPreservedAsKnownPreserved_name, cookie, completedCallback);
            _iceI_unknownPreservedAsKnownPreserved(context, synchronous, completed);
            return completed;
        }

        #endregion

        #region Checked and unchecked cast operations

        public static RelayPrx checkedCast(global::Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            RelayPrx r = b as RelayPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                RelayPrxHelper h = new RelayPrxHelper();
                h.iceCopyFrom(b);
                r = h;
            }
            return r;
        }

        public static RelayPrx checkedCast(global::Ice.ObjectPrx b, global::System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            RelayPrx r = b as RelayPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                RelayPrxHelper h = new RelayPrxHelper();
                h.iceCopyFrom(b);
                r = h;
            }
            return r;
        }

        public static RelayPrx checkedCast(global::Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            global::Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    RelayPrxHelper h = new RelayPrxHelper();
                    h.iceCopyFrom(bb);
                    return h;
                }
            }
            catch(global::Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static RelayPrx checkedCast(global::Ice.ObjectPrx b, string f, global::System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            global::Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    RelayPrxHelper h = new RelayPrxHelper();
                    h.iceCopyFrom(bb);
                    return h;
                }
            }
            catch(global::Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static RelayPrx uncheckedCast(global::Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            RelayPrx r = b as RelayPrx;
            if(r == null)
            {
                RelayPrxHelper h = new RelayPrxHelper();
                h.iceCopyFrom(b);
                r = h;
            }
            return r;
        }

        public static RelayPrx uncheckedCast(global::Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            global::Ice.ObjectPrx bb = b.ice_facet(f);
            RelayPrxHelper h = new RelayPrxHelper();
            h.iceCopyFrom(bb);
            return h;
        }

        private static readonly string[] _ids =
        {
            "::Ice::Object",
            "::Test::Relay"
        };

        public static string ice_staticId()
        {
            return _ids[1];
        }

        #endregion

        #region Marshaling support

        public static void write(global::Ice.OutputStream ostr, RelayPrx v)
        {
            ostr.writeProxy(v);
        }

        public static RelayPrx read(global::Ice.InputStream istr)
        {
            global::Ice.ObjectPrx proxy = istr.readProxy();
            if(proxy != null)
            {
                RelayPrxHelper result = new RelayPrxHelper();
                result.iceCopyFrom(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    [global::System.Serializable]
    public sealed class TestIntfPrxHelper : global::Ice.ObjectPrxHelperBase, TestIntfPrx
    {
        public TestIntfPrxHelper()
        {
        }

        public TestIntfPrxHelper(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        #region Synchronous operations

        public void baseAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_baseAsBaseAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void unknownDerivedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_unknownDerivedAsBaseAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void knownDerivedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_knownDerivedAsBaseAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void knownDerivedAsKnownDerived(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_knownDerivedAsKnownDerivedAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void unknownIntermediateAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_unknownIntermediateAsBaseAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void knownIntermediateAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_knownIntermediateAsBaseAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void knownMostDerivedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_knownMostDerivedAsBaseAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void knownIntermediateAsKnownIntermediate(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_knownIntermediateAsKnownIntermediateAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void knownMostDerivedAsKnownIntermediate(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_knownMostDerivedAsKnownIntermediateAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void knownMostDerivedAsKnownMostDerived(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_knownMostDerivedAsKnownMostDerivedAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void unknownMostDerived1AsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_unknownMostDerived1AsBaseAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void unknownMostDerived1AsKnownIntermediate(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_unknownMostDerived1AsKnownIntermediateAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void unknownMostDerived2AsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_unknownMostDerived2AsBaseAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void unknownMostDerived2AsBaseCompact(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_unknownMostDerived2AsBaseCompactAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void knownPreservedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_knownPreservedAsBaseAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void knownPreservedAsKnownPreserved(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_knownPreservedAsKnownPreservedAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void relayKnownPreservedAsBase(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_relayKnownPreservedAsBaseAsync(r, context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void relayKnownPreservedAsKnownPreserved(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_relayKnownPreservedAsKnownPreservedAsync(r, context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void unknownPreservedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_unknownPreservedAsBaseAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void unknownPreservedAsKnownPreserved(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_unknownPreservedAsKnownPreservedAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void relayUnknownPreservedAsBase(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_relayUnknownPreservedAsBaseAsync(r, context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void relayUnknownPreservedAsKnownPreserved(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_relayUnknownPreservedAsKnownPreservedAsync(r, context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void shutdown(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_shutdownAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        #endregion

        #region Async Task operations

        public global::System.Threading.Tasks.Task baseAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_baseAsBaseAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_baseAsBaseAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_baseAsBase_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_baseAsBase(context, synchronous, completed);
            return completed.Task;
        }

        private const string _baseAsBase_name = "baseAsBase";

        private void _iceI_baseAsBase(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _baseAsBase_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(@Base)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task unknownDerivedAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_unknownDerivedAsBaseAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_unknownDerivedAsBaseAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_unknownDerivedAsBase_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_unknownDerivedAsBase(context, synchronous, completed);
            return completed.Task;
        }

        private const string _unknownDerivedAsBase_name = "unknownDerivedAsBase";

        private void _iceI_unknownDerivedAsBase(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _unknownDerivedAsBase_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(@Base)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task knownDerivedAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_knownDerivedAsBaseAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_knownDerivedAsBaseAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_knownDerivedAsBase_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_knownDerivedAsBase(context, synchronous, completed);
            return completed.Task;
        }

        private const string _knownDerivedAsBase_name = "knownDerivedAsBase";

        private void _iceI_knownDerivedAsBase(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _knownDerivedAsBase_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(@Base)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task knownDerivedAsKnownDerivedAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_knownDerivedAsKnownDerivedAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_knownDerivedAsKnownDerivedAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_knownDerivedAsKnownDerived_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_knownDerivedAsKnownDerived(context, synchronous, completed);
            return completed.Task;
        }

        private const string _knownDerivedAsKnownDerived_name = "knownDerivedAsKnownDerived";

        private void _iceI_knownDerivedAsKnownDerived(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _knownDerivedAsKnownDerived_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(KnownDerived)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task unknownIntermediateAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_unknownIntermediateAsBaseAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_unknownIntermediateAsBaseAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_unknownIntermediateAsBase_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_unknownIntermediateAsBase(context, synchronous, completed);
            return completed.Task;
        }

        private const string _unknownIntermediateAsBase_name = "unknownIntermediateAsBase";

        private void _iceI_unknownIntermediateAsBase(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _unknownIntermediateAsBase_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(@Base)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task knownIntermediateAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_knownIntermediateAsBaseAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_knownIntermediateAsBaseAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_knownIntermediateAsBase_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_knownIntermediateAsBase(context, synchronous, completed);
            return completed.Task;
        }

        private const string _knownIntermediateAsBase_name = "knownIntermediateAsBase";

        private void _iceI_knownIntermediateAsBase(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _knownIntermediateAsBase_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(@Base)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task knownMostDerivedAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_knownMostDerivedAsBaseAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_knownMostDerivedAsBaseAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_knownMostDerivedAsBase_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_knownMostDerivedAsBase(context, synchronous, completed);
            return completed.Task;
        }

        private const string _knownMostDerivedAsBase_name = "knownMostDerivedAsBase";

        private void _iceI_knownMostDerivedAsBase(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _knownMostDerivedAsBase_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(@Base)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task knownIntermediateAsKnownIntermediateAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_knownIntermediateAsKnownIntermediateAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_knownIntermediateAsKnownIntermediateAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_knownIntermediateAsKnownIntermediate_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_knownIntermediateAsKnownIntermediate(context, synchronous, completed);
            return completed.Task;
        }

        private const string _knownIntermediateAsKnownIntermediate_name = "knownIntermediateAsKnownIntermediate";

        private void _iceI_knownIntermediateAsKnownIntermediate(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _knownIntermediateAsKnownIntermediate_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(KnownIntermediate)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task knownMostDerivedAsKnownIntermediateAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_knownMostDerivedAsKnownIntermediateAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_knownMostDerivedAsKnownIntermediateAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_knownMostDerivedAsKnownIntermediate_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_knownMostDerivedAsKnownIntermediate(context, synchronous, completed);
            return completed.Task;
        }

        private const string _knownMostDerivedAsKnownIntermediate_name = "knownMostDerivedAsKnownIntermediate";

        private void _iceI_knownMostDerivedAsKnownIntermediate(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _knownMostDerivedAsKnownIntermediate_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(KnownIntermediate)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task knownMostDerivedAsKnownMostDerivedAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_knownMostDerivedAsKnownMostDerivedAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_knownMostDerivedAsKnownMostDerivedAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_knownMostDerivedAsKnownMostDerived_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_knownMostDerivedAsKnownMostDerived(context, synchronous, completed);
            return completed.Task;
        }

        private const string _knownMostDerivedAsKnownMostDerived_name = "knownMostDerivedAsKnownMostDerived";

        private void _iceI_knownMostDerivedAsKnownMostDerived(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _knownMostDerivedAsKnownMostDerived_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(KnownMostDerived)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task unknownMostDerived1AsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_unknownMostDerived1AsBaseAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_unknownMostDerived1AsBaseAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_unknownMostDerived1AsBase_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_unknownMostDerived1AsBase(context, synchronous, completed);
            return completed.Task;
        }

        private const string _unknownMostDerived1AsBase_name = "unknownMostDerived1AsBase";

        private void _iceI_unknownMostDerived1AsBase(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _unknownMostDerived1AsBase_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(@Base)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task unknownMostDerived1AsKnownIntermediateAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_unknownMostDerived1AsKnownIntermediateAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_unknownMostDerived1AsKnownIntermediateAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_unknownMostDerived1AsKnownIntermediate_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_unknownMostDerived1AsKnownIntermediate(context, synchronous, completed);
            return completed.Task;
        }

        private const string _unknownMostDerived1AsKnownIntermediate_name = "unknownMostDerived1AsKnownIntermediate";

        private void _iceI_unknownMostDerived1AsKnownIntermediate(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _unknownMostDerived1AsKnownIntermediate_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(KnownIntermediate)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task unknownMostDerived2AsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_unknownMostDerived2AsBaseAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_unknownMostDerived2AsBaseAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_unknownMostDerived2AsBase_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_unknownMostDerived2AsBase(context, synchronous, completed);
            return completed.Task;
        }

        private const string _unknownMostDerived2AsBase_name = "unknownMostDerived2AsBase";

        private void _iceI_unknownMostDerived2AsBase(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _unknownMostDerived2AsBase_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(@Base)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task unknownMostDerived2AsBaseCompactAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_unknownMostDerived2AsBaseCompactAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_unknownMostDerived2AsBaseCompactAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_unknownMostDerived2AsBaseCompact_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_unknownMostDerived2AsBaseCompact(context, synchronous, completed);
            return completed.Task;
        }

        private const string _unknownMostDerived2AsBaseCompact_name = "unknownMostDerived2AsBaseCompact";

        private void _iceI_unknownMostDerived2AsBaseCompact(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _unknownMostDerived2AsBaseCompact_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.CompactFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(@Base)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task knownPreservedAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_knownPreservedAsBaseAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_knownPreservedAsBaseAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_knownPreservedAsBase_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_knownPreservedAsBase(context, synchronous, completed);
            return completed.Task;
        }

        private const string _knownPreservedAsBase_name = "knownPreservedAsBase";

        private void _iceI_knownPreservedAsBase(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _knownPreservedAsBase_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(@Base)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task knownPreservedAsKnownPreservedAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_knownPreservedAsKnownPreservedAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_knownPreservedAsKnownPreservedAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_knownPreservedAsKnownPreserved_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_knownPreservedAsKnownPreserved(context, synchronous, completed);
            return completed.Task;
        }

        private const string _knownPreservedAsKnownPreserved_name = "knownPreservedAsKnownPreserved";

        private void _iceI_knownPreservedAsKnownPreserved(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _knownPreservedAsKnownPreserved_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(KnownPreserved)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task relayKnownPreservedAsBaseAsync(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_relayKnownPreservedAsBaseAsync(r, context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_relayKnownPreservedAsBaseAsync(RelayPrx iceP_r, global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_relayKnownPreservedAsBase_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_relayKnownPreservedAsBase(iceP_r, context, synchronous, completed);
            return completed.Task;
        }

        private const string _relayKnownPreservedAsBase_name = "relayKnownPreservedAsBase";

        private void _iceI_relayKnownPreservedAsBase(RelayPrx iceP_r, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _relayKnownPreservedAsBase_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                write: (global::Ice.OutputStream ostr) =>
                {
                    RelayPrxHelper.write(ostr, iceP_r);
                },
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(@Base)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task relayKnownPreservedAsKnownPreservedAsync(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_relayKnownPreservedAsKnownPreservedAsync(r, context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_relayKnownPreservedAsKnownPreservedAsync(RelayPrx iceP_r, global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_relayKnownPreservedAsKnownPreserved_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_relayKnownPreservedAsKnownPreserved(iceP_r, context, synchronous, completed);
            return completed.Task;
        }

        private const string _relayKnownPreservedAsKnownPreserved_name = "relayKnownPreservedAsKnownPreserved";

        private void _iceI_relayKnownPreservedAsKnownPreserved(RelayPrx iceP_r, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _relayKnownPreservedAsKnownPreserved_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                write: (global::Ice.OutputStream ostr) =>
                {
                    RelayPrxHelper.write(ostr, iceP_r);
                },
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(KnownPreserved)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task unknownPreservedAsBaseAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_unknownPreservedAsBaseAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_unknownPreservedAsBaseAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_unknownPreservedAsBase_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_unknownPreservedAsBase(context, synchronous, completed);
            return completed.Task;
        }

        private const string _unknownPreservedAsBase_name = "unknownPreservedAsBase";

        private void _iceI_unknownPreservedAsBase(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _unknownPreservedAsBase_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(@Base)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task unknownPreservedAsKnownPreservedAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_unknownPreservedAsKnownPreservedAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_unknownPreservedAsKnownPreservedAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_unknownPreservedAsKnownPreserved_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_unknownPreservedAsKnownPreserved(context, synchronous, completed);
            return completed.Task;
        }

        private const string _unknownPreservedAsKnownPreserved_name = "unknownPreservedAsKnownPreserved";

        private void _iceI_unknownPreservedAsKnownPreserved(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _unknownPreservedAsKnownPreserved_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(KnownPreserved)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task relayUnknownPreservedAsBaseAsync(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_relayUnknownPreservedAsBaseAsync(r, context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_relayUnknownPreservedAsBaseAsync(RelayPrx iceP_r, global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_relayUnknownPreservedAsBase_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_relayUnknownPreservedAsBase(iceP_r, context, synchronous, completed);
            return completed.Task;
        }

        private const string _relayUnknownPreservedAsBase_name = "relayUnknownPreservedAsBase";

        private void _iceI_relayUnknownPreservedAsBase(RelayPrx iceP_r, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _relayUnknownPreservedAsBase_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                write: (global::Ice.OutputStream ostr) =>
                {
                    RelayPrxHelper.write(ostr, iceP_r);
                },
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(@Base)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task relayUnknownPreservedAsKnownPreservedAsync(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_relayUnknownPreservedAsKnownPreservedAsync(r, context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_relayUnknownPreservedAsKnownPreservedAsync(RelayPrx iceP_r, global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_relayUnknownPreservedAsKnownPreserved_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_relayUnknownPreservedAsKnownPreserved(iceP_r, context, synchronous, completed);
            return completed.Task;
        }

        private const string _relayUnknownPreservedAsKnownPreserved_name = "relayUnknownPreservedAsKnownPreserved";

        private void _iceI_relayUnknownPreservedAsKnownPreserved(RelayPrx iceP_r, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _relayUnknownPreservedAsKnownPreserved_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous,
                write: (global::Ice.OutputStream ostr) =>
                {
                    RelayPrxHelper.write(ostr, iceP_r);
                },
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(KnownPreserved)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                });
        }

        public global::System.Threading.Tasks.Task shutdownAsync(global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_shutdownAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_shutdownAsync(global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_shutdown(context, synchronous, completed);
            return completed.Task;
        }

        private const string _shutdown_name = "shutdown";

        private void _iceI_shutdown(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _shutdown_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.SlicedFormat,
                context,
                synchronous);
        }

        #endregion

        #region Asynchronous operations

        public global::Ice.AsyncResult<Callback_TestIntf_baseAsBase> begin_baseAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_baseAsBase(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_baseAsBase(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_baseAsBase(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_baseAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_baseAsBase(context, callback, cookie, false);
        }

        public void end_baseAsBase(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _baseAsBase_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_baseAsBase> begin_baseAsBase(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_baseAsBase_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_baseAsBase, object>(
                (Callback_TestIntf_baseAsBase cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _baseAsBase_name, cookie, completedCallback);
            _iceI_baseAsBase(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_unknownDerivedAsBase> begin_unknownDerivedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_unknownDerivedAsBase(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_unknownDerivedAsBase(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownDerivedAsBase(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_unknownDerivedAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownDerivedAsBase(context, callback, cookie, false);
        }

        public void end_unknownDerivedAsBase(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _unknownDerivedAsBase_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_unknownDerivedAsBase> begin_unknownDerivedAsBase(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_unknownDerivedAsBase_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_unknownDerivedAsBase, object>(
                (Callback_TestIntf_unknownDerivedAsBase cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _unknownDerivedAsBase_name, cookie, completedCallback);
            _iceI_unknownDerivedAsBase(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_knownDerivedAsBase> begin_knownDerivedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_knownDerivedAsBase(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_knownDerivedAsBase(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownDerivedAsBase(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_knownDerivedAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownDerivedAsBase(context, callback, cookie, false);
        }

        public void end_knownDerivedAsBase(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _knownDerivedAsBase_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_knownDerivedAsBase> begin_knownDerivedAsBase(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_knownDerivedAsBase_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_knownDerivedAsBase, object>(
                (Callback_TestIntf_knownDerivedAsBase cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _knownDerivedAsBase_name, cookie, completedCallback);
            _iceI_knownDerivedAsBase(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_knownDerivedAsKnownDerived> begin_knownDerivedAsKnownDerived(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_knownDerivedAsKnownDerived(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_knownDerivedAsKnownDerived(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownDerivedAsKnownDerived(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_knownDerivedAsKnownDerived(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownDerivedAsKnownDerived(context, callback, cookie, false);
        }

        public void end_knownDerivedAsKnownDerived(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _knownDerivedAsKnownDerived_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_knownDerivedAsKnownDerived> begin_knownDerivedAsKnownDerived(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_knownDerivedAsKnownDerived_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_knownDerivedAsKnownDerived, object>(
                (Callback_TestIntf_knownDerivedAsKnownDerived cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _knownDerivedAsKnownDerived_name, cookie, completedCallback);
            _iceI_knownDerivedAsKnownDerived(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_unknownIntermediateAsBase> begin_unknownIntermediateAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_unknownIntermediateAsBase(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_unknownIntermediateAsBase(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownIntermediateAsBase(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_unknownIntermediateAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownIntermediateAsBase(context, callback, cookie, false);
        }

        public void end_unknownIntermediateAsBase(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _unknownIntermediateAsBase_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_unknownIntermediateAsBase> begin_unknownIntermediateAsBase(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_unknownIntermediateAsBase_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_unknownIntermediateAsBase, object>(
                (Callback_TestIntf_unknownIntermediateAsBase cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _unknownIntermediateAsBase_name, cookie, completedCallback);
            _iceI_unknownIntermediateAsBase(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_knownIntermediateAsBase> begin_knownIntermediateAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_knownIntermediateAsBase(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_knownIntermediateAsBase(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownIntermediateAsBase(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_knownIntermediateAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownIntermediateAsBase(context, callback, cookie, false);
        }

        public void end_knownIntermediateAsBase(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _knownIntermediateAsBase_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_knownIntermediateAsBase> begin_knownIntermediateAsBase(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_knownIntermediateAsBase_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_knownIntermediateAsBase, object>(
                (Callback_TestIntf_knownIntermediateAsBase cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _knownIntermediateAsBase_name, cookie, completedCallback);
            _iceI_knownIntermediateAsBase(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_knownMostDerivedAsBase> begin_knownMostDerivedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_knownMostDerivedAsBase(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_knownMostDerivedAsBase(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownMostDerivedAsBase(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_knownMostDerivedAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownMostDerivedAsBase(context, callback, cookie, false);
        }

        public void end_knownMostDerivedAsBase(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _knownMostDerivedAsBase_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_knownMostDerivedAsBase> begin_knownMostDerivedAsBase(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_knownMostDerivedAsBase_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_knownMostDerivedAsBase, object>(
                (Callback_TestIntf_knownMostDerivedAsBase cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _knownMostDerivedAsBase_name, cookie, completedCallback);
            _iceI_knownMostDerivedAsBase(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_knownIntermediateAsKnownIntermediate> begin_knownIntermediateAsKnownIntermediate(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_knownIntermediateAsKnownIntermediate(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_knownIntermediateAsKnownIntermediate(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownIntermediateAsKnownIntermediate(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_knownIntermediateAsKnownIntermediate(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownIntermediateAsKnownIntermediate(context, callback, cookie, false);
        }

        public void end_knownIntermediateAsKnownIntermediate(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _knownIntermediateAsKnownIntermediate_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_knownIntermediateAsKnownIntermediate> begin_knownIntermediateAsKnownIntermediate(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_knownIntermediateAsKnownIntermediate_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_knownIntermediateAsKnownIntermediate, object>(
                (Callback_TestIntf_knownIntermediateAsKnownIntermediate cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _knownIntermediateAsKnownIntermediate_name, cookie, completedCallback);
            _iceI_knownIntermediateAsKnownIntermediate(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_knownMostDerivedAsKnownIntermediate> begin_knownMostDerivedAsKnownIntermediate(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_knownMostDerivedAsKnownIntermediate(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_knownMostDerivedAsKnownIntermediate(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownMostDerivedAsKnownIntermediate(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_knownMostDerivedAsKnownIntermediate(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownMostDerivedAsKnownIntermediate(context, callback, cookie, false);
        }

        public void end_knownMostDerivedAsKnownIntermediate(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _knownMostDerivedAsKnownIntermediate_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_knownMostDerivedAsKnownIntermediate> begin_knownMostDerivedAsKnownIntermediate(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_knownMostDerivedAsKnownIntermediate_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_knownMostDerivedAsKnownIntermediate, object>(
                (Callback_TestIntf_knownMostDerivedAsKnownIntermediate cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _knownMostDerivedAsKnownIntermediate_name, cookie, completedCallback);
            _iceI_knownMostDerivedAsKnownIntermediate(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_knownMostDerivedAsKnownMostDerived> begin_knownMostDerivedAsKnownMostDerived(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_knownMostDerivedAsKnownMostDerived(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_knownMostDerivedAsKnownMostDerived(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownMostDerivedAsKnownMostDerived(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_knownMostDerivedAsKnownMostDerived(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownMostDerivedAsKnownMostDerived(context, callback, cookie, false);
        }

        public void end_knownMostDerivedAsKnownMostDerived(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _knownMostDerivedAsKnownMostDerived_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_knownMostDerivedAsKnownMostDerived> begin_knownMostDerivedAsKnownMostDerived(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_knownMostDerivedAsKnownMostDerived_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_knownMostDerivedAsKnownMostDerived, object>(
                (Callback_TestIntf_knownMostDerivedAsKnownMostDerived cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _knownMostDerivedAsKnownMostDerived_name, cookie, completedCallback);
            _iceI_knownMostDerivedAsKnownMostDerived(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_unknownMostDerived1AsBase> begin_unknownMostDerived1AsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_unknownMostDerived1AsBase(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_unknownMostDerived1AsBase(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownMostDerived1AsBase(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_unknownMostDerived1AsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownMostDerived1AsBase(context, callback, cookie, false);
        }

        public void end_unknownMostDerived1AsBase(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _unknownMostDerived1AsBase_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_unknownMostDerived1AsBase> begin_unknownMostDerived1AsBase(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_unknownMostDerived1AsBase_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_unknownMostDerived1AsBase, object>(
                (Callback_TestIntf_unknownMostDerived1AsBase cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _unknownMostDerived1AsBase_name, cookie, completedCallback);
            _iceI_unknownMostDerived1AsBase(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_unknownMostDerived1AsKnownIntermediate> begin_unknownMostDerived1AsKnownIntermediate(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_unknownMostDerived1AsKnownIntermediate(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_unknownMostDerived1AsKnownIntermediate(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownMostDerived1AsKnownIntermediate(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_unknownMostDerived1AsKnownIntermediate(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownMostDerived1AsKnownIntermediate(context, callback, cookie, false);
        }

        public void end_unknownMostDerived1AsKnownIntermediate(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _unknownMostDerived1AsKnownIntermediate_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_unknownMostDerived1AsKnownIntermediate> begin_unknownMostDerived1AsKnownIntermediate(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_unknownMostDerived1AsKnownIntermediate_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_unknownMostDerived1AsKnownIntermediate, object>(
                (Callback_TestIntf_unknownMostDerived1AsKnownIntermediate cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _unknownMostDerived1AsKnownIntermediate_name, cookie, completedCallback);
            _iceI_unknownMostDerived1AsKnownIntermediate(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_unknownMostDerived2AsBase> begin_unknownMostDerived2AsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_unknownMostDerived2AsBase(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_unknownMostDerived2AsBase(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownMostDerived2AsBase(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_unknownMostDerived2AsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownMostDerived2AsBase(context, callback, cookie, false);
        }

        public void end_unknownMostDerived2AsBase(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _unknownMostDerived2AsBase_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_unknownMostDerived2AsBase> begin_unknownMostDerived2AsBase(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_unknownMostDerived2AsBase_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_unknownMostDerived2AsBase, object>(
                (Callback_TestIntf_unknownMostDerived2AsBase cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _unknownMostDerived2AsBase_name, cookie, completedCallback);
            _iceI_unknownMostDerived2AsBase(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_unknownMostDerived2AsBaseCompact> begin_unknownMostDerived2AsBaseCompact(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_unknownMostDerived2AsBaseCompact(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_unknownMostDerived2AsBaseCompact(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownMostDerived2AsBaseCompact(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_unknownMostDerived2AsBaseCompact(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownMostDerived2AsBaseCompact(context, callback, cookie, false);
        }

        public void end_unknownMostDerived2AsBaseCompact(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _unknownMostDerived2AsBaseCompact_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_unknownMostDerived2AsBaseCompact> begin_unknownMostDerived2AsBaseCompact(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_unknownMostDerived2AsBaseCompact_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_unknownMostDerived2AsBaseCompact, object>(
                (Callback_TestIntf_unknownMostDerived2AsBaseCompact cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _unknownMostDerived2AsBaseCompact_name, cookie, completedCallback);
            _iceI_unknownMostDerived2AsBaseCompact(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_knownPreservedAsBase> begin_knownPreservedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_knownPreservedAsBase(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_knownPreservedAsBase(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownPreservedAsBase(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_knownPreservedAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownPreservedAsBase(context, callback, cookie, false);
        }

        public void end_knownPreservedAsBase(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _knownPreservedAsBase_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_knownPreservedAsBase> begin_knownPreservedAsBase(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_knownPreservedAsBase_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_knownPreservedAsBase, object>(
                (Callback_TestIntf_knownPreservedAsBase cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _knownPreservedAsBase_name, cookie, completedCallback);
            _iceI_knownPreservedAsBase(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_knownPreservedAsKnownPreserved> begin_knownPreservedAsKnownPreserved(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_knownPreservedAsKnownPreserved(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_knownPreservedAsKnownPreserved(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownPreservedAsKnownPreserved(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_knownPreservedAsKnownPreserved(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_knownPreservedAsKnownPreserved(context, callback, cookie, false);
        }

        public void end_knownPreservedAsKnownPreserved(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _knownPreservedAsKnownPreserved_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_knownPreservedAsKnownPreserved> begin_knownPreservedAsKnownPreserved(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_knownPreservedAsKnownPreserved_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_knownPreservedAsKnownPreserved, object>(
                (Callback_TestIntf_knownPreservedAsKnownPreserved cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _knownPreservedAsKnownPreserved_name, cookie, completedCallback);
            _iceI_knownPreservedAsKnownPreserved(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_relayKnownPreservedAsBase> begin_relayKnownPreservedAsBase(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_relayKnownPreservedAsBase(r, context, null, null, false);
        }

        public global::Ice.AsyncResult begin_relayKnownPreservedAsBase(RelayPrx r, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_relayKnownPreservedAsBase(r, new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_relayKnownPreservedAsBase(RelayPrx r, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_relayKnownPreservedAsBase(r, context, callback, cookie, false);
        }

        public void end_relayKnownPreservedAsBase(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _relayKnownPreservedAsBase_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_relayKnownPreservedAsBase> begin_relayKnownPreservedAsBase(RelayPrx iceP_r, global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_relayKnownPreservedAsBase_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_relayKnownPreservedAsBase, object>(
                (Callback_TestIntf_relayKnownPreservedAsBase cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _relayKnownPreservedAsBase_name, cookie, completedCallback);
            _iceI_relayKnownPreservedAsBase(iceP_r, context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_relayKnownPreservedAsKnownPreserved> begin_relayKnownPreservedAsKnownPreserved(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_relayKnownPreservedAsKnownPreserved(r, context, null, null, false);
        }

        public global::Ice.AsyncResult begin_relayKnownPreservedAsKnownPreserved(RelayPrx r, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_relayKnownPreservedAsKnownPreserved(r, new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_relayKnownPreservedAsKnownPreserved(RelayPrx r, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_relayKnownPreservedAsKnownPreserved(r, context, callback, cookie, false);
        }

        public void end_relayKnownPreservedAsKnownPreserved(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _relayKnownPreservedAsKnownPreserved_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_relayKnownPreservedAsKnownPreserved> begin_relayKnownPreservedAsKnownPreserved(RelayPrx iceP_r, global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_relayKnownPreservedAsKnownPreserved_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_relayKnownPreservedAsKnownPreserved, object>(
                (Callback_TestIntf_relayKnownPreservedAsKnownPreserved cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _relayKnownPreservedAsKnownPreserved_name, cookie, completedCallback);
            _iceI_relayKnownPreservedAsKnownPreserved(iceP_r, context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_unknownPreservedAsBase> begin_unknownPreservedAsBase(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_unknownPreservedAsBase(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_unknownPreservedAsBase(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownPreservedAsBase(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_unknownPreservedAsBase(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownPreservedAsBase(context, callback, cookie, false);
        }

        public void end_unknownPreservedAsBase(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _unknownPreservedAsBase_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_unknownPreservedAsBase> begin_unknownPreservedAsBase(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_unknownPreservedAsBase_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_unknownPreservedAsBase, object>(
                (Callback_TestIntf_unknownPreservedAsBase cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _unknownPreservedAsBase_name, cookie, completedCallback);
            _iceI_unknownPreservedAsBase(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_unknownPreservedAsKnownPreserved> begin_unknownPreservedAsKnownPreserved(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_unknownPreservedAsKnownPreserved(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_unknownPreservedAsKnownPreserved(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownPreservedAsKnownPreserved(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_unknownPreservedAsKnownPreserved(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_unknownPreservedAsKnownPreserved(context, callback, cookie, false);
        }

        public void end_unknownPreservedAsKnownPreserved(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _unknownPreservedAsKnownPreserved_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_unknownPreservedAsKnownPreserved> begin_unknownPreservedAsKnownPreserved(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_unknownPreservedAsKnownPreserved_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_unknownPreservedAsKnownPreserved, object>(
                (Callback_TestIntf_unknownPreservedAsKnownPreserved cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _unknownPreservedAsKnownPreserved_name, cookie, completedCallback);
            _iceI_unknownPreservedAsKnownPreserved(context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_relayUnknownPreservedAsBase> begin_relayUnknownPreservedAsBase(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_relayUnknownPreservedAsBase(r, context, null, null, false);
        }

        public global::Ice.AsyncResult begin_relayUnknownPreservedAsBase(RelayPrx r, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_relayUnknownPreservedAsBase(r, new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_relayUnknownPreservedAsBase(RelayPrx r, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_relayUnknownPreservedAsBase(r, context, callback, cookie, false);
        }

        public void end_relayUnknownPreservedAsBase(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _relayUnknownPreservedAsBase_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_relayUnknownPreservedAsBase> begin_relayUnknownPreservedAsBase(RelayPrx iceP_r, global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_relayUnknownPreservedAsBase_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_relayUnknownPreservedAsBase, object>(
                (Callback_TestIntf_relayUnknownPreservedAsBase cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _relayUnknownPreservedAsBase_name, cookie, completedCallback);
            _iceI_relayUnknownPreservedAsBase(iceP_r, context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_relayUnknownPreservedAsKnownPreserved> begin_relayUnknownPreservedAsKnownPreserved(RelayPrx r, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_relayUnknownPreservedAsKnownPreserved(r, context, null, null, false);
        }

        public global::Ice.AsyncResult begin_relayUnknownPreservedAsKnownPreserved(RelayPrx r, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_relayUnknownPreservedAsKnownPreserved(r, new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_relayUnknownPreservedAsKnownPreserved(RelayPrx r, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_relayUnknownPreservedAsKnownPreserved(r, context, callback, cookie, false);
        }

        public void end_relayUnknownPreservedAsKnownPreserved(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _relayUnknownPreservedAsKnownPreserved_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_relayUnknownPreservedAsKnownPreserved> begin_relayUnknownPreservedAsKnownPreserved(RelayPrx iceP_r, global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_relayUnknownPreservedAsKnownPreserved_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_relayUnknownPreservedAsKnownPreserved, object>(
                (Callback_TestIntf_relayUnknownPreservedAsKnownPreserved cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _relayUnknownPreservedAsKnownPreserved_name, cookie, completedCallback);
            _iceI_relayUnknownPreservedAsKnownPreserved(iceP_r, context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_TestIntf_shutdown> begin_shutdown(global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_shutdown(context, null, null, false);
        }

        public global::Ice.AsyncResult begin_shutdown(global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_shutdown(new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_shutdown(global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_shutdown(context, callback, cookie, false);
        }

        public void end_shutdown(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _shutdown_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_TestIntf_shutdown> begin_shutdown(global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_TestIntf_shutdown, object>(
                (Callback_TestIntf_shutdown cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _shutdown_name, cookie, completedCallback);
            _iceI_shutdown(context, synchronous, completed);
            return completed;
        }

        #endregion

        #region Checked and unchecked cast operations

        public static TestIntfPrx checkedCast(global::Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            TestIntfPrx r = b as TestIntfPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                TestIntfPrxHelper h = new TestIntfPrxHelper();
                h.iceCopyFrom(b);
                r = h;
            }
            return r;
        }

        public static TestIntfPrx checkedCast(global::Ice.ObjectPrx b, global::System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            TestIntfPrx r = b as TestIntfPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                TestIntfPrxHelper h = new TestIntfPrxHelper();
                h.iceCopyFrom(b);
                r = h;
            }
            return r;
        }

        public static TestIntfPrx checkedCast(global::Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            global::Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    TestIntfPrxHelper h = new TestIntfPrxHelper();
                    h.iceCopyFrom(bb);
                    return h;
                }
            }
            catch(global::Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static TestIntfPrx checkedCast(global::Ice.ObjectPrx b, string f, global::System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            global::Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    TestIntfPrxHelper h = new TestIntfPrxHelper();
                    h.iceCopyFrom(bb);
                    return h;
                }
            }
            catch(global::Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static TestIntfPrx uncheckedCast(global::Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            TestIntfPrx r = b as TestIntfPrx;
            if(r == null)
            {
                TestIntfPrxHelper h = new TestIntfPrxHelper();
                h.iceCopyFrom(b);
                r = h;
            }
            return r;
        }

        public static TestIntfPrx uncheckedCast(global::Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            global::Ice.ObjectPrx bb = b.ice_facet(f);
            TestIntfPrxHelper h = new TestIntfPrxHelper();
            h.iceCopyFrom(bb);
            return h;
        }

        private static readonly string[] _ids =
        {
            "::Ice::Object",
            "::Test::TestIntf"
        };

        public static string ice_staticId()
        {
            return _ids[1];
        }

        #endregion

        #region Marshaling support

        public static void write(global::Ice.OutputStream ostr, TestIntfPrx v)
        {
            ostr.writeProxy(v);
        }

        public static TestIntfPrx read(global::Ice.InputStream istr)
        {
            global::Ice.ObjectPrx proxy = istr.readProxy();
            if(proxy != null)
            {
                TestIntfPrxHelper result = new TestIntfPrxHelper();
                result.iceCopyFrom(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace Test
{
    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public abstract class RelayDisp_ : global::Ice.ObjectImpl, Relay
    {
        #region Slice operations

        public abstract void knownPreservedAsBase(global::Ice.Current current = null);

        public abstract void knownPreservedAsKnownPreserved(global::Ice.Current current = null);

        public abstract void unknownPreservedAsBase(global::Ice.Current current = null);

        public abstract void unknownPreservedAsKnownPreserved(global::Ice.Current current = null);

        #endregion

        #region Slice type-related members

        private static readonly string[] _ids =
        {
            "::Ice::Object",
            "::Test::Relay"
        };

        public override bool ice_isA(string s, global::Ice.Current current = null)
        {
            return global::System.Array.BinarySearch(_ids, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids(global::Ice.Current current = null)
        {
            return _ids;
        }

        public override string ice_id(global::Ice.Current current = null)
        {
            return _ids[1];
        }

        public static new string ice_staticId()
        {
            return _ids[1];
        }

        #endregion

        #region Operation dispatch

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_knownPreservedAsBase(Relay obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.knownPreservedAsBase(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_knownPreservedAsKnownPreserved(Relay obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.knownPreservedAsKnownPreserved(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_unknownPreservedAsBase(Relay obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.unknownPreservedAsBase(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_unknownPreservedAsKnownPreserved(Relay obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.unknownPreservedAsKnownPreserved(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        private static readonly string[] _all =
        {
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "knownPreservedAsBase",
            "knownPreservedAsKnownPreserved",
            "unknownPreservedAsBase",
            "unknownPreservedAsKnownPreserved"
        };

        public override global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceDispatch(global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            int pos = global::System.Array.BinarySearch(_all, current.operation, global::IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return global::Ice.ObjectImpl.iceD_ice_id(this, inS, current);
                }
                case 1:
                {
                    return global::Ice.ObjectImpl.iceD_ice_ids(this, inS, current);
                }
                case 2:
                {
                    return global::Ice.ObjectImpl.iceD_ice_isA(this, inS, current);
                }
                case 3:
                {
                    return global::Ice.ObjectImpl.iceD_ice_ping(this, inS, current);
                }
                case 4:
                {
                    return iceD_knownPreservedAsBase(this, inS, current);
                }
                case 5:
                {
                    return iceD_knownPreservedAsKnownPreserved(this, inS, current);
                }
                case 6:
                {
                    return iceD_unknownPreservedAsBase(this, inS, current);
                }
                case 7:
                {
                    return iceD_unknownPreservedAsKnownPreserved(this, inS, current);
                }
            }

            global::System.Diagnostics.Debug.Assert(false);
            throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.10")]
    public abstract class TestIntfDisp_ : global::Ice.ObjectImpl, TestIntf
    {
        #region Slice operations

        public abstract void baseAsBase(global::Ice.Current current = null);

        public abstract void unknownDerivedAsBase(global::Ice.Current current = null);

        public abstract void knownDerivedAsBase(global::Ice.Current current = null);

        public abstract void knownDerivedAsKnownDerived(global::Ice.Current current = null);

        public abstract void unknownIntermediateAsBase(global::Ice.Current current = null);

        public abstract void knownIntermediateAsBase(global::Ice.Current current = null);

        public abstract void knownMostDerivedAsBase(global::Ice.Current current = null);

        public abstract void knownIntermediateAsKnownIntermediate(global::Ice.Current current = null);

        public abstract void knownMostDerivedAsKnownIntermediate(global::Ice.Current current = null);

        public abstract void knownMostDerivedAsKnownMostDerived(global::Ice.Current current = null);

        public abstract void unknownMostDerived1AsBase(global::Ice.Current current = null);

        public abstract void unknownMostDerived1AsKnownIntermediate(global::Ice.Current current = null);

        public abstract void unknownMostDerived2AsBase(global::Ice.Current current = null);

        public abstract void unknownMostDerived2AsBaseCompact(global::Ice.Current current = null);

        public abstract void knownPreservedAsBase(global::Ice.Current current = null);

        public abstract void knownPreservedAsKnownPreserved(global::Ice.Current current = null);

        public abstract void relayKnownPreservedAsBase(RelayPrx r, global::Ice.Current current = null);

        public abstract void relayKnownPreservedAsKnownPreserved(RelayPrx r, global::Ice.Current current = null);

        public abstract void unknownPreservedAsBase(global::Ice.Current current = null);

        public abstract void unknownPreservedAsKnownPreserved(global::Ice.Current current = null);

        public abstract void relayUnknownPreservedAsBase(RelayPrx r, global::Ice.Current current = null);

        public abstract void relayUnknownPreservedAsKnownPreserved(RelayPrx r, global::Ice.Current current = null);

        public abstract void shutdown(global::Ice.Current current = null);

        #endregion

        #region Slice type-related members

        private static readonly string[] _ids =
        {
            "::Ice::Object",
            "::Test::TestIntf"
        };

        public override bool ice_isA(string s, global::Ice.Current current = null)
        {
            return global::System.Array.BinarySearch(_ids, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids(global::Ice.Current current = null)
        {
            return _ids;
        }

        public override string ice_id(global::Ice.Current current = null)
        {
            return _ids[1];
        }

        public static new string ice_staticId()
        {
            return _ids[1];
        }

        #endregion

        #region Operation dispatch

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_baseAsBase(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.baseAsBase(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_unknownDerivedAsBase(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.unknownDerivedAsBase(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_knownDerivedAsBase(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.knownDerivedAsBase(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_knownDerivedAsKnownDerived(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.knownDerivedAsKnownDerived(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_unknownIntermediateAsBase(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.unknownIntermediateAsBase(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_knownIntermediateAsBase(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.knownIntermediateAsBase(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_knownMostDerivedAsBase(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.knownMostDerivedAsBase(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_knownIntermediateAsKnownIntermediate(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.knownIntermediateAsKnownIntermediate(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_knownMostDerivedAsKnownIntermediate(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.knownMostDerivedAsKnownIntermediate(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_knownMostDerivedAsKnownMostDerived(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.knownMostDerivedAsKnownMostDerived(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_unknownMostDerived1AsBase(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.unknownMostDerived1AsBase(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_unknownMostDerived1AsKnownIntermediate(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.unknownMostDerived1AsKnownIntermediate(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_unknownMostDerived2AsBase(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.unknownMostDerived2AsBase(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_unknownMostDerived2AsBaseCompact(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.CompactFormat);
            obj.unknownMostDerived2AsBaseCompact(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_knownPreservedAsBase(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.knownPreservedAsBase(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_knownPreservedAsKnownPreserved(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.knownPreservedAsKnownPreserved(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_relayKnownPreservedAsBase(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            var istr = inS.startReadParams();
            RelayPrx iceP_r;
            iceP_r = RelayPrxHelper.read(istr);
            inS.endReadParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.relayKnownPreservedAsBase(iceP_r, current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_relayKnownPreservedAsKnownPreserved(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            var istr = inS.startReadParams();
            RelayPrx iceP_r;
            iceP_r = RelayPrxHelper.read(istr);
            inS.endReadParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.relayKnownPreservedAsKnownPreserved(iceP_r, current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_unknownPreservedAsBase(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.unknownPreservedAsBase(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_unknownPreservedAsKnownPreserved(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.unknownPreservedAsKnownPreserved(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_relayUnknownPreservedAsBase(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            var istr = inS.startReadParams();
            RelayPrx iceP_r;
            iceP_r = RelayPrxHelper.read(istr);
            inS.endReadParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.relayUnknownPreservedAsBase(iceP_r, current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_relayUnknownPreservedAsKnownPreserved(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            var istr = inS.startReadParams();
            RelayPrx iceP_r;
            iceP_r = RelayPrxHelper.read(istr);
            inS.endReadParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.relayUnknownPreservedAsKnownPreserved(iceP_r, current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_shutdown(TestIntf obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            inS.setFormat(global::Ice.FormatType.SlicedFormat);
            obj.shutdown(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        private static readonly string[] _all =
        {
            "baseAsBase",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "knownDerivedAsBase",
            "knownDerivedAsKnownDerived",
            "knownIntermediateAsBase",
            "knownIntermediateAsKnownIntermediate",
            "knownMostDerivedAsBase",
            "knownMostDerivedAsKnownIntermediate",
            "knownMostDerivedAsKnownMostDerived",
            "knownPreservedAsBase",
            "knownPreservedAsKnownPreserved",
            "relayKnownPreservedAsBase",
            "relayKnownPreservedAsKnownPreserved",
            "relayUnknownPreservedAsBase",
            "relayUnknownPreservedAsKnownPreserved",
            "shutdown",
            "unknownDerivedAsBase",
            "unknownIntermediateAsBase",
            "unknownMostDerived1AsBase",
            "unknownMostDerived1AsKnownIntermediate",
            "unknownMostDerived2AsBase",
            "unknownMostDerived2AsBaseCompact",
            "unknownPreservedAsBase",
            "unknownPreservedAsKnownPreserved"
        };

        public override global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceDispatch(global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            int pos = global::System.Array.BinarySearch(_all, current.operation, global::IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return iceD_baseAsBase(this, inS, current);
                }
                case 1:
                {
                    return global::Ice.ObjectImpl.iceD_ice_id(this, inS, current);
                }
                case 2:
                {
                    return global::Ice.ObjectImpl.iceD_ice_ids(this, inS, current);
                }
                case 3:
                {
                    return global::Ice.ObjectImpl.iceD_ice_isA(this, inS, current);
                }
                case 4:
                {
                    return global::Ice.ObjectImpl.iceD_ice_ping(this, inS, current);
                }
                case 5:
                {
                    return iceD_knownDerivedAsBase(this, inS, current);
                }
                case 6:
                {
                    return iceD_knownDerivedAsKnownDerived(this, inS, current);
                }
                case 7:
                {
                    return iceD_knownIntermediateAsBase(this, inS, current);
                }
                case 8:
                {
                    return iceD_knownIntermediateAsKnownIntermediate(this, inS, current);
                }
                case 9:
                {
                    return iceD_knownMostDerivedAsBase(this, inS, current);
                }
                case 10:
                {
                    return iceD_knownMostDerivedAsKnownIntermediate(this, inS, current);
                }
                case 11:
                {
                    return iceD_knownMostDerivedAsKnownMostDerived(this, inS, current);
                }
                case 12:
                {
                    return iceD_knownPreservedAsBase(this, inS, current);
                }
                case 13:
                {
                    return iceD_knownPreservedAsKnownPreserved(this, inS, current);
                }
                case 14:
                {
                    return iceD_relayKnownPreservedAsBase(this, inS, current);
                }
                case 15:
                {
                    return iceD_relayKnownPreservedAsKnownPreserved(this, inS, current);
                }
                case 16:
                {
                    return iceD_relayUnknownPreservedAsBase(this, inS, current);
                }
                case 17:
                {
                    return iceD_relayUnknownPreservedAsKnownPreserved(this, inS, current);
                }
                case 18:
                {
                    return iceD_shutdown(this, inS, current);
                }
                case 19:
                {
                    return iceD_unknownDerivedAsBase(this, inS, current);
                }
                case 20:
                {
                    return iceD_unknownIntermediateAsBase(this, inS, current);
                }
                case 21:
                {
                    return iceD_unknownMostDerived1AsBase(this, inS, current);
                }
                case 22:
                {
                    return iceD_unknownMostDerived1AsKnownIntermediate(this, inS, current);
                }
                case 23:
                {
                    return iceD_unknownMostDerived2AsBase(this, inS, current);
                }
                case 24:
                {
                    return iceD_unknownMostDerived2AsBaseCompact(this, inS, current);
                }
                case 25:
                {
                    return iceD_unknownPreservedAsBase(this, inS, current);
                }
                case 26:
                {
                    return iceD_unknownPreservedAsKnownPreserved(this, inS, current);
                }
            }

            global::System.Diagnostics.Debug.Assert(false);
            throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
        }

        #endregion
    }
}
