//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

#nullable enable

[assembly:Ice.Slice("Test.ice")]

#pragma warning disable CS1591 // Missing XML Comment
#pragma warning disable CS1573 // Parameter has no matching param tag in the XML comment
#pragma warning disable CS0612 // Type or member is obsolete
#pragma warning disable CS0618 // Type or member is obsolete
#pragma warning disable CS0619 // Type or member is obsolete

namespace Test
{
    public partial record struct StructKey
    {
        public int value;

        partial void ice_initialize();

        public StructKey(int value)
        {
            this.value = value;
            ice_initialize();
        }

        public StructKey(Ice.InputStream istr)
        {
            this.value = istr.readInt();
            ice_initialize();
        }

        public void ice_writeMembers(Ice.OutputStream ostr)
        {
            ostr.writeInt(this.value);
        }

        public static void ice_write(Ice.OutputStream ostr, StructKey v)
        {
            v.ice_writeMembers(ostr);
        }

        public static StructKey ice_read(Ice.InputStream istr) => new(istr);
    }

    [Ice.SliceTypeId("::Test::ClassKey")]
    public partial class ClassKey : Ice.Value
    {
        public int value;

        partial void ice_initialize();

        public ClassKey(int value)
        {
            this.value = value;
            ice_initialize();
        }

        public ClassKey()
        {
            ice_initialize();
        }

        public static new string ice_staticId() => "::Test::ClassKey";
        public override string ice_id() => ice_staticId();

        protected override void iceWriteImpl(Ice.OutputStream ostr_)
        {
            ostr_.startSlice(ice_staticId(), -1, true);
            ostr_.writeInt(value);
            ostr_.endSlice();
        }

        protected override void iceReadImpl(Ice.InputStream istr_)
        {
            istr_.startSlice();
            value = istr_.readInt();
            istr_.endSlice();
        }
    }
}
