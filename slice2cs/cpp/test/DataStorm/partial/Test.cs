// Copyright (c) ZeroC, Inc.
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file 'Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>

#nullable enable

[assembly:Ice.Slice("Test.ice")]

#pragma warning disable CS1591 // Missing XML Comment
#pragma warning disable CS1573 // Parameter has no matching param tag in the XML comment
#pragma warning disable CS0612 // Type or member is obsolete
#pragma warning disable CS0618 // Type or member is obsolete
#pragma warning disable CS0619 // Type or member is obsolete

namespace Test
{
    [Ice.SliceTypeId("::Test::Stock")]
    public partial class Stock : Ice.Value
    {
        public float price;

        public float lastBid;

        public float lastAsk;

        partial void ice_initialize();

        public Stock(float price, float lastBid, float lastAsk)
        {
            this.price = price;
            this.lastBid = lastBid;
            this.lastAsk = lastAsk;
            ice_initialize();
        }

        public Stock()
        {
            ice_initialize();
        }

        public static new string ice_staticId() => "::Test::Stock";
        public override string ice_id() => ice_staticId();

        protected override void iceWriteImpl(Ice.OutputStream ostr_)
        {
            ostr_.startSlice(ice_staticId(), -1, true);
            ostr_.writeFloat(price);
            ostr_.writeFloat(lastBid);
            ostr_.writeFloat(lastAsk);
            ostr_.endSlice();
        }

        protected override void iceReadImpl(Ice.InputStream istr_)
        {
            istr_.startSlice();
            price = istr_.readFloat();
            lastBid = istr_.readFloat();
            lastAsk = istr_.readFloat();
            istr_.endSlice();
        }
    }
}
