// Copyright (c) ZeroC, Inc.
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file 'Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>

#nullable enable

[assembly:Ice.Slice("Test.ice")]

#pragma warning disable CS1591 // Missing XML Comment
#pragma warning disable CS1573 // Parameter has no matching param tag in the XML comment
#pragma warning disable CS0612 // Type or member is obsolete
#pragma warning disable CS0618 // Type or member is obsolete
#pragma warning disable CS0619 // Type or member is obsolete

namespace Test
{
    public sealed partial record class StructValue
    {
        public string firstName = "";

        public string lastName = "";

        public int age;

        partial void ice_initialize();

        public StructValue()
        {
            ice_initialize();
        }

        public StructValue(string firstName, string lastName, int age)
        {
            global::System.ArgumentNullException.ThrowIfNull(firstName);
            this.firstName = firstName;
            global::System.ArgumentNullException.ThrowIfNull(lastName);
            this.lastName = lastName;
            this.age = age;
            ice_initialize();
        }

        public StructValue(Ice.InputStream istr)
        {
            this.firstName = istr.readString();
            this.lastName = istr.readString();
            this.age = istr.readInt();
            ice_initialize();
        }

        public void ice_writeMembers(Ice.OutputStream ostr)
        {
            ostr.writeString(this.firstName);
            ostr.writeString(this.lastName);
            ostr.writeInt(this.age);
        }

        public static void ice_write(Ice.OutputStream ostr, StructValue v)
        {
            v.ice_writeMembers(ostr);
        }

        public static StructValue ice_read(Ice.InputStream istr) => new(istr);
    }

    [Ice.SliceTypeId("::Test::Base")]
    public partial class Base : Ice.Value
    {
        public string b = "";

        partial void ice_initialize();

        public Base(string b)
        {
            global::System.ArgumentNullException.ThrowIfNull(b);
            this.b = b;
            ice_initialize();
        }

        public Base()
        {
            ice_initialize();
        }

        public static new string ice_staticId() => "::Test::Base";
        public override string ice_id() => ice_staticId();

        protected override void iceWriteImpl(Ice.OutputStream ostr_)
        {
            ostr_.startSlice(ice_staticId(), -1, true);
            ostr_.writeString(b);
            ostr_.endSlice();
        }

        protected override void iceReadImpl(Ice.InputStream istr_)
        {
            istr_.startSlice();
            b = istr_.readString();
            istr_.endSlice();
        }
    }

    [Ice.SliceTypeId("::Test::Extended")]
    public partial class Extended : Base
    {
        public int e;

        partial void ice_initialize();

        public Extended(string b, int e) : base(b)
        {
            this.e = e;
            ice_initialize();
        }

        public Extended()
        {
            ice_initialize();
        }

        public static new string ice_staticId() => "::Test::Extended";
        public override string ice_id() => ice_staticId();

        protected override void iceWriteImpl(Ice.OutputStream ostr_)
        {
            ostr_.startSlice(ice_staticId(), -1, false);
            ostr_.writeInt(e);
            ostr_.endSlice();
            base.iceWriteImpl(ostr_);
        }

        protected override void iceReadImpl(Ice.InputStream istr_)
        {
            istr_.startSlice();
            e = istr_.readInt();
            istr_.endSlice();
            base.iceReadImpl(istr_);
        }
    }
}
