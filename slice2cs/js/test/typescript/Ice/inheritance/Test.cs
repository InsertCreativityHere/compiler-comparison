//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

using _System = global::System;

[assembly:Ice.Slice("Test.ice")]

#pragma warning disable 1591

namespace Test
{
    namespace MA
    {
        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial interface IA : global::Ice.Object, IAOperations_
        {
        }
    }

    namespace MB
    {
        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial interface IB1 : global::Ice.Object, IB1Operations_, global::Test.MA.IA
        {
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial interface IB2 : global::Ice.Object, IB2Operations_, global::Test.MA.IA
        {
        }
    }

    namespace MA
    {
        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial interface IC : global::Ice.Object, ICOperations_, global::Test.MB.IB1, global::Test.MB.IB2
        {
        }
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface Initial : global::Ice.Object, InitialOperations_
    {
    }

    namespace MC
    {
        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MC::A")]
        public partial class A : global::Ice.Value
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int aA;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public A(int aA)
            {
                this.aA = aA;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public A()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MC::A";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, true);
                ostr_.writeInt(aA);
                ostr_.endSlice();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                aA = istr_.readInt();
                istr_.endSlice();
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MC::B")]
        public partial class B : A
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int bB;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public B(int aA, int bB) : base(aA)
            {
                this.bB = bB;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public B()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MC::B";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(bB);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                bB = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MC::C")]
        public partial class C : B
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int cC;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public C(int aA, int bB, int cC) : base(aA, bB)
            {
                this.cC = cC;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public C()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MC::C";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(cC);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                cC = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MC::D")]
        public partial class D : C
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int dD;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public D(int aA, int bB, int cC, int dD) : base(aA, bB, cC)
            {
                this.dD = dD;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public D()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MC::D";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(dD);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                dD = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }
    }

    namespace MD
    {
        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MD::A")]
        public partial class A : global::Ice.Value
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int aA;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public A(int aA)
            {
                this.aA = aA;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public A()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MD::A";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, true);
                ostr_.writeInt(aA);
                ostr_.endSlice();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                aA = istr_.readInt();
                istr_.endSlice();
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MD::B")]
        public partial class B : A
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int bB;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public B(int aA, int bB) : base(aA)
            {
                this.bB = bB;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public B()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MD::B";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(bB);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                bB = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MD::C")]
        public partial class C : B
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int cC;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public C(int aA, int bB, int cC) : base(aA, bB)
            {
                this.cC = cC;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public C()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MD::C";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(cC);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                cC = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MD::D")]
        public partial class D : C
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int dD;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public D(int aA, int bB, int cC, int dD) : base(aA, bB, cC)
            {
                this.dD = dD;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public D()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MD::D";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(dD);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                dD = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }
    }

    namespace ME
    {
        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::ME::A")]
        public partial class A : global::Ice.Value
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int aA;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public A(int aA)
            {
                this.aA = aA;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public A()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::ME::A";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, true);
                ostr_.writeInt(aA);
                ostr_.endSlice();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                aA = istr_.readInt();
                istr_.endSlice();
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::ME::B")]
        public partial class B : A
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int bB;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public B(int aA, int bB) : base(aA)
            {
                this.bB = bB;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public B()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::ME::B";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(bB);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                bB = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::ME::C")]
        public partial class C : B
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int cC;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public C(int aA, int bB, int cC) : base(aA, bB)
            {
                this.cC = cC;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public C()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::ME::C";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(cC);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                cC = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::ME::D")]
        public partial class D : C
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int dD;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public D(int aA, int bB, int cC, int dD) : base(aA, bB, cC)
            {
                this.dD = dD;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public D()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::ME::D";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(dD);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                dD = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }
    }

    namespace MF
    {
        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MF::A")]
        public partial class A : global::Ice.Value
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int aA;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public A(int aA)
            {
                this.aA = aA;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public A()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MF::A";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, true);
                ostr_.writeInt(aA);
                ostr_.endSlice();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                aA = istr_.readInt();
                istr_.endSlice();
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MF::B")]
        public partial class B : A
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int bB;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public B(int aA, int bB) : base(aA)
            {
                this.bB = bB;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public B()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MF::B";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(bB);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                bB = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MF::C")]
        public partial class C : B
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int cC;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public C(int aA, int bB, int cC) : base(aA, bB)
            {
                this.cC = cC;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public C()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MF::C";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(cC);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                cC = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MF::D")]
        public partial class D : C
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int dD;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public D(int aA, int bB, int cC, int dD) : base(aA, bB, cC)
            {
                this.dD = dD;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public D()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MF::D";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(dD);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                dD = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }
    }

    namespace MG
    {
        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MG::A")]
        public partial class A : global::Ice.Value
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int aA;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public A(int aA)
            {
                this.aA = aA;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public A()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MG::A";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, true);
                ostr_.writeInt(aA);
                ostr_.endSlice();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                aA = istr_.readInt();
                istr_.endSlice();
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MG::B")]
        public partial class B : A
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int bB;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public B(int aA, int bB) : base(aA)
            {
                this.bB = bB;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public B()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MG::B";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(bB);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                bB = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MG::C")]
        public partial class C : B
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int cC;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public C(int aA, int bB, int cC) : base(aA, bB)
            {
                this.cC = cC;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public C()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MG::C";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(cC);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                cC = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MG::D")]
        public partial class D : C
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int dD;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public D(int aA, int bB, int cC, int dD) : base(aA, bB, cC)
            {
                this.dD = dD;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public D()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MG::D";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(dD);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                dD = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }
    }

    namespace MH
    {
        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MH::A")]
        public partial class A : global::Ice.Value
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int aA;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public A(int aA)
            {
                this.aA = aA;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public A()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MH::A";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, true);
                ostr_.writeInt(aA);
                ostr_.endSlice();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                aA = istr_.readInt();
                istr_.endSlice();
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MH::B")]
        public partial class B : A
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int bB;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public B(int aA, int bB) : base(aA)
            {
                this.bB = bB;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public B()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MH::B";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(bB);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                bB = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MH::C")]
        public partial class C : B
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int cC;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public C(int aA, int bB, int cC) : base(aA, bB)
            {
                this.cC = cC;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public C()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MH::C";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(cC);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                cC = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [Ice.SliceTypeId("::Test::MH::D")]
        public partial class D : C
        {
            #region Slice data members

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public int dD;

            #endregion

            partial void ice_initialize();

            #region Constructors

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public D(int aA, int bB, int cC, int dD) : base(aA, bB, cC)
            {
                this.dD = dD;
                ice_initialize();
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public D()
            {
                ice_initialize();
            }

            #endregion

            private const string _id = "::Test::MH::D";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public static new string ice_staticId()
            {
                return _id;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            public override string ice_id()
            {
                return _id;
            }

            #region Marshaling support

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
            {
                ostr_.startSlice(ice_staticId(), -1, false);
                ostr_.writeInt(dD);
                ostr_.endSlice();
                base.iceWriteImpl(ostr_);
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            protected override void iceReadImpl(global::Ice.InputStream istr_)
            {
                istr_.startSlice();
                dD = istr_.readInt();
                istr_.endSlice();
                base.iceReadImpl(istr_);
            }

            #endregion
        }
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface Echo : global::Ice.Object, EchoOperations_
    {
    }
}

namespace Test
{
    namespace MA
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public interface IAPrx : global::Ice.ObjectPrx
        {
            IAPrx iaop(IAPrx p, global::System.Collections.Generic.Dictionary<string, string> context = null);

            global::System.Threading.Tasks.Task<IAPrx> iaopAsync(IAPrx p, global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default);
        }
    }

    namespace MB
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public interface IB1Prx : global::Test.MA.IAPrx
        {
            IB1Prx ib1op(IB1Prx p, global::System.Collections.Generic.Dictionary<string, string> context = null);

            global::System.Threading.Tasks.Task<IB1Prx> ib1opAsync(IB1Prx p, global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public interface IB2Prx : global::Test.MA.IAPrx
        {
            IB2Prx ib2op(IB2Prx p, global::System.Collections.Generic.Dictionary<string, string> context = null);

            global::System.Threading.Tasks.Task<IB2Prx> ib2opAsync(IB2Prx p, global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default);
        }
    }

    namespace MA
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public interface ICPrx : global::Test.MB.IB1Prx, global::Test.MB.IB2Prx
        {
            ICPrx icop(ICPrx p, global::System.Collections.Generic.Dictionary<string, string> context = null);

            global::System.Threading.Tasks.Task<ICPrx> icopAsync(ICPrx p, global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public interface InitialPrx : global::Ice.ObjectPrx
    {
        void shutdown(global::System.Collections.Generic.Dictionary<string, string> context = null);

        global::System.Threading.Tasks.Task shutdownAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default);

        global::Test.MA.IAPrx iaop(global::System.Collections.Generic.Dictionary<string, string> context = null);

        global::System.Threading.Tasks.Task<global::Test.MA.IAPrx> iaopAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default);

        global::Test.MB.IB1Prx ib1op(global::System.Collections.Generic.Dictionary<string, string> context = null);

        global::System.Threading.Tasks.Task<global::Test.MB.IB1Prx> ib1opAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default);

        global::Test.MB.IB2Prx ib2op(global::System.Collections.Generic.Dictionary<string, string> context = null);

        global::System.Threading.Tasks.Task<global::Test.MB.IB2Prx> ib2opAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default);

        global::Test.MA.ICPrx icop(global::System.Collections.Generic.Dictionary<string, string> context = null);

        global::System.Threading.Tasks.Task<global::Test.MA.ICPrx> icopAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default);
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public interface EchoPrx : global::Ice.ObjectPrx
    {
        void setConnection(global::System.Collections.Generic.Dictionary<string, string> context = null);

        global::System.Threading.Tasks.Task setConnectionAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default);

        void startBatch(global::System.Collections.Generic.Dictionary<string, string> context = null);

        global::System.Threading.Tasks.Task startBatchAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default);

        void flushBatch(global::System.Collections.Generic.Dictionary<string, string> context = null);

        global::System.Threading.Tasks.Task flushBatchAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default);

        void shutdown(global::System.Collections.Generic.Dictionary<string, string> context = null);

        global::System.Threading.Tasks.Task shutdownAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default);
    }
}

namespace Test
{
    namespace MA
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public interface IAOperations_
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            IAPrx iaop(IAPrx p, global::Ice.Current current = null);
        }
    }

    namespace MB
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public interface IB1Operations_ : global::Test.MA.IAOperations_
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            IB1Prx ib1op(IB1Prx p, global::Ice.Current current = null);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public interface IB2Operations_ : global::Test.MA.IAOperations_
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            IB2Prx ib2op(IB2Prx p, global::Ice.Current current = null);
        }
    }

    namespace MA
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public interface ICOperations_ : global::Test.MB.IB1Operations_, global::Test.MB.IB2Operations_
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
            ICPrx icop(ICPrx p, global::Ice.Current current = null);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public interface InitialOperations_
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        void shutdown(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        global::Test.MA.IAPrx iaop(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        global::Test.MB.IB1Prx ib1op(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        global::Test.MB.IB2Prx ib2op(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        global::Test.MA.ICPrx icop(global::Ice.Current current = null);
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public interface EchoOperations_
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        void setConnection(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        void startBatch(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        void flushBatch(global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        void shutdown(global::Ice.Current current = null);
    }
}

namespace Test
{
    namespace MA
    {
        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public sealed class IAPrxHelper : global::Ice.ObjectPrxHelperBase, IAPrx
        {
            public IAPrxHelper()
            {
            }

            #region Synchronous operations

            public IAPrx iaop(IAPrx p, global::System.Collections.Generic.Dictionary<string, string> context = null)
            {
                try
                {
                    return _iceI_iaopAsync(p, context, null, global::System.Threading.CancellationToken.None, true).Result;
                }
                catch(global::System.AggregateException ex_)
                {
                    throw ex_.InnerException;
                }
            }

            #endregion

            #region Async Task operations

            public global::System.Threading.Tasks.Task<IAPrx> iaopAsync(IAPrx p, global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
            {
                return _iceI_iaopAsync(p, context, progress, cancel, false);
            }

            private global::System.Threading.Tasks.Task<IAPrx> _iceI_iaopAsync(IAPrx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
            {
                iceCheckTwowayOnly(_iaop_name);
                var completed = new global::Ice.Internal.OperationTaskCompletionCallback<IAPrx>(progress, cancel);
                _iceI_iaop(iceP_p, context, synchronous, completed);
                return completed.Task;
            }

            private const string _iaop_name = "iaop";

            private void _iceI_iaop(IAPrx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
            {
                var outAsync = getOutgoingAsync<IAPrx>(completed);
                outAsync.invoke(
                    _iaop_name,
                    global::Ice.OperationMode.Normal,
                    global::Ice.FormatType.DefaultFormat,
                    context,
                    synchronous,
                    write: (global::Ice.OutputStream ostr) =>
                    {
                        IAPrxHelper.write(ostr, iceP_p);
                    },
                    read: (global::Ice.InputStream istr) =>
                    {
                        IAPrx ret = default;
                        ret = IAPrxHelper.read(istr);
                        return ret;
                    });
            }

            #endregion

            #region Factory operations

            public static IAPrx createProxy(global::Ice.Communicator communicator, string proxyString) =>
                uncheckedCast(global::Ice.ObjectPrxHelper.createProxy(communicator, proxyString));

            public static IAPrx checkedCast(global::Ice.ObjectPrx b, global::System.Collections.Generic.Dictionary<string, string> ctx = null)
            {
                if (b is not null && b.ice_isA(ice_staticId(), ctx))
                {
                    IAPrxHelper prx = new IAPrxHelper();
                    prx.iceCopyFrom(b);
                    return prx;
                }
                return null;
            }

            public static IAPrx checkedCast(global::Ice.ObjectPrx b, string f, global::System.Collections.Generic.Dictionary<string, string> ctx = null)
            {
                global::Ice.ObjectPrx bb = b?.ice_facet(f);
                try
                {
                    if (bb is not null && bb.ice_isA(ice_staticId(), ctx))
                    {
                        IAPrxHelper prx = new IAPrxHelper();
                        prx.iceCopyFrom(bb);
                        return prx;
                    }
                }
                catch (global::Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static IAPrx uncheckedCast(global::Ice.ObjectPrx b)
            {
                if (b is not null)
                {
                    IAPrxHelper prx = new IAPrxHelper();
                    prx.iceCopyFrom(b);
                    return prx;
                }
                return null;
            }

            public static IAPrx uncheckedCast(global::Ice.ObjectPrx b, string f)
            {
                if (b is not null)
                {
                    global::Ice.ObjectPrx bb = b.ice_facet(f);
                    IAPrxHelper prx = new IAPrxHelper();
                    prx.iceCopyFrom(bb);
                    return prx;
                }
                return null;
            }

            private static readonly string[] _ids =
            {
                "::Ice::Object",
                "::Test::MA::IA"
            };

            public static string ice_staticId() => "::Test::MA::IA";

            #endregion

            #region Marshaling support

            public static void write(global::Ice.OutputStream ostr, IAPrx v)
            {
                ostr.writeProxy(v);
            }

            public static IAPrx read(global::Ice.InputStream istr)
            {
                global::Ice.ObjectPrx proxy = istr.readProxy();
                if(proxy != null)
                {
                    IAPrxHelper result = new IAPrxHelper();
                    result.iceCopyFrom(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }
    }

    namespace MB
    {
        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public sealed class IB1PrxHelper : global::Ice.ObjectPrxHelperBase, IB1Prx
        {
            public IB1PrxHelper()
            {
            }

            #region Synchronous operations

            public global::Test.MA.IAPrx iaop(global::Test.MA.IAPrx p, global::System.Collections.Generic.Dictionary<string, string> context = null)
            {
                try
                {
                    return _iceI_iaopAsync(p, context, null, global::System.Threading.CancellationToken.None, true).Result;
                }
                catch(global::System.AggregateException ex_)
                {
                    throw ex_.InnerException;
                }
            }

            public IB1Prx ib1op(IB1Prx p, global::System.Collections.Generic.Dictionary<string, string> context = null)
            {
                try
                {
                    return _iceI_ib1opAsync(p, context, null, global::System.Threading.CancellationToken.None, true).Result;
                }
                catch(global::System.AggregateException ex_)
                {
                    throw ex_.InnerException;
                }
            }

            #endregion

            #region Async Task operations

            public global::System.Threading.Tasks.Task<global::Test.MA.IAPrx> iaopAsync(global::Test.MA.IAPrx p, global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
            {
                return _iceI_iaopAsync(p, context, progress, cancel, false);
            }

            private global::System.Threading.Tasks.Task<global::Test.MA.IAPrx> _iceI_iaopAsync(global::Test.MA.IAPrx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
            {
                iceCheckTwowayOnly(_iaop_name);
                var completed = new global::Ice.Internal.OperationTaskCompletionCallback<global::Test.MA.IAPrx>(progress, cancel);
                _iceI_iaop(iceP_p, context, synchronous, completed);
                return completed.Task;
            }

            private const string _iaop_name = "iaop";

            private void _iceI_iaop(global::Test.MA.IAPrx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
            {
                var outAsync = getOutgoingAsync<global::Test.MA.IAPrx>(completed);
                outAsync.invoke(
                    _iaop_name,
                    global::Ice.OperationMode.Normal,
                    global::Ice.FormatType.DefaultFormat,
                    context,
                    synchronous,
                    write: (global::Ice.OutputStream ostr) =>
                    {
                        global::Test.MA.IAPrxHelper.write(ostr, iceP_p);
                    },
                    read: (global::Ice.InputStream istr) =>
                    {
                        global::Test.MA.IAPrx ret = default;
                        ret = global::Test.MA.IAPrxHelper.read(istr);
                        return ret;
                    });
            }

            public global::System.Threading.Tasks.Task<IB1Prx> ib1opAsync(IB1Prx p, global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
            {
                return _iceI_ib1opAsync(p, context, progress, cancel, false);
            }

            private global::System.Threading.Tasks.Task<IB1Prx> _iceI_ib1opAsync(IB1Prx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
            {
                iceCheckTwowayOnly(_ib1op_name);
                var completed = new global::Ice.Internal.OperationTaskCompletionCallback<IB1Prx>(progress, cancel);
                _iceI_ib1op(iceP_p, context, synchronous, completed);
                return completed.Task;
            }

            private const string _ib1op_name = "ib1op";

            private void _iceI_ib1op(IB1Prx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
            {
                var outAsync = getOutgoingAsync<IB1Prx>(completed);
                outAsync.invoke(
                    _ib1op_name,
                    global::Ice.OperationMode.Normal,
                    global::Ice.FormatType.DefaultFormat,
                    context,
                    synchronous,
                    write: (global::Ice.OutputStream ostr) =>
                    {
                        IB1PrxHelper.write(ostr, iceP_p);
                    },
                    read: (global::Ice.InputStream istr) =>
                    {
                        IB1Prx ret = default;
                        ret = IB1PrxHelper.read(istr);
                        return ret;
                    });
            }

            #endregion

            #region Factory operations

            public static IB1Prx createProxy(global::Ice.Communicator communicator, string proxyString) =>
                uncheckedCast(global::Ice.ObjectPrxHelper.createProxy(communicator, proxyString));

            public static IB1Prx checkedCast(global::Ice.ObjectPrx b, global::System.Collections.Generic.Dictionary<string, string> ctx = null)
            {
                if (b is not null && b.ice_isA(ice_staticId(), ctx))
                {
                    IB1PrxHelper prx = new IB1PrxHelper();
                    prx.iceCopyFrom(b);
                    return prx;
                }
                return null;
            }

            public static IB1Prx checkedCast(global::Ice.ObjectPrx b, string f, global::System.Collections.Generic.Dictionary<string, string> ctx = null)
            {
                global::Ice.ObjectPrx bb = b?.ice_facet(f);
                try
                {
                    if (bb is not null && bb.ice_isA(ice_staticId(), ctx))
                    {
                        IB1PrxHelper prx = new IB1PrxHelper();
                        prx.iceCopyFrom(bb);
                        return prx;
                    }
                }
                catch (global::Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static IB1Prx uncheckedCast(global::Ice.ObjectPrx b)
            {
                if (b is not null)
                {
                    IB1PrxHelper prx = new IB1PrxHelper();
                    prx.iceCopyFrom(b);
                    return prx;
                }
                return null;
            }

            public static IB1Prx uncheckedCast(global::Ice.ObjectPrx b, string f)
            {
                if (b is not null)
                {
                    global::Ice.ObjectPrx bb = b.ice_facet(f);
                    IB1PrxHelper prx = new IB1PrxHelper();
                    prx.iceCopyFrom(bb);
                    return prx;
                }
                return null;
            }

            private static readonly string[] _ids =
            {
                "::Ice::Object",
                "::Test::MA::IA",
                "::Test::MB::IB1"
            };

            public static string ice_staticId() => "::Test::MB::IB1";

            #endregion

            #region Marshaling support

            public static void write(global::Ice.OutputStream ostr, IB1Prx v)
            {
                ostr.writeProxy(v);
            }

            public static IB1Prx read(global::Ice.InputStream istr)
            {
                global::Ice.ObjectPrx proxy = istr.readProxy();
                if(proxy != null)
                {
                    IB1PrxHelper result = new IB1PrxHelper();
                    result.iceCopyFrom(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public sealed class IB2PrxHelper : global::Ice.ObjectPrxHelperBase, IB2Prx
        {
            public IB2PrxHelper()
            {
            }

            #region Synchronous operations

            public global::Test.MA.IAPrx iaop(global::Test.MA.IAPrx p, global::System.Collections.Generic.Dictionary<string, string> context = null)
            {
                try
                {
                    return _iceI_iaopAsync(p, context, null, global::System.Threading.CancellationToken.None, true).Result;
                }
                catch(global::System.AggregateException ex_)
                {
                    throw ex_.InnerException;
                }
            }

            public IB2Prx ib2op(IB2Prx p, global::System.Collections.Generic.Dictionary<string, string> context = null)
            {
                try
                {
                    return _iceI_ib2opAsync(p, context, null, global::System.Threading.CancellationToken.None, true).Result;
                }
                catch(global::System.AggregateException ex_)
                {
                    throw ex_.InnerException;
                }
            }

            #endregion

            #region Async Task operations

            public global::System.Threading.Tasks.Task<global::Test.MA.IAPrx> iaopAsync(global::Test.MA.IAPrx p, global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
            {
                return _iceI_iaopAsync(p, context, progress, cancel, false);
            }

            private global::System.Threading.Tasks.Task<global::Test.MA.IAPrx> _iceI_iaopAsync(global::Test.MA.IAPrx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
            {
                iceCheckTwowayOnly(_iaop_name);
                var completed = new global::Ice.Internal.OperationTaskCompletionCallback<global::Test.MA.IAPrx>(progress, cancel);
                _iceI_iaop(iceP_p, context, synchronous, completed);
                return completed.Task;
            }

            private const string _iaop_name = "iaop";

            private void _iceI_iaop(global::Test.MA.IAPrx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
            {
                var outAsync = getOutgoingAsync<global::Test.MA.IAPrx>(completed);
                outAsync.invoke(
                    _iaop_name,
                    global::Ice.OperationMode.Normal,
                    global::Ice.FormatType.DefaultFormat,
                    context,
                    synchronous,
                    write: (global::Ice.OutputStream ostr) =>
                    {
                        global::Test.MA.IAPrxHelper.write(ostr, iceP_p);
                    },
                    read: (global::Ice.InputStream istr) =>
                    {
                        global::Test.MA.IAPrx ret = default;
                        ret = global::Test.MA.IAPrxHelper.read(istr);
                        return ret;
                    });
            }

            public global::System.Threading.Tasks.Task<IB2Prx> ib2opAsync(IB2Prx p, global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
            {
                return _iceI_ib2opAsync(p, context, progress, cancel, false);
            }

            private global::System.Threading.Tasks.Task<IB2Prx> _iceI_ib2opAsync(IB2Prx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
            {
                iceCheckTwowayOnly(_ib2op_name);
                var completed = new global::Ice.Internal.OperationTaskCompletionCallback<IB2Prx>(progress, cancel);
                _iceI_ib2op(iceP_p, context, synchronous, completed);
                return completed.Task;
            }

            private const string _ib2op_name = "ib2op";

            private void _iceI_ib2op(IB2Prx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
            {
                var outAsync = getOutgoingAsync<IB2Prx>(completed);
                outAsync.invoke(
                    _ib2op_name,
                    global::Ice.OperationMode.Normal,
                    global::Ice.FormatType.DefaultFormat,
                    context,
                    synchronous,
                    write: (global::Ice.OutputStream ostr) =>
                    {
                        IB2PrxHelper.write(ostr, iceP_p);
                    },
                    read: (global::Ice.InputStream istr) =>
                    {
                        IB2Prx ret = default;
                        ret = IB2PrxHelper.read(istr);
                        return ret;
                    });
            }

            #endregion

            #region Factory operations

            public static IB2Prx createProxy(global::Ice.Communicator communicator, string proxyString) =>
                uncheckedCast(global::Ice.ObjectPrxHelper.createProxy(communicator, proxyString));

            public static IB2Prx checkedCast(global::Ice.ObjectPrx b, global::System.Collections.Generic.Dictionary<string, string> ctx = null)
            {
                if (b is not null && b.ice_isA(ice_staticId(), ctx))
                {
                    IB2PrxHelper prx = new IB2PrxHelper();
                    prx.iceCopyFrom(b);
                    return prx;
                }
                return null;
            }

            public static IB2Prx checkedCast(global::Ice.ObjectPrx b, string f, global::System.Collections.Generic.Dictionary<string, string> ctx = null)
            {
                global::Ice.ObjectPrx bb = b?.ice_facet(f);
                try
                {
                    if (bb is not null && bb.ice_isA(ice_staticId(), ctx))
                    {
                        IB2PrxHelper prx = new IB2PrxHelper();
                        prx.iceCopyFrom(bb);
                        return prx;
                    }
                }
                catch (global::Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static IB2Prx uncheckedCast(global::Ice.ObjectPrx b)
            {
                if (b is not null)
                {
                    IB2PrxHelper prx = new IB2PrxHelper();
                    prx.iceCopyFrom(b);
                    return prx;
                }
                return null;
            }

            public static IB2Prx uncheckedCast(global::Ice.ObjectPrx b, string f)
            {
                if (b is not null)
                {
                    global::Ice.ObjectPrx bb = b.ice_facet(f);
                    IB2PrxHelper prx = new IB2PrxHelper();
                    prx.iceCopyFrom(bb);
                    return prx;
                }
                return null;
            }

            private static readonly string[] _ids =
            {
                "::Ice::Object",
                "::Test::MA::IA",
                "::Test::MB::IB2"
            };

            public static string ice_staticId() => "::Test::MB::IB2";

            #endregion

            #region Marshaling support

            public static void write(global::Ice.OutputStream ostr, IB2Prx v)
            {
                ostr.writeProxy(v);
            }

            public static IB2Prx read(global::Ice.InputStream istr)
            {
                global::Ice.ObjectPrx proxy = istr.readProxy();
                if(proxy != null)
                {
                    IB2PrxHelper result = new IB2PrxHelper();
                    result.iceCopyFrom(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }
    }

    namespace MA
    {
        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public sealed class ICPrxHelper : global::Ice.ObjectPrxHelperBase, ICPrx
        {
            public ICPrxHelper()
            {
            }

            #region Synchronous operations

            public IAPrx iaop(IAPrx p, global::System.Collections.Generic.Dictionary<string, string> context = null)
            {
                try
                {
                    return _iceI_iaopAsync(p, context, null, global::System.Threading.CancellationToken.None, true).Result;
                }
                catch(global::System.AggregateException ex_)
                {
                    throw ex_.InnerException;
                }
            }

            public global::Test.MB.IB1Prx ib1op(global::Test.MB.IB1Prx p, global::System.Collections.Generic.Dictionary<string, string> context = null)
            {
                try
                {
                    return _iceI_ib1opAsync(p, context, null, global::System.Threading.CancellationToken.None, true).Result;
                }
                catch(global::System.AggregateException ex_)
                {
                    throw ex_.InnerException;
                }
            }

            public global::Test.MB.IB2Prx ib2op(global::Test.MB.IB2Prx p, global::System.Collections.Generic.Dictionary<string, string> context = null)
            {
                try
                {
                    return _iceI_ib2opAsync(p, context, null, global::System.Threading.CancellationToken.None, true).Result;
                }
                catch(global::System.AggregateException ex_)
                {
                    throw ex_.InnerException;
                }
            }

            public ICPrx icop(ICPrx p, global::System.Collections.Generic.Dictionary<string, string> context = null)
            {
                try
                {
                    return _iceI_icopAsync(p, context, null, global::System.Threading.CancellationToken.None, true).Result;
                }
                catch(global::System.AggregateException ex_)
                {
                    throw ex_.InnerException;
                }
            }

            #endregion

            #region Async Task operations

            public global::System.Threading.Tasks.Task<IAPrx> iaopAsync(IAPrx p, global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
            {
                return _iceI_iaopAsync(p, context, progress, cancel, false);
            }

            private global::System.Threading.Tasks.Task<IAPrx> _iceI_iaopAsync(IAPrx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
            {
                iceCheckTwowayOnly(_iaop_name);
                var completed = new global::Ice.Internal.OperationTaskCompletionCallback<IAPrx>(progress, cancel);
                _iceI_iaop(iceP_p, context, synchronous, completed);
                return completed.Task;
            }

            private const string _iaop_name = "iaop";

            private void _iceI_iaop(IAPrx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
            {
                var outAsync = getOutgoingAsync<IAPrx>(completed);
                outAsync.invoke(
                    _iaop_name,
                    global::Ice.OperationMode.Normal,
                    global::Ice.FormatType.DefaultFormat,
                    context,
                    synchronous,
                    write: (global::Ice.OutputStream ostr) =>
                    {
                        IAPrxHelper.write(ostr, iceP_p);
                    },
                    read: (global::Ice.InputStream istr) =>
                    {
                        IAPrx ret = default;
                        ret = IAPrxHelper.read(istr);
                        return ret;
                    });
            }

            public global::System.Threading.Tasks.Task<global::Test.MB.IB1Prx> ib1opAsync(global::Test.MB.IB1Prx p, global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
            {
                return _iceI_ib1opAsync(p, context, progress, cancel, false);
            }

            private global::System.Threading.Tasks.Task<global::Test.MB.IB1Prx> _iceI_ib1opAsync(global::Test.MB.IB1Prx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
            {
                iceCheckTwowayOnly(_ib1op_name);
                var completed = new global::Ice.Internal.OperationTaskCompletionCallback<global::Test.MB.IB1Prx>(progress, cancel);
                _iceI_ib1op(iceP_p, context, synchronous, completed);
                return completed.Task;
            }

            private const string _ib1op_name = "ib1op";

            private void _iceI_ib1op(global::Test.MB.IB1Prx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
            {
                var outAsync = getOutgoingAsync<global::Test.MB.IB1Prx>(completed);
                outAsync.invoke(
                    _ib1op_name,
                    global::Ice.OperationMode.Normal,
                    global::Ice.FormatType.DefaultFormat,
                    context,
                    synchronous,
                    write: (global::Ice.OutputStream ostr) =>
                    {
                        global::Test.MB.IB1PrxHelper.write(ostr, iceP_p);
                    },
                    read: (global::Ice.InputStream istr) =>
                    {
                        global::Test.MB.IB1Prx ret = default;
                        ret = global::Test.MB.IB1PrxHelper.read(istr);
                        return ret;
                    });
            }

            public global::System.Threading.Tasks.Task<global::Test.MB.IB2Prx> ib2opAsync(global::Test.MB.IB2Prx p, global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
            {
                return _iceI_ib2opAsync(p, context, progress, cancel, false);
            }

            private global::System.Threading.Tasks.Task<global::Test.MB.IB2Prx> _iceI_ib2opAsync(global::Test.MB.IB2Prx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
            {
                iceCheckTwowayOnly(_ib2op_name);
                var completed = new global::Ice.Internal.OperationTaskCompletionCallback<global::Test.MB.IB2Prx>(progress, cancel);
                _iceI_ib2op(iceP_p, context, synchronous, completed);
                return completed.Task;
            }

            private const string _ib2op_name = "ib2op";

            private void _iceI_ib2op(global::Test.MB.IB2Prx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
            {
                var outAsync = getOutgoingAsync<global::Test.MB.IB2Prx>(completed);
                outAsync.invoke(
                    _ib2op_name,
                    global::Ice.OperationMode.Normal,
                    global::Ice.FormatType.DefaultFormat,
                    context,
                    synchronous,
                    write: (global::Ice.OutputStream ostr) =>
                    {
                        global::Test.MB.IB2PrxHelper.write(ostr, iceP_p);
                    },
                    read: (global::Ice.InputStream istr) =>
                    {
                        global::Test.MB.IB2Prx ret = default;
                        ret = global::Test.MB.IB2PrxHelper.read(istr);
                        return ret;
                    });
            }

            public global::System.Threading.Tasks.Task<ICPrx> icopAsync(ICPrx p, global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
            {
                return _iceI_icopAsync(p, context, progress, cancel, false);
            }

            private global::System.Threading.Tasks.Task<ICPrx> _iceI_icopAsync(ICPrx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
            {
                iceCheckTwowayOnly(_icop_name);
                var completed = new global::Ice.Internal.OperationTaskCompletionCallback<ICPrx>(progress, cancel);
                _iceI_icop(iceP_p, context, synchronous, completed);
                return completed.Task;
            }

            private const string _icop_name = "icop";

            private void _iceI_icop(ICPrx iceP_p, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
            {
                var outAsync = getOutgoingAsync<ICPrx>(completed);
                outAsync.invoke(
                    _icop_name,
                    global::Ice.OperationMode.Normal,
                    global::Ice.FormatType.DefaultFormat,
                    context,
                    synchronous,
                    write: (global::Ice.OutputStream ostr) =>
                    {
                        ICPrxHelper.write(ostr, iceP_p);
                    },
                    read: (global::Ice.InputStream istr) =>
                    {
                        ICPrx ret = default;
                        ret = ICPrxHelper.read(istr);
                        return ret;
                    });
            }

            #endregion

            #region Factory operations

            public static ICPrx createProxy(global::Ice.Communicator communicator, string proxyString) =>
                uncheckedCast(global::Ice.ObjectPrxHelper.createProxy(communicator, proxyString));

            public static ICPrx checkedCast(global::Ice.ObjectPrx b, global::System.Collections.Generic.Dictionary<string, string> ctx = null)
            {
                if (b is not null && b.ice_isA(ice_staticId(), ctx))
                {
                    ICPrxHelper prx = new ICPrxHelper();
                    prx.iceCopyFrom(b);
                    return prx;
                }
                return null;
            }

            public static ICPrx checkedCast(global::Ice.ObjectPrx b, string f, global::System.Collections.Generic.Dictionary<string, string> ctx = null)
            {
                global::Ice.ObjectPrx bb = b?.ice_facet(f);
                try
                {
                    if (bb is not null && bb.ice_isA(ice_staticId(), ctx))
                    {
                        ICPrxHelper prx = new ICPrxHelper();
                        prx.iceCopyFrom(bb);
                        return prx;
                    }
                }
                catch (global::Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static ICPrx uncheckedCast(global::Ice.ObjectPrx b)
            {
                if (b is not null)
                {
                    ICPrxHelper prx = new ICPrxHelper();
                    prx.iceCopyFrom(b);
                    return prx;
                }
                return null;
            }

            public static ICPrx uncheckedCast(global::Ice.ObjectPrx b, string f)
            {
                if (b is not null)
                {
                    global::Ice.ObjectPrx bb = b.ice_facet(f);
                    ICPrxHelper prx = new ICPrxHelper();
                    prx.iceCopyFrom(bb);
                    return prx;
                }
                return null;
            }

            private static readonly string[] _ids =
            {
                "::Ice::Object",
                "::Test::MA::IA",
                "::Test::MA::IC",
                "::Test::MB::IB1",
                "::Test::MB::IB2"
            };

            public static string ice_staticId() => "::Test::MA::IC";

            #endregion

            #region Marshaling support

            public static void write(global::Ice.OutputStream ostr, ICPrx v)
            {
                ostr.writeProxy(v);
            }

            public static ICPrx read(global::Ice.InputStream istr)
            {
                global::Ice.ObjectPrx proxy = istr.readProxy();
                if(proxy != null)
                {
                    ICPrxHelper result = new ICPrxHelper();
                    result.iceCopyFrom(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class InitialPrxHelper : global::Ice.ObjectPrxHelperBase, InitialPrx
    {
        public InitialPrxHelper()
        {
        }

        #region Synchronous operations

        public void shutdown(global::System.Collections.Generic.Dictionary<string, string> context = null)
        {
            try
            {
                _iceI_shutdownAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public global::Test.MA.IAPrx iaop(global::System.Collections.Generic.Dictionary<string, string> context = null)
        {
            try
            {
                return _iceI_iaopAsync(context, null, global::System.Threading.CancellationToken.None, true).Result;
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public global::Test.MB.IB1Prx ib1op(global::System.Collections.Generic.Dictionary<string, string> context = null)
        {
            try
            {
                return _iceI_ib1opAsync(context, null, global::System.Threading.CancellationToken.None, true).Result;
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public global::Test.MB.IB2Prx ib2op(global::System.Collections.Generic.Dictionary<string, string> context = null)
        {
            try
            {
                return _iceI_ib2opAsync(context, null, global::System.Threading.CancellationToken.None, true).Result;
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public global::Test.MA.ICPrx icop(global::System.Collections.Generic.Dictionary<string, string> context = null)
        {
            try
            {
                return _iceI_icopAsync(context, null, global::System.Threading.CancellationToken.None, true).Result;
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        #endregion

        #region Async Task operations

        public global::System.Threading.Tasks.Task shutdownAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
        {
            return _iceI_shutdownAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_shutdownAsync(global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            var completed = new global::Ice.Internal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_shutdown(context, synchronous, completed);
            return completed.Task;
        }

        private const string _shutdown_name = "shutdown";

        private void _iceI_shutdown(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _shutdown_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous);
        }

        public global::System.Threading.Tasks.Task<global::Test.MA.IAPrx> iaopAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
        {
            return _iceI_iaopAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task<global::Test.MA.IAPrx> _iceI_iaopAsync(global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_iaop_name);
            var completed = new global::Ice.Internal.OperationTaskCompletionCallback<global::Test.MA.IAPrx>(progress, cancel);
            _iceI_iaop(context, synchronous, completed);
            return completed.Task;
        }

        private const string _iaop_name = "iaop";

        private void _iceI_iaop(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<global::Test.MA.IAPrx>(completed);
            outAsync.invoke(
                _iaop_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous,
                read: (global::Ice.InputStream istr) =>
                {
                    global::Test.MA.IAPrx ret = default;
                    ret = global::Test.MA.IAPrxHelper.read(istr);
                    return ret;
                });
        }

        public global::System.Threading.Tasks.Task<global::Test.MB.IB1Prx> ib1opAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
        {
            return _iceI_ib1opAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task<global::Test.MB.IB1Prx> _iceI_ib1opAsync(global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_ib1op_name);
            var completed = new global::Ice.Internal.OperationTaskCompletionCallback<global::Test.MB.IB1Prx>(progress, cancel);
            _iceI_ib1op(context, synchronous, completed);
            return completed.Task;
        }

        private const string _ib1op_name = "ib1op";

        private void _iceI_ib1op(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<global::Test.MB.IB1Prx>(completed);
            outAsync.invoke(
                _ib1op_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous,
                read: (global::Ice.InputStream istr) =>
                {
                    global::Test.MB.IB1Prx ret = default;
                    ret = global::Test.MB.IB1PrxHelper.read(istr);
                    return ret;
                });
        }

        public global::System.Threading.Tasks.Task<global::Test.MB.IB2Prx> ib2opAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
        {
            return _iceI_ib2opAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task<global::Test.MB.IB2Prx> _iceI_ib2opAsync(global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_ib2op_name);
            var completed = new global::Ice.Internal.OperationTaskCompletionCallback<global::Test.MB.IB2Prx>(progress, cancel);
            _iceI_ib2op(context, synchronous, completed);
            return completed.Task;
        }

        private const string _ib2op_name = "ib2op";

        private void _iceI_ib2op(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<global::Test.MB.IB2Prx>(completed);
            outAsync.invoke(
                _ib2op_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous,
                read: (global::Ice.InputStream istr) =>
                {
                    global::Test.MB.IB2Prx ret = default;
                    ret = global::Test.MB.IB2PrxHelper.read(istr);
                    return ret;
                });
        }

        public global::System.Threading.Tasks.Task<global::Test.MA.ICPrx> icopAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
        {
            return _iceI_icopAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task<global::Test.MA.ICPrx> _iceI_icopAsync(global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_icop_name);
            var completed = new global::Ice.Internal.OperationTaskCompletionCallback<global::Test.MA.ICPrx>(progress, cancel);
            _iceI_icop(context, synchronous, completed);
            return completed.Task;
        }

        private const string _icop_name = "icop";

        private void _iceI_icop(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<global::Test.MA.ICPrx>(completed);
            outAsync.invoke(
                _icop_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous,
                read: (global::Ice.InputStream istr) =>
                {
                    global::Test.MA.ICPrx ret = default;
                    ret = global::Test.MA.ICPrxHelper.read(istr);
                    return ret;
                });
        }

        #endregion

        #region Factory operations

        public static InitialPrx createProxy(global::Ice.Communicator communicator, string proxyString) =>
            uncheckedCast(global::Ice.ObjectPrxHelper.createProxy(communicator, proxyString));

        public static InitialPrx checkedCast(global::Ice.ObjectPrx b, global::System.Collections.Generic.Dictionary<string, string> ctx = null)
        {
            if (b is not null && b.ice_isA(ice_staticId(), ctx))
            {
                InitialPrxHelper prx = new InitialPrxHelper();
                prx.iceCopyFrom(b);
                return prx;
            }
            return null;
        }

        public static InitialPrx checkedCast(global::Ice.ObjectPrx b, string f, global::System.Collections.Generic.Dictionary<string, string> ctx = null)
        {
            global::Ice.ObjectPrx bb = b?.ice_facet(f);
            try
            {
                if (bb is not null && bb.ice_isA(ice_staticId(), ctx))
                {
                    InitialPrxHelper prx = new InitialPrxHelper();
                    prx.iceCopyFrom(bb);
                    return prx;
                }
            }
            catch (global::Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static InitialPrx uncheckedCast(global::Ice.ObjectPrx b)
        {
            if (b is not null)
            {
                InitialPrxHelper prx = new InitialPrxHelper();
                prx.iceCopyFrom(b);
                return prx;
            }
            return null;
        }

        public static InitialPrx uncheckedCast(global::Ice.ObjectPrx b, string f)
        {
            if (b is not null)
            {
                global::Ice.ObjectPrx bb = b.ice_facet(f);
                InitialPrxHelper prx = new InitialPrxHelper();
                prx.iceCopyFrom(bb);
                return prx;
            }
            return null;
        }

        private static readonly string[] _ids =
        {
            "::Ice::Object",
            "::Test::Initial"
        };

        public static string ice_staticId() => "::Test::Initial";

        #endregion

        #region Marshaling support

        public static void write(global::Ice.OutputStream ostr, InitialPrx v)
        {
            ostr.writeProxy(v);
        }

        public static InitialPrx read(global::Ice.InputStream istr)
        {
            global::Ice.ObjectPrx proxy = istr.readProxy();
            if(proxy != null)
            {
                InitialPrxHelper result = new InitialPrxHelper();
                result.iceCopyFrom(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class EchoPrxHelper : global::Ice.ObjectPrxHelperBase, EchoPrx
    {
        public EchoPrxHelper()
        {
        }

        #region Synchronous operations

        public void setConnection(global::System.Collections.Generic.Dictionary<string, string> context = null)
        {
            try
            {
                _iceI_setConnectionAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void startBatch(global::System.Collections.Generic.Dictionary<string, string> context = null)
        {
            try
            {
                _iceI_startBatchAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void flushBatch(global::System.Collections.Generic.Dictionary<string, string> context = null)
        {
            try
            {
                _iceI_flushBatchAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public void shutdown(global::System.Collections.Generic.Dictionary<string, string> context = null)
        {
            try
            {
                _iceI_shutdownAsync(context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        #endregion

        #region Async Task operations

        public global::System.Threading.Tasks.Task setConnectionAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
        {
            return _iceI_setConnectionAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_setConnectionAsync(global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            var completed = new global::Ice.Internal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_setConnection(context, synchronous, completed);
            return completed.Task;
        }

        private const string _setConnection_name = "setConnection";

        private void _iceI_setConnection(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _setConnection_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous);
        }

        public global::System.Threading.Tasks.Task startBatchAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
        {
            return _iceI_startBatchAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_startBatchAsync(global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            var completed = new global::Ice.Internal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_startBatch(context, synchronous, completed);
            return completed.Task;
        }

        private const string _startBatch_name = "startBatch";

        private void _iceI_startBatch(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _startBatch_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous);
        }

        public global::System.Threading.Tasks.Task flushBatchAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
        {
            return _iceI_flushBatchAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_flushBatchAsync(global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            var completed = new global::Ice.Internal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_flushBatch(context, synchronous, completed);
            return completed.Task;
        }

        private const string _flushBatch_name = "flushBatch";

        private void _iceI_flushBatch(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _flushBatch_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous);
        }

        public global::System.Threading.Tasks.Task shutdownAsync(global::System.Collections.Generic.Dictionary<string, string> context = null, global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = default)
        {
            return _iceI_shutdownAsync(context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_shutdownAsync(global::System.Collections.Generic.Dictionary<string, string> context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            var completed = new global::Ice.Internal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_shutdown(context, synchronous, completed);
            return completed.Task;
        }

        private const string _shutdown_name = "shutdown";

        private void _iceI_shutdown(global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::Ice.Internal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _shutdown_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous);
        }

        #endregion

        #region Factory operations

        public static EchoPrx createProxy(global::Ice.Communicator communicator, string proxyString) =>
            uncheckedCast(global::Ice.ObjectPrxHelper.createProxy(communicator, proxyString));

        public static EchoPrx checkedCast(global::Ice.ObjectPrx b, global::System.Collections.Generic.Dictionary<string, string> ctx = null)
        {
            if (b is not null && b.ice_isA(ice_staticId(), ctx))
            {
                EchoPrxHelper prx = new EchoPrxHelper();
                prx.iceCopyFrom(b);
                return prx;
            }
            return null;
        }

        public static EchoPrx checkedCast(global::Ice.ObjectPrx b, string f, global::System.Collections.Generic.Dictionary<string, string> ctx = null)
        {
            global::Ice.ObjectPrx bb = b?.ice_facet(f);
            try
            {
                if (bb is not null && bb.ice_isA(ice_staticId(), ctx))
                {
                    EchoPrxHelper prx = new EchoPrxHelper();
                    prx.iceCopyFrom(bb);
                    return prx;
                }
            }
            catch (global::Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static EchoPrx uncheckedCast(global::Ice.ObjectPrx b)
        {
            if (b is not null)
            {
                EchoPrxHelper prx = new EchoPrxHelper();
                prx.iceCopyFrom(b);
                return prx;
            }
            return null;
        }

        public static EchoPrx uncheckedCast(global::Ice.ObjectPrx b, string f)
        {
            if (b is not null)
            {
                global::Ice.ObjectPrx bb = b.ice_facet(f);
                EchoPrxHelper prx = new EchoPrxHelper();
                prx.iceCopyFrom(bb);
                return prx;
            }
            return null;
        }

        private static readonly string[] _ids =
        {
            "::Ice::Object",
            "::Test::Echo"
        };

        public static string ice_staticId() => "::Test::Echo";

        #endregion

        #region Marshaling support

        public static void write(global::Ice.OutputStream ostr, EchoPrx v)
        {
            ostr.writeProxy(v);
        }

        public static EchoPrx read(global::Ice.InputStream istr)
        {
            global::Ice.ObjectPrx proxy = istr.readProxy();
            if(proxy != null)
            {
                EchoPrxHelper result = new EchoPrxHelper();
                result.iceCopyFrom(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace Test
{
    namespace MA
    {
        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public abstract class IADisp_ : global::Ice.ObjectImpl, IA
        {
            #region Slice operations

            public abstract IAPrx iaop(IAPrx p, global::Ice.Current current = null);

            #endregion

            #region Slice type-related members

            private static readonly string[] _ids =
            {
                "::Ice::Object",
                "::Test::MA::IA"
            };

            public override bool ice_isA(string s, global::Ice.Current current = null)
            {
                return global::System.Array.BinarySearch(_ids, s, Ice.UtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            public override string[] ice_ids(global::Ice.Current current = null)
            {
                return _ids;
            }

            public override string ice_id(global::Ice.Current current = null)
            {
                return ice_staticId();
            }

            public static new string ice_staticId()
            {
                return "::Test::MA::IA";
            }

            #endregion

            #region Operation dispatch

            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
            iceD_iaop(IA obj, global::Ice.Internal.Incoming inS, global::Ice.Current current)
            {
                global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
                var istr = inS.startReadParams();
                IAPrx iceP_p = default;
                iceP_p = IAPrxHelper.read(istr);
                inS.endReadParams();
                var ret = obj.iaop(iceP_p, current);
                var ostr = inS.startWriteParams();
                IAPrxHelper.write(ostr, ret);
                inS.endWriteParams(ostr);
                return inS.setResult(ostr);
            }

            private static readonly string[] _all =
            {
                "iaop",
                "ice_id",
                "ice_ids",
                "ice_isA",
                "ice_ping"
            };

            public override global::System.Threading.Tasks.Task<global::Ice.OutputStream>
            iceDispatch(global::Ice.Internal.Incoming inS, global::Ice.Current current)
            {
                int pos = global::System.Array.BinarySearch(_all, current.operation, global::Ice.UtilInternal.StringUtil.OrdinalStringComparer);
                if(pos < 0)
                {
                    throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
                }

                switch(pos)
                {
                    case 0:
                    {
                        return iceD_iaop(this, inS, current);
                    }
                    case 1:
                    {
                        return global::Ice.ObjectImpl.iceD_ice_id(this, inS, current);
                    }
                    case 2:
                    {
                        return global::Ice.ObjectImpl.iceD_ice_ids(this, inS, current);
                    }
                    case 3:
                    {
                        return global::Ice.ObjectImpl.iceD_ice_isA(this, inS, current);
                    }
                    case 4:
                    {
                        return global::Ice.ObjectImpl.iceD_ice_ping(this, inS, current);
                    }
                }

                global::System.Diagnostics.Debug.Assert(false);
                throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
            }

            #endregion
        }
    }

    namespace MB
    {
        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public abstract class IB1Disp_ : global::Ice.ObjectImpl, IB1
        {
            #region Slice operations

            public abstract IB1Prx ib1op(IB1Prx p, global::Ice.Current current = null);

            #endregion

            #region Inherited Slice operations

            public abstract global::Test.MA.IAPrx iaop(global::Test.MA.IAPrx p, global::Ice.Current current = null);

            #endregion

            #region Slice type-related members

            private static readonly string[] _ids =
            {
                "::Ice::Object",
                "::Test::MA::IA",
                "::Test::MB::IB1"
            };

            public override bool ice_isA(string s, global::Ice.Current current = null)
            {
                return global::System.Array.BinarySearch(_ids, s, Ice.UtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            public override string[] ice_ids(global::Ice.Current current = null)
            {
                return _ids;
            }

            public override string ice_id(global::Ice.Current current = null)
            {
                return ice_staticId();
            }

            public static new string ice_staticId()
            {
                return "::Test::MB::IB1";
            }

            #endregion

            #region Operation dispatch

            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
            iceD_ib1op(IB1 obj, global::Ice.Internal.Incoming inS, global::Ice.Current current)
            {
                global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
                var istr = inS.startReadParams();
                IB1Prx iceP_p = default;
                iceP_p = IB1PrxHelper.read(istr);
                inS.endReadParams();
                var ret = obj.ib1op(iceP_p, current);
                var ostr = inS.startWriteParams();
                IB1PrxHelper.write(ostr, ret);
                inS.endWriteParams(ostr);
                return inS.setResult(ostr);
            }

            private static readonly string[] _all =
            {
                "iaop",
                "ib1op",
                "ice_id",
                "ice_ids",
                "ice_isA",
                "ice_ping"
            };

            public override global::System.Threading.Tasks.Task<global::Ice.OutputStream>
            iceDispatch(global::Ice.Internal.Incoming inS, global::Ice.Current current)
            {
                int pos = global::System.Array.BinarySearch(_all, current.operation, global::Ice.UtilInternal.StringUtil.OrdinalStringComparer);
                if(pos < 0)
                {
                    throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
                }

                switch(pos)
                {
                    case 0:
                    {
                        return global::Test.MA.IADisp_.iceD_iaop(this, inS, current);
                    }
                    case 1:
                    {
                        return iceD_ib1op(this, inS, current);
                    }
                    case 2:
                    {
                        return global::Ice.ObjectImpl.iceD_ice_id(this, inS, current);
                    }
                    case 3:
                    {
                        return global::Ice.ObjectImpl.iceD_ice_ids(this, inS, current);
                    }
                    case 4:
                    {
                        return global::Ice.ObjectImpl.iceD_ice_isA(this, inS, current);
                    }
                    case 5:
                    {
                        return global::Ice.ObjectImpl.iceD_ice_ping(this, inS, current);
                    }
                }

                global::System.Diagnostics.Debug.Assert(false);
                throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
            }

            #endregion
        }

        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public abstract class IB2Disp_ : global::Ice.ObjectImpl, IB2
        {
            #region Slice operations

            public abstract IB2Prx ib2op(IB2Prx p, global::Ice.Current current = null);

            #endregion

            #region Inherited Slice operations

            public abstract global::Test.MA.IAPrx iaop(global::Test.MA.IAPrx p, global::Ice.Current current = null);

            #endregion

            #region Slice type-related members

            private static readonly string[] _ids =
            {
                "::Ice::Object",
                "::Test::MA::IA",
                "::Test::MB::IB2"
            };

            public override bool ice_isA(string s, global::Ice.Current current = null)
            {
                return global::System.Array.BinarySearch(_ids, s, Ice.UtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            public override string[] ice_ids(global::Ice.Current current = null)
            {
                return _ids;
            }

            public override string ice_id(global::Ice.Current current = null)
            {
                return ice_staticId();
            }

            public static new string ice_staticId()
            {
                return "::Test::MB::IB2";
            }

            #endregion

            #region Operation dispatch

            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
            iceD_ib2op(IB2 obj, global::Ice.Internal.Incoming inS, global::Ice.Current current)
            {
                global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
                var istr = inS.startReadParams();
                IB2Prx iceP_p = default;
                iceP_p = IB2PrxHelper.read(istr);
                inS.endReadParams();
                var ret = obj.ib2op(iceP_p, current);
                var ostr = inS.startWriteParams();
                IB2PrxHelper.write(ostr, ret);
                inS.endWriteParams(ostr);
                return inS.setResult(ostr);
            }

            private static readonly string[] _all =
            {
                "iaop",
                "ib2op",
                "ice_id",
                "ice_ids",
                "ice_isA",
                "ice_ping"
            };

            public override global::System.Threading.Tasks.Task<global::Ice.OutputStream>
            iceDispatch(global::Ice.Internal.Incoming inS, global::Ice.Current current)
            {
                int pos = global::System.Array.BinarySearch(_all, current.operation, global::Ice.UtilInternal.StringUtil.OrdinalStringComparer);
                if(pos < 0)
                {
                    throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
                }

                switch(pos)
                {
                    case 0:
                    {
                        return global::Test.MA.IADisp_.iceD_iaop(this, inS, current);
                    }
                    case 1:
                    {
                        return iceD_ib2op(this, inS, current);
                    }
                    case 2:
                    {
                        return global::Ice.ObjectImpl.iceD_ice_id(this, inS, current);
                    }
                    case 3:
                    {
                        return global::Ice.ObjectImpl.iceD_ice_ids(this, inS, current);
                    }
                    case 4:
                    {
                        return global::Ice.ObjectImpl.iceD_ice_isA(this, inS, current);
                    }
                    case 5:
                    {
                        return global::Ice.ObjectImpl.iceD_ice_ping(this, inS, current);
                    }
                }

                global::System.Diagnostics.Debug.Assert(false);
                throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
            }

            #endregion
        }
    }

    namespace MA
    {
        [global::System.Runtime.InteropServices.ComVisible(false)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public abstract class ICDisp_ : global::Ice.ObjectImpl, IC
        {
            #region Slice operations

            public abstract ICPrx icop(ICPrx p, global::Ice.Current current = null);

            #endregion

            #region Inherited Slice operations

            public abstract global::Test.MB.IB2Prx ib2op(global::Test.MB.IB2Prx p, global::Ice.Current current = null);

            public abstract IAPrx iaop(IAPrx p, global::Ice.Current current = null);

            public abstract global::Test.MB.IB1Prx ib1op(global::Test.MB.IB1Prx p, global::Ice.Current current = null);

            #endregion

            #region Slice type-related members

            private static readonly string[] _ids =
            {
                "::Ice::Object",
                "::Test::MA::IA",
                "::Test::MA::IC",
                "::Test::MB::IB1",
                "::Test::MB::IB2"
            };

            public override bool ice_isA(string s, global::Ice.Current current = null)
            {
                return global::System.Array.BinarySearch(_ids, s, Ice.UtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            public override string[] ice_ids(global::Ice.Current current = null)
            {
                return _ids;
            }

            public override string ice_id(global::Ice.Current current = null)
            {
                return ice_staticId();
            }

            public static new string ice_staticId()
            {
                return "::Test::MA::IC";
            }

            #endregion

            #region Operation dispatch

            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
            iceD_icop(IC obj, global::Ice.Internal.Incoming inS, global::Ice.Current current)
            {
                global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
                var istr = inS.startReadParams();
                ICPrx iceP_p = default;
                iceP_p = ICPrxHelper.read(istr);
                inS.endReadParams();
                var ret = obj.icop(iceP_p, current);
                var ostr = inS.startWriteParams();
                ICPrxHelper.write(ostr, ret);
                inS.endWriteParams(ostr);
                return inS.setResult(ostr);
            }

            private static readonly string[] _all =
            {
                "iaop",
                "ib1op",
                "ib2op",
                "ice_id",
                "ice_ids",
                "ice_isA",
                "ice_ping",
                "icop"
            };

            public override global::System.Threading.Tasks.Task<global::Ice.OutputStream>
            iceDispatch(global::Ice.Internal.Incoming inS, global::Ice.Current current)
            {
                int pos = global::System.Array.BinarySearch(_all, current.operation, global::Ice.UtilInternal.StringUtil.OrdinalStringComparer);
                if(pos < 0)
                {
                    throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
                }

                switch(pos)
                {
                    case 0:
                    {
                        return IADisp_.iceD_iaop(this, inS, current);
                    }
                    case 1:
                    {
                        return global::Test.MB.IB1Disp_.iceD_ib1op(this, inS, current);
                    }
                    case 2:
                    {
                        return global::Test.MB.IB2Disp_.iceD_ib2op(this, inS, current);
                    }
                    case 3:
                    {
                        return global::Ice.ObjectImpl.iceD_ice_id(this, inS, current);
                    }
                    case 4:
                    {
                        return global::Ice.ObjectImpl.iceD_ice_ids(this, inS, current);
                    }
                    case 5:
                    {
                        return global::Ice.ObjectImpl.iceD_ice_isA(this, inS, current);
                    }
                    case 6:
                    {
                        return global::Ice.ObjectImpl.iceD_ice_ping(this, inS, current);
                    }
                    case 7:
                    {
                        return iceD_icop(this, inS, current);
                    }
                }

                global::System.Diagnostics.Debug.Assert(false);
                throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
            }

            #endregion
        }
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public abstract class InitialDisp_ : global::Ice.ObjectImpl, Initial
    {
        #region Slice operations

        public abstract void shutdown(global::Ice.Current current = null);

        public abstract global::Test.MA.IAPrx iaop(global::Ice.Current current = null);

        public abstract global::Test.MB.IB1Prx ib1op(global::Ice.Current current = null);

        public abstract global::Test.MB.IB2Prx ib2op(global::Ice.Current current = null);

        public abstract global::Test.MA.ICPrx icop(global::Ice.Current current = null);

        #endregion

        #region Slice type-related members

        private static readonly string[] _ids =
        {
            "::Ice::Object",
            "::Test::Initial"
        };

        public override bool ice_isA(string s, global::Ice.Current current = null)
        {
            return global::System.Array.BinarySearch(_ids, s, Ice.UtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids(global::Ice.Current current = null)
        {
            return _ids;
        }

        public override string ice_id(global::Ice.Current current = null)
        {
            return ice_staticId();
        }

        public static new string ice_staticId()
        {
            return "::Test::Initial";
        }

        #endregion

        #region Operation dispatch

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_shutdown(Initial obj, global::Ice.Internal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            obj.shutdown(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_iaop(Initial obj, global::Ice.Internal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            var ret = obj.iaop(current);
            var ostr = inS.startWriteParams();
            global::Test.MA.IAPrxHelper.write(ostr, ret);
            inS.endWriteParams(ostr);
            return inS.setResult(ostr);
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_ib1op(Initial obj, global::Ice.Internal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            var ret = obj.ib1op(current);
            var ostr = inS.startWriteParams();
            global::Test.MB.IB1PrxHelper.write(ostr, ret);
            inS.endWriteParams(ostr);
            return inS.setResult(ostr);
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_ib2op(Initial obj, global::Ice.Internal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            var ret = obj.ib2op(current);
            var ostr = inS.startWriteParams();
            global::Test.MB.IB2PrxHelper.write(ostr, ret);
            inS.endWriteParams(ostr);
            return inS.setResult(ostr);
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_icop(Initial obj, global::Ice.Internal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            var ret = obj.icop(current);
            var ostr = inS.startWriteParams();
            global::Test.MA.ICPrxHelper.write(ostr, ret);
            inS.endWriteParams(ostr);
            return inS.setResult(ostr);
        }

        private static readonly string[] _all =
        {
            "iaop",
            "ib1op",
            "ib2op",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "icop",
            "shutdown"
        };

        public override global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceDispatch(global::Ice.Internal.Incoming inS, global::Ice.Current current)
        {
            int pos = global::System.Array.BinarySearch(_all, current.operation, global::Ice.UtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return iceD_iaop(this, inS, current);
                }
                case 1:
                {
                    return iceD_ib1op(this, inS, current);
                }
                case 2:
                {
                    return iceD_ib2op(this, inS, current);
                }
                case 3:
                {
                    return global::Ice.ObjectImpl.iceD_ice_id(this, inS, current);
                }
                case 4:
                {
                    return global::Ice.ObjectImpl.iceD_ice_ids(this, inS, current);
                }
                case 5:
                {
                    return global::Ice.ObjectImpl.iceD_ice_isA(this, inS, current);
                }
                case 6:
                {
                    return global::Ice.ObjectImpl.iceD_ice_ping(this, inS, current);
                }
                case 7:
                {
                    return iceD_icop(this, inS, current);
                }
                case 8:
                {
                    return iceD_shutdown(this, inS, current);
                }
            }

            global::System.Diagnostics.Debug.Assert(false);
            throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public abstract class EchoDisp_ : global::Ice.ObjectImpl, Echo
    {
        #region Slice operations

        public abstract void setConnection(global::Ice.Current current = null);

        public abstract void startBatch(global::Ice.Current current = null);

        public abstract void flushBatch(global::Ice.Current current = null);

        public abstract void shutdown(global::Ice.Current current = null);

        #endregion

        #region Slice type-related members

        private static readonly string[] _ids =
        {
            "::Ice::Object",
            "::Test::Echo"
        };

        public override bool ice_isA(string s, global::Ice.Current current = null)
        {
            return global::System.Array.BinarySearch(_ids, s, Ice.UtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids(global::Ice.Current current = null)
        {
            return _ids;
        }

        public override string ice_id(global::Ice.Current current = null)
        {
            return ice_staticId();
        }

        public static new string ice_staticId()
        {
            return "::Test::Echo";
        }

        #endregion

        #region Operation dispatch

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_setConnection(Echo obj, global::Ice.Internal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            obj.setConnection(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_startBatch(Echo obj, global::Ice.Internal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            obj.startBatch(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_flushBatch(Echo obj, global::Ice.Internal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            obj.flushBatch(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_shutdown(Echo obj, global::Ice.Internal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            inS.readEmptyParams();
            obj.shutdown(current);
            return inS.setResult(inS.writeEmptyParams());
        }

        private static readonly string[] _all =
        {
            "flushBatch",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "setConnection",
            "shutdown",
            "startBatch"
        };

        public override global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceDispatch(global::Ice.Internal.Incoming inS, global::Ice.Current current)
        {
            int pos = global::System.Array.BinarySearch(_all, current.operation, global::Ice.UtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return iceD_flushBatch(this, inS, current);
                }
                case 1:
                {
                    return global::Ice.ObjectImpl.iceD_ice_id(this, inS, current);
                }
                case 2:
                {
                    return global::Ice.ObjectImpl.iceD_ice_ids(this, inS, current);
                }
                case 3:
                {
                    return global::Ice.ObjectImpl.iceD_ice_isA(this, inS, current);
                }
                case 4:
                {
                    return global::Ice.ObjectImpl.iceD_ice_ping(this, inS, current);
                }
                case 5:
                {
                    return iceD_setConnection(this, inS, current);
                }
                case 6:
                {
                    return iceD_shutdown(this, inS, current);
                }
                case 7:
                {
                    return iceD_startBatch(this, inS, current);
                }
            }

            global::System.Diagnostics.Debug.Assert(false);
            throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
        }

        #endregion
    }
}
