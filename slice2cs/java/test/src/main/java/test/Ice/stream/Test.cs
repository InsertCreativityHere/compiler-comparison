//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

#nullable enable

[assembly:Ice.Slice("Test.ice")]

#pragma warning disable 1591

namespace Test
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public enum MyEnum
    {
        enum1,
        enum2,
        enum3
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class MyEnumHelper
    {
        public static void write(Ice.OutputStream ostr, MyEnum v)
        {
            ostr.writeEnum((int)v, 2);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public static MyEnum read(Ice.InputStream istr)
        {
            MyEnum v;
            v = (MyEnum)istr.readEnum(2);
            return v;
        }
    }

    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public sealed partial class SmallStruct : global::System.IEquatable<SmallStruct>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public bool bo;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public byte by;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public short sh;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public int i;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public long l;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public float f;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public double d;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public string str = "";

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyEnum e;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyClass? c;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyInterfacePrx? p;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public byte[] ss;

        partial void ice_initialize();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public SmallStruct(byte[] ss)
        {
            this.ss = ss;
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public SmallStruct(bool bo, byte by, short sh, int i, long l, float f, double d, string str, MyEnum e, MyClass? c, MyInterfacePrx? p, byte[] ss)
        {
            this.bo = bo;
            this.by = by;
            this.sh = sh;
            this.i = i;
            this.l = l;
            this.f = f;
            this.d = d;
            this.str = str;
            this.e = e;
            this.c = c;
            this.p = p;
            this.ss = ss;
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public SmallStruct(Ice.InputStream istr)
        {
            this.bo = istr.readBool();
            this.by = istr.readByte();
            this.sh = istr.readShort();
            this.i = istr.readInt();
            this.l = istr.readLong();
            this.f = istr.readFloat();
            this.d = istr.readDouble();
            this.str = istr.readString();
            this.e = (MyEnum)istr.readEnum(2);
            istr.readValue((MyClass? v) => { this.c = v; });
            this.p = MyInterfacePrxHelper.read(istr);
            this.ss = SerialSmallHelper.read(istr);
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public SmallStruct Clone() => (SmallStruct)MemberwiseClone();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public override int GetHashCode()
        {
            var hash = new global::System.HashCode();
            hash.Add(this.bo);
            hash.Add(this.by);
            hash.Add(this.sh);
            hash.Add(this.i);
            hash.Add(this.l);
            hash.Add(this.f);
            hash.Add(this.d);
            hash.Add(this.str);
            hash.Add(this.e);
            hash.Add(this.c);
            hash.Add(this.p);
            Ice.UtilInternal.Collections.HashCodeAdd(ref hash, this.ss);
            return hash.ToHashCode();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public override bool Equals(object? other) => Equals(other as SmallStruct);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public bool Equals(SmallStruct? other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }
            return other is not null && 
                this.bo == other.bo && 
                this.by == other.by && 
                this.sh == other.sh && 
                this.i == other.i && 
                this.l == other.l && 
                this.f == other.f && 
                this.d == other.d && 
                this.str == other.str && 
                this.e == other.e && 
                this.c == other.c && 
                (Ice.ObjectPrxHelperBase?)this.p == (Ice.ObjectPrxHelperBase?)other.p && 
                Ice.UtilInternal.Collections.NullableSequenceEqual(this.ss, other.ss);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public static bool operator ==(SmallStruct? lhs, SmallStruct? rhs) => lhs is not null ? lhs.Equals(rhs) : rhs is null;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public static bool operator !=(SmallStruct? lhs, SmallStruct? rhs) => !(lhs == rhs);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public void ice_writeMembers(Ice.OutputStream ostr)
        {
            ostr.writeBool(this.bo);
            ostr.writeByte(this.by);
            ostr.writeShort(this.sh);
            ostr.writeInt(this.i);
            ostr.writeLong(this.l);
            ostr.writeFloat(this.f);
            ostr.writeDouble(this.d);
            ostr.writeString(this.str);
            ostr.writeEnum((int)this.e, 2);
            ostr.writeValue(this.c);
            MyInterfacePrxHelper.write(ostr, this.p);
            SerialSmallHelper.write(ostr, this.ss);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public static void ice_write(Ice.OutputStream ostr, SmallStruct v)
        {
            v.ice_writeMembers(ostr);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public static SmallStruct ice_read(Ice.InputStream istr) => new(istr);
    }

    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial record struct Point
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public int x;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public int y;

        partial void ice_initialize();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public Point(int x, int y)
        {
            this.x = x;
            this.y = y;
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public Point(Ice.InputStream istr)
        {
            this.x = istr.readInt();
            this.y = istr.readInt();
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public void ice_writeMembers(Ice.OutputStream ostr)
        {
            ostr.writeInt(this.x);
            ostr.writeInt(this.y);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public static void ice_write(Ice.OutputStream ostr, Point v)
        {
            v.ice_writeMembers(ostr);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public static Point ice_read(Ice.InputStream istr) => new(istr);
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    [Ice.SliceTypeId("::Test::OptionalClass")]
    public partial class OptionalClass : Ice.Value
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public bool bo;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public byte by;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public short? sh;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public int? i;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public SmallStruct? sm;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyEnum[]? enumS4;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyClass?[]? myClassS5;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public global::System.Collections.Generic.Dictionary<byte, bool>? byteBoolD6;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public global::System.Collections.Generic.Dictionary<short, int>? shortIntD7;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyEnum? enum8;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyClass?? class9;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public global::System.Collections.Generic.Dictionary<string, MyClass?>? stringMyClassD10;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public int[]? intSeq12;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public byte[]? byteSeq13;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public string[]? stringSeq14;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public Point? p15;

        partial void ice_initialize();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public OptionalClass(bool bo, byte by, short? sh, int? i, SmallStruct? sm, MyEnum[]? enumS4, MyClass?[]? myClassS5, global::System.Collections.Generic.Dictionary<byte, bool>? byteBoolD6, global::System.Collections.Generic.Dictionary<short, int>? shortIntD7, MyEnum? enum8, MyClass?? class9, global::System.Collections.Generic.Dictionary<string, MyClass?>? stringMyClassD10, int[]? intSeq12, byte[]? byteSeq13, string[]? stringSeq14, Point? p15)
        {
            this.bo = bo;
            this.by = by;
            this.sh = sh;
            this.i = i;
            this.sm = sm;
            this.enumS4 = enumS4;
            this.myClassS5 = myClassS5;
            this.byteBoolD6 = byteBoolD6;
            this.shortIntD7 = shortIntD7;
            this.enum8 = enum8;
            this.class9 = class9;
            this.stringMyClassD10 = stringMyClassD10;
            this.intSeq12 = intSeq12;
            this.byteSeq13 = byteSeq13;
            this.stringSeq14 = stringSeq14;
            this.p15 = p15;
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public OptionalClass()
        {
            ice_initialize();
        }

        private const string _id = "::Test::OptionalClass";

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public static new string ice_staticId()
        {
            return _id;
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public override string ice_id()
        {
            return _id;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        protected override void iceWriteImpl(Ice.OutputStream ostr_)
        {
            ostr_.startSlice(ice_staticId(), -1, true);
            ostr_.writeBool(bo);
            ostr_.writeByte(by);
            ostr_.writeShort(1, sh);
            ostr_.writeInt(2, i);
            if (sm is not null && ostr_.writeOptional(3, Ice.OptionalFormat.FSize))
            {
                int pos = ostr_.startSize();
                SmallStruct.ice_write(ostr_, sm);
                ostr_.endSize(pos);
            }
            if (enumS4 is not null && ostr_.writeOptional(4, Ice.OptionalFormat.FSize))
            {
                int pos = ostr_.startSize();
                MyEnumSHelper.write(ostr_, enumS4);
                ostr_.endSize(pos);
            }
            if (myClassS5 is not null && ostr_.writeOptional(5, Ice.OptionalFormat.FSize))
            {
                int pos = ostr_.startSize();
                MyClassSHelper.write(ostr_, myClassS5);
                ostr_.endSize(pos);
            }
            if (byteBoolD6 is not null && ostr_.writeOptional(6, Ice.OptionalFormat.VSize))
            {
                ostr_.writeSize(byteBoolD6.Count * 2 + (byteBoolD6.Count > 254 ? 5 : 1));
                ByteBoolDHelper.write(ostr_, byteBoolD6);
            }
            if (shortIntD7 is not null && ostr_.writeOptional(7, Ice.OptionalFormat.VSize))
            {
                ostr_.writeSize(shortIntD7.Count * 6 + (shortIntD7.Count > 254 ? 5 : 1));
                ShortIntDHelper.write(ostr_, shortIntD7);
            }
            if (enum8 is not null)
            {
                ostr_.writeEnum(8, (int)enum8.Value, 3);
            }
            ostr_.writeValue(9, class9);
            if (stringMyClassD10 is not null && ostr_.writeOptional(10, Ice.OptionalFormat.FSize))
            {
                int pos = ostr_.startSize();
                StringMyClassDHelper.write(ostr_, stringMyClassD10);
                ostr_.endSize(pos);
            }
            ostr_.writeIntSeq(12, intSeq12);
            ostr_.writeByteSeq(13, byteSeq13);
            ostr_.writeStringSeq(14, stringSeq14);
            if (p15 is not null && ostr_.writeOptional(15, Ice.OptionalFormat.VSize))
            {
                ostr_.writeSize(8);
                p15.Value.ice_writeMembers(ostr_);
            }
            ostr_.endSlice();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        protected override void iceReadImpl(Ice.InputStream istr_)
        {
            istr_.startSlice();
            bo = istr_.readBool();
            by = istr_.readByte();
            sh = istr_.readShort(1);
            i = istr_.readInt(2);
            if (istr_.readOptional(3, Ice.OptionalFormat.FSize))
            {
                istr_.skip(4);
                SmallStruct tmpVal;
                tmpVal = new SmallStruct(istr_);
                sm = tmpVal;
            }
            else
            {
                sm = null;
            }
            if (istr_.readOptional(4, Ice.OptionalFormat.FSize))
            {
                istr_.skip(4);
                MyEnum[] tmpVal;
                tmpVal = MyEnumSHelper.read(istr_);
                enumS4 = tmpVal;
            }
            else
            {
                enumS4 = null;
            }
            if (istr_.readOptional(5, Ice.OptionalFormat.FSize))
            {
                istr_.skip(4);
                MyClass?[] tmpVal;
                tmpVal = MyClassSHelper.read(istr_);
                myClassS5 = tmpVal;
            }
            else
            {
                myClassS5 = null;
            }
            if (istr_.readOptional(6, Ice.OptionalFormat.VSize))
            {
                istr_.skipSize();
                global::System.Collections.Generic.Dictionary<byte, bool> tmpVal = new global::System.Collections.Generic.Dictionary<byte, bool>();
                tmpVal = ByteBoolDHelper.read(istr_);
                byteBoolD6 = tmpVal;
            }
            else
            {
                byteBoolD6 = null;
            }
            if (istr_.readOptional(7, Ice.OptionalFormat.VSize))
            {
                istr_.skipSize();
                global::System.Collections.Generic.Dictionary<short, int> tmpVal = new global::System.Collections.Generic.Dictionary<short, int>();
                tmpVal = ShortIntDHelper.read(istr_);
                shortIntD7 = tmpVal;
            }
            else
            {
                shortIntD7 = null;
            }
            if (istr_.readOptional(8, Ice.OptionalFormat.Size))
            {
                MyEnum tmpVal;
                tmpVal = (MyEnum)istr_.readEnum(2);
                enum8 = tmpVal;
            }
            else
            {
                enum8 = null;
            }
            istr_.readValue(9, (MyClass? v) => { this.class9 = v; });
            if (istr_.readOptional(10, Ice.OptionalFormat.FSize))
            {
                istr_.skip(4);
                global::System.Collections.Generic.Dictionary<string, MyClass?> tmpVal = new global::System.Collections.Generic.Dictionary<string, MyClass?>();
                tmpVal = StringMyClassDHelper.read(istr_);
                stringMyClassD10 = tmpVal;
            }
            else
            {
                stringMyClassD10 = null;
            }
            if (istr_.readOptional(12, Ice.OptionalFormat.VSize))
            {
                istr_.skipSize();
                int[] tmpVal;
                tmpVal = global::Ice.IntSeqHelper.read(istr_);
                intSeq12 = tmpVal;
            }
            else
            {
                intSeq12 = null;
            }
            if (istr_.readOptional(13, Ice.OptionalFormat.VSize))
            {
                byte[] tmpVal;
                tmpVal = global::Ice.ByteSeqHelper.read(istr_);
                byteSeq13 = tmpVal;
            }
            else
            {
                byteSeq13 = null;
            }
            if (istr_.readOptional(14, Ice.OptionalFormat.FSize))
            {
                istr_.skip(4);
                string[] tmpVal;
                tmpVal = global::Ice.StringSeqHelper.read(istr_);
                stringSeq14 = tmpVal;
            }
            else
            {
                stringSeq14 = null;
            }
            if (istr_.readOptional(15, Ice.OptionalFormat.VSize))
            {
                istr_.skipSize();
                Point tmpVal;
                tmpVal = new Point(istr_);
                p15 = tmpVal;
            }
            else
            {
                p15 = null;
            }
            istr_.endSlice();
        }
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    [Ice.SliceTypeId("::Test::MyClass")]
    public partial class MyClass : Ice.Value
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyClass? c;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyInterfacePrx? prx;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public global::Ice.Value? o;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public SmallStruct s;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public bool[] seq1;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public byte[] seq2;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public short[] seq3;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public int[] seq4;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public long[] seq5;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public float[] seq6;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public double[] seq7;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public string[] seq8;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyEnum[] seq9;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyClass?[] seq10;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public global::System.Collections.Generic.Dictionary<string, MyClass?> d;

        partial void ice_initialize();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyClass(MyClass? c, MyInterfacePrx? prx, global::Ice.Value? o, SmallStruct s, bool[] seq1, byte[] seq2, short[] seq3, int[] seq4, long[] seq5, float[] seq6, double[] seq7, string[] seq8, MyEnum[] seq9, MyClass?[] seq10, global::System.Collections.Generic.Dictionary<string, MyClass?> d)
        {
            this.c = c;
            this.prx = prx;
            this.o = o;
            this.s = s;
            this.seq1 = seq1;
            this.seq2 = seq2;
            this.seq3 = seq3;
            this.seq4 = seq4;
            this.seq5 = seq5;
            this.seq6 = seq6;
            this.seq7 = seq7;
            this.seq8 = seq8;
            this.seq9 = seq9;
            this.seq10 = seq10;
            this.d = d;
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyClass(SmallStruct s, bool[] seq1, byte[] seq2, short[] seq3, int[] seq4, long[] seq5, float[] seq6, double[] seq7, string[] seq8, MyEnum[] seq9, MyClass?[] seq10, global::System.Collections.Generic.Dictionary<string, MyClass?> d)
        {
            this.s = s;
            this.seq1 = seq1;
            this.seq2 = seq2;
            this.seq3 = seq3;
            this.seq4 = seq4;
            this.seq5 = seq5;
            this.seq6 = seq6;
            this.seq7 = seq7;
            this.seq8 = seq8;
            this.seq9 = seq9;
            this.seq10 = seq10;
            this.d = d;
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public MyClass()
        {
            this.s = null!;
            this.seq1 = null!;
            this.seq2 = null!;
            this.seq3 = null!;
            this.seq4 = null!;
            this.seq5 = null!;
            this.seq6 = null!;
            this.seq7 = null!;
            this.seq8 = null!;
            this.seq9 = null!;
            this.seq10 = null!;
            this.d = null!;
            ice_initialize();
        }

        private const string _id = "::Test::MyClass";

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public static new string ice_staticId()
        {
            return _id;
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public override string ice_id()
        {
            return _id;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        protected override void iceWriteImpl(Ice.OutputStream ostr_)
        {
            ostr_.startSlice(ice_staticId(), -1, true);
            ostr_.writeValue(c);
            MyInterfacePrxHelper.write(ostr_, prx);
            ostr_.writeValue(o);
            SmallStruct.ice_write(ostr_, s);
            global::Ice.BoolSeqHelper.write(ostr_, seq1);
            global::Ice.ByteSeqHelper.write(ostr_, seq2);
            global::Ice.ShortSeqHelper.write(ostr_, seq3);
            global::Ice.IntSeqHelper.write(ostr_, seq4);
            global::Ice.LongSeqHelper.write(ostr_, seq5);
            global::Ice.FloatSeqHelper.write(ostr_, seq6);
            global::Ice.DoubleSeqHelper.write(ostr_, seq7);
            global::Ice.StringSeqHelper.write(ostr_, seq8);
            MyEnumSHelper.write(ostr_, seq9);
            MyClassSHelper.write(ostr_, seq10);
            StringMyClassDHelper.write(ostr_, d);
            ostr_.endSlice();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        protected override void iceReadImpl(Ice.InputStream istr_)
        {
            istr_.startSlice();
            istr_.readValue((MyClass? v) => { this.c = v; });
            prx = MyInterfacePrxHelper.read(istr_);
            istr_.readValue((global::Ice.Value? v) => { this.o = v; });
            s = new SmallStruct(istr_);
            seq1 = global::Ice.BoolSeqHelper.read(istr_);
            seq2 = global::Ice.ByteSeqHelper.read(istr_);
            seq3 = global::Ice.ShortSeqHelper.read(istr_);
            seq4 = global::Ice.IntSeqHelper.read(istr_);
            seq5 = global::Ice.LongSeqHelper.read(istr_);
            seq6 = global::Ice.FloatSeqHelper.read(istr_);
            seq7 = global::Ice.DoubleSeqHelper.read(istr_);
            seq8 = global::Ice.StringSeqHelper.read(istr_);
            seq9 = MyEnumSHelper.read(istr_);
            seq10 = MyClassSHelper.read(istr_);
            d = StringMyClassDHelper.read(istr_);
            istr_.endSlice();
        }
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    [Ice.SliceTypeId("::Test::MyException")]
    public partial class MyException : Ice.UserException
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyClass? c;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyException(MyClass? c, global::System.Exception? innerException = null) : base(innerException)
        {
            this.c = c;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyException(global::System.Exception? innerException) : base(innerException)
        {
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public MyException()
        {
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public override string ice_id()
        {
            return "::Test::MyException";
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        protected override void iceWriteImpl(Ice.OutputStream ostr_)
        {
            ostr_.startSlice("::Test::MyException", -1, true);
            ostr_.writeValue(c);
            ostr_.endSlice();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        protected override void iceReadImpl(Ice.InputStream istr_)
        {
            istr_.startSlice();
            istr_.readValue((MyClass? v) => { this.c = v; });
            istr_.endSlice();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
        public override bool iceUsesClasses()
        {
            return true;
        }
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    [Ice.SliceTypeId("::Test::MyInterface")]
    public partial interface MyInterface : Ice.Object
    {
    }
}

namespace Test
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public interface MyInterfacePrx : Ice.ObjectPrx
    {
    }
}

namespace Test
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class SerialSmallHelper
    {
        public static void write(Ice.OutputStream ostr, byte[] v)
        {
            ostr.writeByteSeq(v);
        }

        public static byte[] read(Ice.InputStream istr)
        {
            byte[] v;
            v = istr.readByteSeq();
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class MyEnumSHelper
    {
        public static void write(Ice.OutputStream ostr, MyEnum[] v)
        {
            if (v is null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Length);
                for(int ix = 0; ix < v.Length; ++ix)
                {
                    ostr.writeEnum((int)v[ix], 2);
                }
            }
        }

        public static MyEnum[] read(Ice.InputStream istr)
        {
            MyEnum[] v;
            {
                int szx = istr.readAndCheckSeqSize(1);
                v = new MyEnum[szx];
                for(int ix = 0; ix < szx; ++ix)
                {
                    v[ix] = (MyEnum)istr.readEnum(2);
                }
            }
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class MyClassSHelper
    {
        public static void write(Ice.OutputStream ostr, MyClass?[] v)
        {
            if (v is null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Length);
                for(int ix = 0; ix < v.Length; ++ix)
                {
                    ostr.writeValue(v[ix]);
                }
            }
        }

        public static MyClass?[] read(Ice.InputStream istr)
        {
            MyClass?[] v;
            {
                int szx = istr.readAndCheckSeqSize(1);
                v = new MyClass?[szx];
                for (int ix = 0; ix < szx; ++ix)
                {
                    istr.readValue(Ice.Internal.Patcher.arrayReadValue<MyClass>(v, ix));
                }
            }
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class ByteBoolDHelper
    {
        public static void write(Ice.OutputStream ostr,
                                 global::System.Collections.Generic.Dictionary<byte, bool> v)
        {
            if(v == null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Count);
                foreach(global::System.Collections.Generic.KeyValuePair<byte, bool> e in v)
                {
                    ostr.writeByte(e.Key);
                    ostr.writeBool(e.Value);
                }
            }
        }

        public static global::System.Collections.Generic.Dictionary<byte, bool> read(Ice.InputStream istr)
        {
            int sz = istr.readSize();
            global::System.Collections.Generic.Dictionary<byte, bool> r = new global::System.Collections.Generic.Dictionary<byte, bool>();
            for(int i = 0; i < sz; ++i)
            {
                byte k;
                k = istr.readByte();
                bool v;
                v = istr.readBool();
                r[k] = v;
            }
            return r;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class ShortIntDHelper
    {
        public static void write(Ice.OutputStream ostr,
                                 global::System.Collections.Generic.Dictionary<short, int> v)
        {
            if(v == null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Count);
                foreach(global::System.Collections.Generic.KeyValuePair<short, int> e in v)
                {
                    ostr.writeShort(e.Key);
                    ostr.writeInt(e.Value);
                }
            }
        }

        public static global::System.Collections.Generic.Dictionary<short, int> read(Ice.InputStream istr)
        {
            int sz = istr.readSize();
            global::System.Collections.Generic.Dictionary<short, int> r = new global::System.Collections.Generic.Dictionary<short, int>();
            for(int i = 0; i < sz; ++i)
            {
                short k;
                k = istr.readShort();
                int v;
                v = istr.readInt();
                r[k] = v;
            }
            return r;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class StringMyClassDHelper
    {
        public static void write(Ice.OutputStream ostr,
                                 global::System.Collections.Generic.Dictionary<string, MyClass?> v)
        {
            if(v == null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Count);
                foreach(global::System.Collections.Generic.KeyValuePair<string, MyClass?> e in v)
                {
                    ostr.writeString(e.Key);
                    ostr.writeValue(e.Value);
                }
            }
        }

        public static global::System.Collections.Generic.Dictionary<string, MyClass?> read(Ice.InputStream istr)
        {
            int sz = istr.readSize();
            global::System.Collections.Generic.Dictionary<string, MyClass?> r = new global::System.Collections.Generic.Dictionary<string, MyClass?>();
            for(int i = 0; i < sz; ++i)
            {
                string k;
                k = istr.readString();
                istr.readValue((MyClass? v) => { r[k] = v; });
            }
            return r;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class BoolSSHelper
    {
        public static void write(Ice.OutputStream ostr, bool[][] v)
        {
            if (v is null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Length);
                for(int ix = 0; ix < v.Length; ++ix)
                {
                    global::Ice.BoolSeqHelper.write(ostr, v[ix]);
                }
            }
        }

        public static bool[][] read(Ice.InputStream istr)
        {
            bool[][] v;
            {
                int szx = istr.readAndCheckSeqSize(1);
                v = new bool[szx][];
                for(int ix = 0; ix < szx; ++ix)
                {
                    v[ix] = global::Ice.BoolSeqHelper.read(istr);
                }
            }
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class ByteSSHelper
    {
        public static void write(Ice.OutputStream ostr, byte[][] v)
        {
            if (v is null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Length);
                for(int ix = 0; ix < v.Length; ++ix)
                {
                    global::Ice.ByteSeqHelper.write(ostr, v[ix]);
                }
            }
        }

        public static byte[][] read(Ice.InputStream istr)
        {
            byte[][] v;
            {
                int szx = istr.readAndCheckSeqSize(1);
                v = new byte[szx][];
                for(int ix = 0; ix < szx; ++ix)
                {
                    v[ix] = global::Ice.ByteSeqHelper.read(istr);
                }
            }
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class ShortSSHelper
    {
        public static void write(Ice.OutputStream ostr, short[][] v)
        {
            if (v is null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Length);
                for(int ix = 0; ix < v.Length; ++ix)
                {
                    global::Ice.ShortSeqHelper.write(ostr, v[ix]);
                }
            }
        }

        public static short[][] read(Ice.InputStream istr)
        {
            short[][] v;
            {
                int szx = istr.readAndCheckSeqSize(1);
                v = new short[szx][];
                for(int ix = 0; ix < szx; ++ix)
                {
                    v[ix] = global::Ice.ShortSeqHelper.read(istr);
                }
            }
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class IntSSHelper
    {
        public static void write(Ice.OutputStream ostr, int[][] v)
        {
            if (v is null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Length);
                for(int ix = 0; ix < v.Length; ++ix)
                {
                    global::Ice.IntSeqHelper.write(ostr, v[ix]);
                }
            }
        }

        public static int[][] read(Ice.InputStream istr)
        {
            int[][] v;
            {
                int szx = istr.readAndCheckSeqSize(1);
                v = new int[szx][];
                for(int ix = 0; ix < szx; ++ix)
                {
                    v[ix] = global::Ice.IntSeqHelper.read(istr);
                }
            }
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class LongSSHelper
    {
        public static void write(Ice.OutputStream ostr, long[][] v)
        {
            if (v is null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Length);
                for(int ix = 0; ix < v.Length; ++ix)
                {
                    global::Ice.LongSeqHelper.write(ostr, v[ix]);
                }
            }
        }

        public static long[][] read(Ice.InputStream istr)
        {
            long[][] v;
            {
                int szx = istr.readAndCheckSeqSize(1);
                v = new long[szx][];
                for(int ix = 0; ix < szx; ++ix)
                {
                    v[ix] = global::Ice.LongSeqHelper.read(istr);
                }
            }
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class FloatSSHelper
    {
        public static void write(Ice.OutputStream ostr, float[][] v)
        {
            if (v is null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Length);
                for(int ix = 0; ix < v.Length; ++ix)
                {
                    global::Ice.FloatSeqHelper.write(ostr, v[ix]);
                }
            }
        }

        public static float[][] read(Ice.InputStream istr)
        {
            float[][] v;
            {
                int szx = istr.readAndCheckSeqSize(1);
                v = new float[szx][];
                for(int ix = 0; ix < szx; ++ix)
                {
                    v[ix] = global::Ice.FloatSeqHelper.read(istr);
                }
            }
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class DoubleSSHelper
    {
        public static void write(Ice.OutputStream ostr, double[][] v)
        {
            if (v is null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Length);
                for(int ix = 0; ix < v.Length; ++ix)
                {
                    global::Ice.DoubleSeqHelper.write(ostr, v[ix]);
                }
            }
        }

        public static double[][] read(Ice.InputStream istr)
        {
            double[][] v;
            {
                int szx = istr.readAndCheckSeqSize(1);
                v = new double[szx][];
                for(int ix = 0; ix < szx; ++ix)
                {
                    v[ix] = global::Ice.DoubleSeqHelper.read(istr);
                }
            }
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class StringSSHelper
    {
        public static void write(Ice.OutputStream ostr, string[][] v)
        {
            if (v is null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Length);
                for(int ix = 0; ix < v.Length; ++ix)
                {
                    global::Ice.StringSeqHelper.write(ostr, v[ix]);
                }
            }
        }

        public static string[][] read(Ice.InputStream istr)
        {
            string[][] v;
            {
                int szx = istr.readAndCheckSeqSize(1);
                v = new string[szx][];
                for(int ix = 0; ix < szx; ++ix)
                {
                    v[ix] = global::Ice.StringSeqHelper.read(istr);
                }
            }
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class MyEnumSSHelper
    {
        public static void write(Ice.OutputStream ostr, MyEnum[][] v)
        {
            if (v is null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Length);
                for(int ix = 0; ix < v.Length; ++ix)
                {
                    MyEnumSHelper.write(ostr, v[ix]);
                }
            }
        }

        public static MyEnum[][] read(Ice.InputStream istr)
        {
            MyEnum[][] v;
            {
                int szx = istr.readAndCheckSeqSize(1);
                v = new MyEnum[szx][];
                for(int ix = 0; ix < szx; ++ix)
                {
                    v[ix] = MyEnumSHelper.read(istr);
                }
            }
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class MyClassSSHelper
    {
        public static void write(Ice.OutputStream ostr, MyClass?[][] v)
        {
            if (v is null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Length);
                for(int ix = 0; ix < v.Length; ++ix)
                {
                    MyClassSHelper.write(ostr, v[ix]);
                }
            }
        }

        public static MyClass?[][] read(Ice.InputStream istr)
        {
            MyClass?[][] v;
            {
                int szx = istr.readAndCheckSeqSize(1);
                v = new MyClass?[szx][];
                for(int ix = 0; ix < szx; ++ix)
                {
                    v[ix] = MyClassSHelper.read(istr);
                }
            }
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class LongFloatDHelper
    {
        public static void write(Ice.OutputStream ostr,
                                 global::System.Collections.Generic.Dictionary<long, float> v)
        {
            if(v == null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Count);
                foreach(global::System.Collections.Generic.KeyValuePair<long, float> e in v)
                {
                    ostr.writeLong(e.Key);
                    ostr.writeFloat(e.Value);
                }
            }
        }

        public static global::System.Collections.Generic.Dictionary<long, float> read(Ice.InputStream istr)
        {
            int sz = istr.readSize();
            global::System.Collections.Generic.Dictionary<long, float> r = new global::System.Collections.Generic.Dictionary<long, float>();
            for(int i = 0; i < sz; ++i)
            {
                long k;
                k = istr.readLong();
                float v;
                v = istr.readFloat();
                r[k] = v;
            }
            return r;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class StringStringDHelper
    {
        public static void write(Ice.OutputStream ostr,
                                 global::System.Collections.Generic.Dictionary<string, string> v)
        {
            if(v == null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Count);
                foreach(global::System.Collections.Generic.KeyValuePair<string, string> e in v)
                {
                    ostr.writeString(e.Key);
                    ostr.writeString(e.Value);
                }
            }
        }

        public static global::System.Collections.Generic.Dictionary<string, string> read(Ice.InputStream istr)
        {
            int sz = istr.readSize();
            global::System.Collections.Generic.Dictionary<string, string> r = new global::System.Collections.Generic.Dictionary<string, string>();
            for(int i = 0; i < sz; ++i)
            {
                string k;
                k = istr.readString();
                string v;
                v = istr.readString();
                r[k] = v;
            }
            return r;
        }
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public sealed class MyInterfacePrxHelper : Ice.ObjectPrxHelperBase, MyInterfacePrx
    {
        public MyInterfacePrxHelper()
        {
        }

        public static MyInterfacePrx createProxy(Ice.Communicator communicator, string proxyString) =>
            uncheckedCast(Ice.ObjectPrxHelper.createProxy(communicator, proxyString));

        public static MyInterfacePrx? checkedCast(Ice.ObjectPrx b, global::System.Collections.Generic.Dictionary<string, string>? ctx = null)
        {
            if (b is not null && b.ice_isA(ice_staticId(), ctx))
            {
                MyInterfacePrxHelper prx = new MyInterfacePrxHelper();
                prx.iceCopyFrom(b);
                return prx;
            }
            return null;
        }

        public static MyInterfacePrx? checkedCast(Ice.ObjectPrx b, string f, global::System.Collections.Generic.Dictionary<string, string>? ctx = null)
        {
            Ice.ObjectPrx? bb = b?.ice_facet(f);
            try
            {
                if (bb is not null && bb.ice_isA(ice_staticId(), ctx))
                {
                    MyInterfacePrxHelper prx = new MyInterfacePrxHelper();
                    prx.iceCopyFrom(bb);
                    return prx;
                }
            }
            catch (Ice.FacetNotExistException)
            {
            }
            return null;
        }

        [return: global::System.Diagnostics.CodeAnalysis.NotNullIfNotNull(nameof(b))]

        public static MyInterfacePrx? uncheckedCast(Ice.ObjectPrx? b)
        {
            if (b is not null)
            {
                var prx = new MyInterfacePrxHelper();
                prx.iceCopyFrom(b);
                return prx;
            }
            return null;
        }

        [return: global::System.Diagnostics.CodeAnalysis.NotNullIfNotNull(nameof(b))]

        public static MyInterfacePrx? uncheckedCast(Ice.ObjectPrx? b, string f)
        {
            if (b is not null)
            {
                Ice.ObjectPrx? bb = b.ice_facet(f);
                var prx = new MyInterfacePrxHelper();
                prx.iceCopyFrom(bb);
                return prx;
            }
            return null;
        }

        private static readonly string[] _ids =
        {
            "::Ice::Object",
            "::Test::MyInterface"
        };

        public static string ice_staticId() => "::Test::MyInterface";

        public static void write(Ice.OutputStream ostr, MyInterfacePrx? v)
        {
            ostr.writeProxy(v);
        }

        public static MyInterfacePrx? read(Ice.InputStream istr)
        {
            Ice.ObjectPrx? proxy = istr.readProxy();
            if (proxy is not null)
            {
                 var result = new MyInterfacePrxHelper();
                result.iceCopyFrom(proxy);
                return result;
            }
            return null;
        }
    }
}

namespace Test
{
    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.8.0-alpha.0")]
    public abstract class MyInterfaceDisp_ : Ice.ObjectImpl, MyInterface
    {
        public override string ice_id(Ice.Current current) => ice_staticId();

        public static new string ice_staticId() => "::Test::MyInterface";
    }
}

namespace Test
{
}
