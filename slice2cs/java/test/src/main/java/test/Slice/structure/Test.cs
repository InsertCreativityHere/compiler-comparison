//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

#nullable enable

[assembly:Ice.Slice("Test.ice")]

#pragma warning disable CS1591 // Missing XML Comment
#pragma warning disable CS1573 // Parameter has no matching param tag in the XML comment
#pragma warning disable CS0612 // Type or member is obsolete
#pragma warning disable CS0618 // Type or member is obsolete
#pragma warning disable CS0619 // Type or member is obsolete

namespace Test
{
    [Ice.SliceTypeId("::Test::C")]
    public partial class C : Ice.Value
    {
        public int i;

        partial void ice_initialize();

        public C(int i)
        {
            this.i = i;
            ice_initialize();
        }

        public C()
        {
            ice_initialize();
        }

        public static new string ice_staticId() => "::Test::C";
        public override string ice_id() => ice_staticId();

        protected override void iceWriteImpl(Ice.OutputStream ostr_)
        {
            ostr_.startSlice(ice_staticId(), -1, true);
            ostr_.writeInt(i);
            ostr_.endSlice();
        }

        protected override void iceReadImpl(Ice.InputStream istr_)
        {
            istr_.startSlice();
            i = istr_.readInt();
            istr_.endSlice();
        }
    }

    public sealed partial record class S1
    {
        public string name = "";

        partial void ice_initialize();

        public S1()
        {
            ice_initialize();
        }

        public S1(string name)
        {
            global::System.ArgumentNullException.ThrowIfNull(name);
            this.name = name;
            ice_initialize();
        }

        public S1(Ice.InputStream istr)
        {
            this.name = istr.readString();
            ice_initialize();
        }

        public void ice_writeMembers(Ice.OutputStream ostr)
        {
            ostr.writeString(this.name);
        }

        public static void ice_write(Ice.OutputStream ostr, S1 v)
        {
            v.ice_writeMembers(ostr);
        }

        public static S1 ice_read(Ice.InputStream istr) => new(istr);
    }

    public sealed partial record class S2
    {
        public bool bo;

        public byte by;

        public short sh;

        public int i;

        public long l;

        public float f;

        public double d;

        public string str = "";

        public string[] ss;

        public int[] il;

        public global::System.Collections.Generic.Dictionary<string, string> sd;

        public S1 s;

        public C? cls;

        public global::Ice.ObjectPrx? prx;

        partial void ice_initialize();

        public S2(string[] ss, int[] il, global::System.Collections.Generic.Dictionary<string, string> sd, S1 s)
        {
            global::System.ArgumentNullException.ThrowIfNull(ss);
            this.ss = ss;
            global::System.ArgumentNullException.ThrowIfNull(il);
            this.il = il;
            global::System.ArgumentNullException.ThrowIfNull(sd);
            this.sd = sd;
            global::System.ArgumentNullException.ThrowIfNull(s);
            this.s = s;
            ice_initialize();
        }

        public S2(bool bo, byte by, short sh, int i, long l, float f, double d, string str, string[] ss, int[] il, global::System.Collections.Generic.Dictionary<string, string> sd, S1 s, C? cls, global::Ice.ObjectPrx? prx)
        {
            this.bo = bo;
            this.by = by;
            this.sh = sh;
            this.i = i;
            this.l = l;
            this.f = f;
            this.d = d;
            global::System.ArgumentNullException.ThrowIfNull(str);
            this.str = str;
            global::System.ArgumentNullException.ThrowIfNull(ss);
            this.ss = ss;
            global::System.ArgumentNullException.ThrowIfNull(il);
            this.il = il;
            global::System.ArgumentNullException.ThrowIfNull(sd);
            this.sd = sd;
            global::System.ArgumentNullException.ThrowIfNull(s);
            this.s = s;
            this.cls = cls;
            this.prx = prx;
            ice_initialize();
        }

        public S2(Ice.InputStream istr)
        {
            this.bo = istr.readBool();
            this.by = istr.readByte();
            this.sh = istr.readShort();
            this.i = istr.readInt();
            this.l = istr.readLong();
            this.f = istr.readFloat();
            this.d = istr.readDouble();
            this.str = istr.readString();
            this.ss = StringSeqHelper.read(istr);
            this.il = IntListHelper.read(istr);
            this.sd = StringDictHelper.read(istr);
            this.s = new S1(istr);
            istr.readValue((C? v) => { this.cls = v; });
            this.prx = istr.readProxy();
            ice_initialize();
        }

        public void ice_writeMembers(Ice.OutputStream ostr)
        {
            ostr.writeBool(this.bo);
            ostr.writeByte(this.by);
            ostr.writeShort(this.sh);
            ostr.writeInt(this.i);
            ostr.writeLong(this.l);
            ostr.writeFloat(this.f);
            ostr.writeDouble(this.d);
            ostr.writeString(this.str);
            StringSeqHelper.write(ostr, this.ss);
            IntListHelper.write(ostr, this.il);
            StringDictHelper.write(ostr, this.sd);
            S1.ice_write(ostr, this.s);
            ostr.writeValue(this.cls);
            ostr.writeProxy(this.prx);
        }

        public static void ice_write(Ice.OutputStream ostr, S2 v)
        {
            v.ice_writeMembers(ostr);
        }

        public static S2 ice_read(Ice.InputStream istr) => new(istr);
    }
}

namespace Test
{
    public sealed class StringSeqHelper
    {
        public static void write(Ice.OutputStream ostr, string[] v)
        {
            ostr.writeStringSeq(v);
        }

        public static string[] read(Ice.InputStream istr)
        {
            string[] v;
            v = istr.readStringSeq();
            return v;
        }
    }

    public sealed class IntListHelper
    {
        public static void write(Ice.OutputStream ostr, int[] v)
        {
            ostr.writeIntSeq(v);
        }

        public static int[] read(Ice.InputStream istr)
        {
            int[] v;
            v = istr.readIntSeq();
            return v;
        }
    }

    public sealed class StringDictHelper
    {
        public static void write(Ice.OutputStream ostr,
                                 global::System.Collections.Generic.Dictionary<string, string> v)
        {
            if(v == null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Count);
                foreach(global::System.Collections.Generic.KeyValuePair<string, string> e in v)
                {
                    ostr.writeString(e.Key);
                    ostr.writeString(e.Value);
                }
            }
        }

        public static global::System.Collections.Generic.Dictionary<string, string> read(Ice.InputStream istr)
        {
            int sz = istr.readSize();
            global::System.Collections.Generic.Dictionary<string, string> r = new global::System.Collections.Generic.Dictionary<string, string>();
            for(int i = 0; i < sz; ++i)
            {
                string k;
                k = istr.readString();
                string v;
                v = istr.readString();
                r[k] = v;
            }
            return r;
        }
    }
}
